09/21/2023, 03:01:33# labels of 5000: tensor([43, 43], device='cuda:0') torch.Size([2])
09/21/2023, 03:01:33# predicted of 5000: tensor([43, 43], device='cuda:0') torch.Size([2])
09/21/2023, 03:02:16# labels of 10000: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 03:02:16# predicted of 10000: tensor([91], device='cuda:0') torch.Size([1])
09/21/2023, 03:02:59# labels of 15000: tensor([132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132,  65,  65, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132], device='cuda:0') torch.Size([218])
09/21/2023, 03:02:59# predicted of 15000: tensor([  6, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132,  65,  65, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132], device='cuda:0') torch.Size([218])
09/21/2023, 03:03:42# labels of 20000: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 03:03:42# predicted of 20000: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 03:04:25# labels of 25000: tensor([10, 10], device='cuda:0') torch.Size([2])
09/21/2023, 03:04:25# predicted of 25000: tensor([10, 10], device='cuda:0') torch.Size([2])
09/21/2023, 03:05:08# labels of 30000: tensor([15, 15, 15], device='cuda:0') torch.Size([3])
09/21/2023, 03:05:08# predicted of 30000: tensor([15, 15, 15], device='cuda:0') torch.Size([3])
09/21/2023, 03:05:50# labels of 35000: tensor([100, 100, 100, 100, 100, 100], device='cuda:0') torch.Size([6])
09/21/2023, 03:05:50# predicted of 35000: tensor([100, 100, 100, 100, 100, 100], device='cuda:0') torch.Size([6])
09/21/2023, 03:07:13# labels of 5000: tensor([43, 43], device='cuda:0') torch.Size([2])
09/21/2023, 03:07:13# predicted of 5000: tensor([43, 43], device='cuda:0') torch.Size([2])
09/21/2023, 03:07:56# labels of 10000: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 03:07:56# predicted of 10000: tensor([91], device='cuda:0') torch.Size([1])
09/21/2023, 03:08:53# labels of 5000: tensor([43, 43], device='cuda:0') torch.Size([2])
09/21/2023, 03:08:53# predicted of 5000: tensor([43, 43], device='cuda:0') torch.Size([2])
09/21/2023, 03:09:36# labels of 10000: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 03:09:36# predicted of 10000: tensor([91], device='cuda:0') torch.Size([1])
09/21/2023, 03:10:19# labels of 15000: tensor([132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132,  65,  65, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132], device='cuda:0') torch.Size([218])
09/21/2023, 03:10:19# predicted of 15000: tensor([  6, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132,  65,  65, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132], device='cuda:0') torch.Size([218])
09/21/2023, 03:11:02# labels of 20000: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 03:11:02# predicted of 20000: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 03:11:45# labels of 25000: tensor([10, 10], device='cuda:0') torch.Size([2])
09/21/2023, 03:11:45# predicted of 25000: tensor([10, 10], device='cuda:0') torch.Size([2])
09/21/2023, 03:12:28# labels of 30000: tensor([15, 15, 15], device='cuda:0') torch.Size([3])
09/21/2023, 03:12:28# predicted of 30000: tensor([15, 15, 15], device='cuda:0') torch.Size([3])
09/21/2023, 03:13:10# labels of 35000: tensor([100, 100, 100, 100, 100, 100], device='cuda:0') torch.Size([6])
09/21/2023, 03:13:10# predicted of 35000: tensor([100, 100, 100, 100, 100, 100], device='cuda:0') torch.Size([6])
09/21/2023, 03:13:53# labels of 40000: tensor([158], device='cuda:0') torch.Size([1])
09/21/2023, 03:13:53# predicted of 40000: tensor([125], device='cuda:0') torch.Size([1])
09/21/2023, 03:14:36# labels of 45000: tensor([155,  65, 155, 155, 155], device='cuda:0') torch.Size([5])
09/21/2023, 03:14:36# predicted of 45000: tensor([155,  65, 155, 155, 155], device='cuda:0') torch.Size([5])
09/21/2023, 03:15:19# labels of 50000: tensor([136, 136, 136, 136, 136, 136, 136], device='cuda:0') torch.Size([7])
09/21/2023, 03:15:19# predicted of 50000: tensor([136, 136, 136, 136, 136, 136, 136], device='cuda:0') torch.Size([7])
09/21/2023, 03:16:02# labels of 55000: tensor([34], device='cuda:0') torch.Size([1])
09/21/2023, 03:16:02# predicted of 55000: tensor([34], device='cuda:0') torch.Size([1])
09/21/2023, 03:16:45# labels of 60000: tensor([71, 71, 71, 71, 71, 71], device='cuda:0') torch.Size([6])
09/21/2023, 03:16:45# predicted of 60000: tensor([71, 71, 71, 71, 71, 71], device='cuda:0') torch.Size([6])
09/21/2023, 03:17:28# labels of 65000: tensor([47], device='cuda:0') torch.Size([1])
09/21/2023, 03:17:28# predicted of 65000: tensor([108], device='cuda:0') torch.Size([1])
09/21/2023, 03:18:11# labels of 70000: tensor([125], device='cuda:0') torch.Size([1])
09/21/2023, 03:18:11# predicted of 70000: tensor([47], device='cuda:0') torch.Size([1])
09/21/2023, 03:18:51# labels of 75000: tensor([83], device='cuda:0') torch.Size([1])
09/21/2023, 03:18:51# predicted of 75000: tensor([75], device='cuda:0') torch.Size([1])
09/21/2023, 03:19:35# labels of 80000: tensor([41, 41, 41, 41, 41], device='cuda:0') torch.Size([5])
09/21/2023, 03:19:35# predicted of 80000: tensor([41, 41, 41, 41, 41], device='cuda:0') torch.Size([5])
09/21/2023, 03:20:17# labels of 85000: tensor([21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21], device='cuda:0') torch.Size([11])
09/21/2023, 03:20:17# predicted of 85000: tensor([21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21], device='cuda:0') torch.Size([11])
09/21/2023, 03:21:00# labels of 90000: tensor([69, 69, 69, 69, 69, 69], device='cuda:0') torch.Size([6])
09/21/2023, 03:21:00# predicted of 90000: tensor([69, 69, 69, 69, 69, 69], device='cuda:0') torch.Size([6])
09/21/2023, 03:21:43# labels of 95000: tensor([80, 80, 80, 80, 80, 80], device='cuda:0') torch.Size([6])
09/21/2023, 03:21:43# predicted of 95000: tensor([80, 80, 80, 80, 80, 80], device='cuda:0') torch.Size([6])
09/21/2023, 03:22:26# labels of 100000: tensor([99, 99, 99, 99, 99, 99, 99, 99, 99, 65, 99, 99, 99, 99, 99, 99, 99, 99,
        99, 99, 99, 99, 99], device='cuda:0') torch.Size([23])
09/21/2023, 03:22:26# predicted of 100000: tensor([99, 99, 99, 99, 99, 99, 99, 99, 99, 65, 99, 99, 99, 99, 99, 99, 99, 99,
        99, 99, 99, 99, 99], device='cuda:0') torch.Size([23])
09/21/2023, 03:23:09# labels of 105000: tensor([20, 20], device='cuda:0') torch.Size([2])
09/21/2023, 03:23:09# predicted of 105000: tensor([20, 20], device='cuda:0') torch.Size([2])
09/21/2023, 03:23:52# labels of 110000: tensor([67, 67, 67, 67, 67], device='cuda:0') torch.Size([5])
09/21/2023, 03:23:52# predicted of 110000: tensor([67, 79, 79, 79, 79], device='cuda:0') torch.Size([5])
09/21/2023, 03:24:35# labels of 115000: tensor([7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],
       device='cuda:0') torch.Size([67])
09/21/2023, 03:24:35# predicted of 115000: tensor([7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],
       device='cuda:0') torch.Size([67])
09/21/2023, 03:25:18# labels of 120000: tensor([48], device='cuda:0') torch.Size([1])
09/21/2023, 03:25:18# predicted of 120000: tensor([158], device='cuda:0') torch.Size([1])
09/21/2023, 03:26:01# labels of 125000: tensor([115, 115, 115, 115, 115, 115, 115, 115, 115, 115], device='cuda:0') torch.Size([10])
09/21/2023, 03:26:01# predicted of 125000: tensor([115, 115, 115, 115, 115, 115, 115, 115, 115, 115], device='cuda:0') torch.Size([10])
09/21/2023, 03:26:43# labels of 130000: tensor([100, 100, 100, 100, 100, 100], device='cuda:0') torch.Size([6])
09/21/2023, 03:26:43# predicted of 130000: tensor([100, 100, 100, 100, 100, 100], device='cuda:0') torch.Size([6])
09/21/2023, 03:27:01# total batches: 132000
09/21/2023, 03:27:01# Epoch 0 | Train Loss: 1.8867 | Train Accuracy: 0.5693
09/21/2023, 03:27:01# labels of Validation: tensor([114, 114], device='cuda:0') torch.Size([2])
09/21/2023, 03:27:01# predicted of Validation: tensor([97, 97], device='cuda:0') torch.Size([2])
09/21/2023, 03:27:01# labels of 0: tensor([114, 114], device='cuda:0') torch.Size([2])
09/21/2023, 03:27:01# predicted of 0: tensor([97, 97], device='cuda:0') torch.Size([2])
09/21/2023, 03:27:04# labels of Validation: tensor([132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132], device='cuda:0') torch.Size([216])
09/21/2023, 03:27:04# predicted of Validation: tensor([132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132], device='cuda:0') torch.Size([216])
09/21/2023, 03:27:08# labels of Validation: tensor([87], device='cuda:0') torch.Size([1])
09/21/2023, 03:27:08# predicted of Validation: tensor([1], device='cuda:0') torch.Size([1])
09/21/2023, 03:27:11# labels of Validation: tensor([122, 122, 122, 122, 122, 122, 122], device='cuda:0') torch.Size([7])
09/21/2023, 03:27:11# predicted of Validation: tensor([122, 122, 122, 122, 122, 122, 122], device='cuda:0') torch.Size([7])
09/21/2023, 03:27:15# labels of Validation: tensor([36], device='cuda:0') torch.Size([1])
09/21/2023, 03:27:15# predicted of Validation: tensor([1], device='cuda:0') torch.Size([1])
09/21/2023, 03:27:18# labels of Validation: tensor([69, 69, 69, 69, 69, 69], device='cuda:0') torch.Size([6])
09/21/2023, 03:27:18# predicted of Validation: tensor([69, 69, 69, 69, 69, 69], device='cuda:0') torch.Size([6])
09/21/2023, 03:27:18# labels of 5000: tensor([69, 69, 69, 69, 69, 69], device='cuda:0') torch.Size([6])
09/21/2023, 03:27:18# predicted of 5000: tensor([69, 69, 69, 69, 69, 69], device='cuda:0') torch.Size([6])
09/21/2023, 03:27:22# labels of Validation: tensor([98], device='cuda:0') torch.Size([1])
09/21/2023, 03:27:22# predicted of Validation: tensor([98], device='cuda:0') torch.Size([1])
09/21/2023, 03:27:25# labels of Validation: tensor([159, 159, 159, 159, 159, 159, 159, 159, 159, 159], device='cuda:0') torch.Size([10])
09/21/2023, 03:27:25# predicted of Validation: tensor([159, 159, 159, 159, 159, 159, 159, 159, 159, 159], device='cuda:0') torch.Size([10])
09/21/2023, 03:27:29# labels of Validation: tensor([60], device='cuda:0') torch.Size([1])
09/21/2023, 03:27:29# predicted of Validation: tensor([1], device='cuda:0') torch.Size([1])
09/21/2023, 03:27:32# labels of Validation: tensor([126, 126, 126], device='cuda:0') torch.Size([3])
09/21/2023, 03:27:32# predicted of Validation: tensor([126, 126, 126], device='cuda:0') torch.Size([3])
09/21/2023, 03:27:35# labels of Validation: tensor([104], device='cuda:0') torch.Size([1])
09/21/2023, 03:27:35# predicted of Validation: tensor([1], device='cuda:0') torch.Size([1])
09/21/2023, 03:27:35# labels of 10000: tensor([104], device='cuda:0') torch.Size([1])
09/21/2023, 03:27:35# predicted of 10000: tensor([1], device='cuda:0') torch.Size([1])
09/21/2023, 03:27:39# labels of Validation: tensor([32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
       device='cuda:0') torch.Size([15])
09/21/2023, 03:27:39# predicted of Validation: tensor([32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
       device='cuda:0') torch.Size([15])
09/21/2023, 03:27:42# labels of Validation: tensor([58, 58, 58, 58, 58, 58, 58], device='cuda:0') torch.Size([7])
09/21/2023, 03:27:42# predicted of Validation: tensor([58, 58, 58, 58, 58, 58, 58], device='cuda:0') torch.Size([7])
09/21/2023, 03:27:46# labels of Validation: tensor([68, 68], device='cuda:0') torch.Size([2])
09/21/2023, 03:27:46# predicted of Validation: tensor([1, 1], device='cuda:0') torch.Size([2])
09/21/2023, 03:27:49# labels of Validation: tensor([99, 99, 99, 99, 99, 99, 99, 99, 99, 65, 99, 99, 99, 99, 99, 99, 99, 99,
        99, 99, 99, 99, 99], device='cuda:0') torch.Size([23])
09/21/2023, 03:27:49# predicted of Validation: tensor([99, 99, 99, 99, 99, 99, 99, 99, 99, 65, 99, 99, 99, 99, 99, 99, 99, 99,
        99, 99, 99, 99, 99], device='cuda:0') torch.Size([23])
09/21/2023, 03:27:53# labels of Validation: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
        106, 106, 106, 106, 106, 106, 106, 106], device='cuda:0') torch.Size([92])
09/21/2023, 03:27:53# predicted of Validation: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
        106, 106, 106, 106, 106, 106, 106, 106], device='cuda:0') torch.Size([92])
09/21/2023, 03:27:53# labels of 15000: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
        106, 106, 106, 106, 106, 106, 106, 106], device='cuda:0') torch.Size([92])
09/21/2023, 03:27:53# predicted of 15000: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
        106, 106, 106, 106, 106, 106, 106, 106], device='cuda:0') torch.Size([92])
09/21/2023, 03:27:56# labels of Validation: tensor([100, 100, 100, 100, 100, 100], device='cuda:0') torch.Size([6])
09/21/2023, 03:27:56# predicted of Validation: tensor([100, 100, 100, 100, 100, 100], device='cuda:0') torch.Size([6])
09/21/2023, 03:27:58# Validation Loss: 1.6752 | Validation Accuracy: 0.5970

09/21/2023, 03:27:58# Find a better model!!
09/21/2023, 03:28:41# labels of 5000: tensor([43, 43], device='cuda:0') torch.Size([2])
09/21/2023, 03:28:41# predicted of 5000: tensor([43, 43], device='cuda:0') torch.Size([2])
09/21/2023, 03:29:24# labels of 10000: tensor([156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
         65,  65, 156, 156, 156, 156, 156, 156, 156, 156], device='cuda:0') torch.Size([66])
09/21/2023, 03:29:24# predicted of 10000: tensor([156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
         65,  65, 156, 156, 156, 156, 156, 156, 156, 156], device='cuda:0') torch.Size([66])
09/21/2023, 03:30:07# labels of 15000: tensor([79, 79], device='cuda:0') torch.Size([2])
09/21/2023, 03:30:07# predicted of 15000: tensor([68, 79], device='cuda:0') torch.Size([2])
09/21/2023, 03:30:50# labels of 20000: tensor([148, 148, 148, 148, 148, 148, 148], device='cuda:0') torch.Size([7])
09/21/2023, 03:30:50# predicted of 20000: tensor([148, 148, 148, 148, 148, 148, 148], device='cuda:0') torch.Size([7])
09/21/2023, 03:31:33# labels of 25000: tensor([60], device='cuda:0') torch.Size([1])
09/21/2023, 03:31:33# predicted of 25000: tensor([79], device='cuda:0') torch.Size([1])
09/21/2023, 03:32:16# labels of 30000: tensor([123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
        123], device='cuda:0') torch.Size([15])
09/21/2023, 03:32:16# predicted of 30000: tensor([123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
        123], device='cuda:0') torch.Size([15])
09/21/2023, 03:32:59# labels of 35000: tensor([77, 77, 77, 77, 77, 77, 77, 77], device='cuda:0') torch.Size([8])
09/21/2023, 03:32:59# predicted of 35000: tensor([77, 77, 77, 77, 77, 77, 77, 77], device='cuda:0') torch.Size([8])
09/21/2023, 03:33:41# labels of 40000: tensor([31], device='cuda:0') torch.Size([1])
09/21/2023, 03:33:41# predicted of 40000: tensor([104], device='cuda:0') torch.Size([1])
09/21/2023, 03:34:24# labels of 45000: tensor([158], device='cuda:0') torch.Size([1])
09/21/2023, 03:34:24# predicted of 45000: tensor([144], device='cuda:0') torch.Size([1])
09/21/2023, 03:35:07# labels of 50000: tensor([165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165],
       device='cuda:0') torch.Size([82])
09/21/2023, 03:35:07# predicted of 50000: tensor([165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165],
       device='cuda:0') torch.Size([82])
09/21/2023, 03:35:51# labels of 55000: tensor([89, 89], device='cuda:0') torch.Size([2])
09/21/2023, 03:35:51# predicted of 55000: tensor([89, 89], device='cuda:0') torch.Size([2])
09/21/2023, 03:36:33# labels of 60000: tensor([74], device='cuda:0') torch.Size([1])
09/21/2023, 03:36:33# predicted of 60000: tensor([8], device='cuda:0') torch.Size([1])
09/21/2023, 03:37:16# labels of 65000: tensor([147,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65, 147, 147, 147, 147], device='cuda:0') torch.Size([20])
09/21/2023, 03:37:16# predicted of 65000: tensor([147,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65, 147, 147, 147, 147], device='cuda:0') torch.Size([20])
09/21/2023, 03:37:58# labels of 70000: tensor([8, 8], device='cuda:0') torch.Size([2])
09/21/2023, 03:37:58# predicted of 70000: tensor([108, 108], device='cuda:0') torch.Size([2])
09/21/2023, 03:38:41# labels of 75000: tensor([144], device='cuda:0') torch.Size([1])
09/21/2023, 03:38:41# predicted of 75000: tensor([37], device='cuda:0') torch.Size([1])
09/21/2023, 03:39:24# labels of 80000: tensor([128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
        128, 128, 128, 128, 128, 128], device='cuda:0') torch.Size([20])
09/21/2023, 03:39:24# predicted of 80000: tensor([128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
        128, 128, 128, 128, 128, 128], device='cuda:0') torch.Size([20])
09/21/2023, 03:40:09# labels of 85000: tensor([91, 91, 91], device='cuda:0') torch.Size([3])
09/21/2023, 03:40:09# predicted of 85000: tensor([59, 62, 59], device='cuda:0') torch.Size([3])
09/21/2023, 03:41:06# labels of 90000: tensor([95, 95, 95], device='cuda:0') torch.Size([3])
09/21/2023, 03:41:06# predicted of 90000: tensor([95, 95, 95], device='cuda:0') torch.Size([3])
09/21/2023, 03:41:50# labels of 95000: tensor([155,  65, 155, 155, 155], device='cuda:0') torch.Size([5])
09/21/2023, 03:41:50# predicted of 95000: tensor([155,  65, 155, 155, 155], device='cuda:0') torch.Size([5])
09/21/2023, 03:42:33# labels of 100000: tensor([142], device='cuda:0') torch.Size([1])
09/21/2023, 03:42:33# predicted of 100000: tensor([83], device='cuda:0') torch.Size([1])
09/21/2023, 03:43:16# labels of 105000: tensor([56, 56, 56, 56, 56, 56], device='cuda:0') torch.Size([6])
09/21/2023, 03:43:16# predicted of 105000: tensor([56, 56, 56, 56, 56, 56], device='cuda:0') torch.Size([6])
09/21/2023, 03:43:59# labels of 110000: tensor([152], device='cuda:0') torch.Size([1])
09/21/2023, 03:43:59# predicted of 110000: tensor([114], device='cuda:0') torch.Size([1])
09/21/2023, 03:44:42# labels of 115000: tensor([55], device='cuda:0') torch.Size([1])
09/21/2023, 03:44:42# predicted of 115000: tensor([97], device='cuda:0') torch.Size([1])
09/21/2023, 03:45:25# labels of 120000: tensor([105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105],
       device='cuda:0') torch.Size([13])
09/21/2023, 03:45:25# predicted of 120000: tensor([105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105],
       device='cuda:0') torch.Size([13])
09/21/2023, 03:46:08# labels of 125000: tensor([32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
       device='cuda:0') torch.Size([15])
09/21/2023, 03:46:08# predicted of 125000: tensor([32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
       device='cuda:0') torch.Size([15])
09/21/2023, 03:46:51# labels of 130000: tensor([50, 50, 50], device='cuda:0') torch.Size([3])
09/21/2023, 03:46:51# predicted of 130000: tensor([50, 50, 50], device='cuda:0') torch.Size([3])
09/21/2023, 03:47:08# total batches: 132000
09/21/2023, 03:47:08# Epoch 1 | Train Loss: 1.6701 | Train Accuracy: 0.5994
09/21/2023, 03:47:08# labels of Validation: tensor([8, 8], device='cuda:0') torch.Size([2])
09/21/2023, 03:47:08# predicted of Validation: tensor([91, 91], device='cuda:0') torch.Size([2])
09/21/2023, 03:47:08# labels of 0: tensor([8, 8], device='cuda:0') torch.Size([2])
09/21/2023, 03:47:08# predicted of 0: tensor([91, 91], device='cuda:0') torch.Size([2])
09/21/2023, 03:47:11# labels of Validation: tensor([130, 130, 130, 130, 130], device='cuda:0') torch.Size([5])
09/21/2023, 03:47:11# predicted of Validation: tensor([130, 130, 130, 130, 130], device='cuda:0') torch.Size([5])
09/21/2023, 03:47:15# labels of Validation: tensor([151], device='cuda:0') torch.Size([1])
09/21/2023, 03:47:15# predicted of Validation: tensor([110], device='cuda:0') torch.Size([1])
09/21/2023, 03:47:18# labels of Validation: tensor([114, 114], device='cuda:0') torch.Size([2])
09/21/2023, 03:47:18# predicted of Validation: tensor([110, 110], device='cuda:0') torch.Size([2])
09/21/2023, 03:47:22# labels of Validation: tensor([146, 146, 146, 146, 146, 146], device='cuda:0') torch.Size([6])
09/21/2023, 03:47:22# predicted of Validation: tensor([146, 146, 146, 146, 146, 146], device='cuda:0') torch.Size([6])
09/21/2023, 03:47:25# labels of Validation: tensor([100, 100, 100, 100, 100, 100], device='cuda:0') torch.Size([6])
09/21/2023, 03:47:25# predicted of Validation: tensor([100, 100, 100, 100, 100, 100], device='cuda:0') torch.Size([6])
09/21/2023, 03:47:25# labels of 5000: tensor([100, 100, 100, 100, 100, 100], device='cuda:0') torch.Size([6])
09/21/2023, 03:47:25# predicted of 5000: tensor([100, 100, 100, 100, 100, 100], device='cuda:0') torch.Size([6])
09/21/2023, 03:47:29# labels of Validation: tensor([100, 100, 100, 100, 100, 100], device='cuda:0') torch.Size([6])
09/21/2023, 03:47:29# predicted of Validation: tensor([100, 100, 100, 100, 100, 100], device='cuda:0') torch.Size([6])
09/21/2023, 03:47:32# labels of Validation: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
        106, 106, 106, 106, 106, 106], device='cuda:0') torch.Size([300])
09/21/2023, 03:47:32# predicted of Validation: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
        106, 106, 106, 106, 106, 106], device='cuda:0') torch.Size([300])
09/21/2023, 03:47:35# labels of Validation: tensor([73, 73, 73], device='cuda:0') torch.Size([3])
09/21/2023, 03:47:35# predicted of Validation: tensor([73, 73, 73], device='cuda:0') torch.Size([3])
09/21/2023, 03:47:39# labels of Validation: tensor([96, 96, 96, 96, 96, 96], device='cuda:0') torch.Size([6])
09/21/2023, 03:47:39# predicted of Validation: tensor([96, 96, 96, 96, 96, 96], device='cuda:0') torch.Size([6])
09/21/2023, 03:47:42# labels of Validation: tensor([142], device='cuda:0') torch.Size([1])
09/21/2023, 03:47:42# predicted of Validation: tensor([110], device='cuda:0') torch.Size([1])
09/21/2023, 03:47:42# labels of 10000: tensor([142], device='cuda:0') torch.Size([1])
09/21/2023, 03:47:42# predicted of 10000: tensor([110], device='cuda:0') torch.Size([1])
09/21/2023, 03:47:46# labels of Validation: tensor([159, 159, 159, 159, 159, 159, 159, 159, 159, 159], device='cuda:0') torch.Size([10])
09/21/2023, 03:47:46# predicted of Validation: tensor([159, 159, 159, 159, 159, 159, 159, 159, 159, 159], device='cuda:0') torch.Size([10])
09/21/2023, 03:47:49# labels of Validation: tensor([47], device='cuda:0') torch.Size([1])
09/21/2023, 03:47:49# predicted of Validation: tensor([157], device='cuda:0') torch.Size([1])
09/21/2023, 03:47:53# labels of Validation: tensor([128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
        128, 128, 128, 128, 128, 128], device='cuda:0') torch.Size([20])
09/21/2023, 03:47:53# predicted of Validation: tensor([128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
        128, 128, 128, 128, 128, 128], device='cuda:0') torch.Size([20])
09/21/2023, 03:47:56# labels of Validation: tensor([29, 29, 29, 29, 29, 29, 29, 29, 29, 29], device='cuda:0') torch.Size([10])
09/21/2023, 03:47:56# predicted of Validation: tensor([29, 29, 29, 29, 29, 29, 29, 29, 29, 29], device='cuda:0') torch.Size([10])
09/21/2023, 03:48:00# labels of Validation: tensor([75], device='cuda:0') torch.Size([1])
09/21/2023, 03:48:00# predicted of Validation: tensor([87], device='cuda:0') torch.Size([1])
09/21/2023, 03:48:00# labels of 15000: tensor([75], device='cuda:0') torch.Size([1])
09/21/2023, 03:48:00# predicted of 15000: tensor([87], device='cuda:0') torch.Size([1])
09/21/2023, 03:48:03# labels of Validation: tensor([147,  65,  65,  65,  65,  65,  65,  65,  65, 147, 147, 147, 147],
       device='cuda:0') torch.Size([13])
09/21/2023, 03:48:03# predicted of Validation: tensor([147,  65,  65,  65,  65,  65,  65,  65,  65, 147, 147, 147, 147],
       device='cuda:0') torch.Size([13])
09/21/2023, 03:48:05# Validation Loss: 1.6434 | Validation Accuracy: 0.6032

09/21/2023, 03:48:05# Find a better model!!
09/21/2023, 03:48:48# labels of 5000: tensor([162], device='cuda:0') torch.Size([1])
09/21/2023, 03:48:48# predicted of 5000: tensor([31], device='cuda:0') torch.Size([1])
09/21/2023, 03:49:30# labels of 10000: tensor([8, 8], device='cuda:0') torch.Size([2])
09/21/2023, 03:49:30# predicted of 10000: tensor([112, 112], device='cuda:0') torch.Size([2])
09/21/2023, 03:50:13# labels of 15000: tensor([155,  65,  65,  65,  65,  65, 155, 155, 155], device='cuda:0') torch.Size([9])
09/21/2023, 03:50:13# predicted of 15000: tensor([155,  65,  65,  65,  65,  65, 155, 155, 155], device='cuda:0') torch.Size([9])
09/21/2023, 03:50:55# labels of 20000: tensor([45, 65, 45, 45], device='cuda:0') torch.Size([4])
09/21/2023, 03:50:55# predicted of 20000: tensor([45, 65, 45, 45], device='cuda:0') torch.Size([4])
09/21/2023, 03:51:38# labels of 25000: tensor([55], device='cuda:0') torch.Size([1])
09/21/2023, 03:51:38# predicted of 25000: tensor([48], device='cuda:0') torch.Size([1])
09/21/2023, 03:52:21# labels of 30000: tensor([136, 136, 136, 136, 136, 136, 136], device='cuda:0') torch.Size([7])
09/21/2023, 03:52:21# predicted of 30000: tensor([136, 136, 136, 136, 136, 136, 136], device='cuda:0') torch.Size([7])
09/21/2023, 03:53:03# labels of 35000: tensor([27, 27, 27], device='cuda:0') torch.Size([3])
09/21/2023, 03:53:03# predicted of 35000: tensor([27, 27, 27], device='cuda:0') torch.Size([3])
09/21/2023, 03:53:46# labels of 40000: tensor([159, 159, 159, 159, 159, 159, 159, 159, 159, 159], device='cuda:0') torch.Size([10])
09/21/2023, 03:53:46# predicted of 40000: tensor([159, 159, 159, 159, 159, 159, 159, 159, 159, 159], device='cuda:0') torch.Size([10])
09/21/2023, 03:54:29# labels of 45000: tensor([40, 40, 40, 40, 40, 40], device='cuda:0') torch.Size([6])
09/21/2023, 03:54:29# predicted of 45000: tensor([40, 40, 40, 40, 40, 40], device='cuda:0') torch.Size([6])
09/21/2023, 03:55:12# labels of 50000: tensor([11], device='cuda:0') torch.Size([1])
09/21/2023, 03:55:12# predicted of 50000: tensor([31], device='cuda:0') torch.Size([1])
09/21/2023, 03:55:54# labels of 55000: tensor([7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],
       device='cuda:0') torch.Size([67])
09/21/2023, 03:55:54# predicted of 55000: tensor([7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],
       device='cuda:0') torch.Size([67])
09/21/2023, 03:56:37# labels of 60000: tensor([156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
         65, 156, 156, 156, 156, 156, 156, 156, 156], device='cuda:0') torch.Size([65])
09/21/2023, 03:56:37# predicted of 60000: tensor([156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
         65, 156, 156, 156, 156, 156, 156, 156, 156], device='cuda:0') torch.Size([65])
09/21/2023, 03:57:20# labels of 65000: tensor([139, 139, 139, 139, 139], device='cuda:0') torch.Size([5])
09/21/2023, 03:57:20# predicted of 65000: tensor([139, 139, 139, 139, 139], device='cuda:0') torch.Size([5])
09/21/2023, 03:58:03# labels of 70000: tensor([35, 35, 35, 35, 35, 35], device='cuda:0') torch.Size([6])
09/21/2023, 03:58:03# predicted of 70000: tensor([35, 35, 35, 35, 35, 35], device='cuda:0') torch.Size([6])
09/21/2023, 03:58:46# labels of 75000: tensor([62, 62, 62, 62, 62, 62], device='cuda:0') torch.Size([6])
09/21/2023, 03:58:46# predicted of 75000: tensor([62, 62, 62, 62, 62, 62], device='cuda:0') torch.Size([6])
09/21/2023, 03:59:29# labels of 80000: tensor([45, 45, 45], device='cuda:0') torch.Size([3])
09/21/2023, 03:59:29# predicted of 80000: tensor([45, 45, 45], device='cuda:0') torch.Size([3])
09/21/2023, 04:00:12# labels of 85000: tensor([158], device='cuda:0') torch.Size([1])
09/21/2023, 04:00:12# predicted of 85000: tensor([114], device='cuda:0') torch.Size([1])
09/21/2023, 04:00:54# labels of 90000: tensor([74], device='cuda:0') torch.Size([1])
09/21/2023, 04:00:54# predicted of 90000: tensor([74], device='cuda:0') torch.Size([1])
09/21/2023, 04:01:37# labels of 95000: tensor([ 65,  65,  65,  65, 102, 102], device='cuda:0') torch.Size([6])
09/21/2023, 04:01:37# predicted of 95000: tensor([ 65,  65,  65,  65, 102, 102], device='cuda:0') torch.Size([6])
09/21/2023, 04:02:20# labels of 100000: tensor([40, 40, 40, 40, 40, 40], device='cuda:0') torch.Size([6])
09/21/2023, 04:02:20# predicted of 100000: tensor([40, 40, 40, 40, 40, 40], device='cuda:0') torch.Size([6])
09/21/2023, 04:03:03# labels of 105000: tensor([30], device='cuda:0') torch.Size([1])
09/21/2023, 04:03:03# predicted of 105000: tensor([14], device='cuda:0') torch.Size([1])
09/21/2023, 04:03:45# labels of 110000: tensor([95, 95, 95], device='cuda:0') torch.Size([3])
09/21/2023, 04:03:45# predicted of 110000: tensor([95, 95, 95], device='cuda:0') torch.Size([3])
09/21/2023, 04:04:28# labels of 115000: tensor([145, 145, 145, 145, 145, 145], device='cuda:0') torch.Size([6])
09/21/2023, 04:04:28# predicted of 115000: tensor([145, 145, 145, 145, 145, 145], device='cuda:0') torch.Size([6])
09/21/2023, 04:05:10# labels of 120000: tensor([155,  65,  65,  65,  65,  65,  65,  65, 155, 155, 155],
       device='cuda:0') torch.Size([11])
09/21/2023, 04:05:10# predicted of 120000: tensor([155,  65,  65,  65,  65,  65,  65,  65, 155, 155, 155],
       device='cuda:0') torch.Size([11])
09/21/2023, 04:05:53# labels of 125000: tensor([65, 65, 65, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
        70, 70, 70, 70, 70, 70, 70, 70], device='cuda:0') torch.Size([26])
09/21/2023, 04:05:53# predicted of 125000: tensor([65, 65, 65, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
        70, 70, 70, 70, 70, 70, 70, 70], device='cuda:0') torch.Size([26])
09/21/2023, 04:06:36# labels of 130000: tensor([21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21], device='cuda:0') torch.Size([11])
09/21/2023, 04:06:36# predicted of 130000: tensor([21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21], device='cuda:0') torch.Size([11])
09/21/2023, 04:06:53# total batches: 132000
09/21/2023, 04:06:53# Epoch 2 | Train Loss: 1.6592 | Train Accuracy: 0.6001
09/21/2023, 04:06:53# labels of Validation: tensor([68, 68], device='cuda:0') torch.Size([2])
09/21/2023, 04:06:53# predicted of Validation: tensor([113, 113], device='cuda:0') torch.Size([2])
09/21/2023, 04:06:53# labels of 0: tensor([68, 68], device='cuda:0') torch.Size([2])
09/21/2023, 04:06:53# predicted of 0: tensor([113, 113], device='cuda:0') torch.Size([2])
09/21/2023, 04:06:57# labels of Validation: tensor([25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
        25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
        25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],
       device='cuda:0') torch.Size([50])
09/21/2023, 04:06:57# predicted of Validation: tensor([25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
        25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
        25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],
       device='cuda:0') torch.Size([50])
09/21/2023, 04:07:00# labels of Validation: tensor([0, 0, 0, 0, 0, 0], device='cuda:0') torch.Size([6])
09/21/2023, 04:07:00# predicted of Validation: tensor([0, 0, 0, 0, 0, 0], device='cuda:0') torch.Size([6])
09/21/2023, 04:07:04# labels of Validation: tensor([72, 72], device='cuda:0') torch.Size([2])
09/21/2023, 04:07:04# predicted of Validation: tensor([72, 72], device='cuda:0') torch.Size([2])
09/21/2023, 04:07:07# labels of Validation: tensor([101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
        101, 101], device='cuda:0') torch.Size([16])
09/21/2023, 04:07:07# predicted of Validation: tensor([101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
        101, 101], device='cuda:0') torch.Size([16])
09/21/2023, 04:07:11# labels of Validation: tensor([165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165],
       device='cuda:0') torch.Size([82])
09/21/2023, 04:07:11# predicted of Validation: tensor([165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165],
       device='cuda:0') torch.Size([82])
09/21/2023, 04:07:11# labels of 5000: tensor([165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165],
       device='cuda:0') torch.Size([82])
09/21/2023, 04:07:11# predicted of 5000: tensor([165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165],
       device='cuda:0') torch.Size([82])
09/21/2023, 04:07:14# labels of Validation: tensor([125], device='cuda:0') torch.Size([1])
09/21/2023, 04:07:14# predicted of Validation: tensor([81], device='cuda:0') torch.Size([1])
09/21/2023, 04:07:18# labels of Validation: tensor([121], device='cuda:0') torch.Size([1])
09/21/2023, 04:07:18# predicted of Validation: tensor([31], device='cuda:0') torch.Size([1])
09/21/2023, 04:07:21# labels of Validation: tensor([65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 70, 70, 70,
        70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
        70, 70], device='cuda:0') torch.Size([56])
09/21/2023, 04:07:21# predicted of Validation: tensor([65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 70, 70, 70,
        70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
        70, 70], device='cuda:0') torch.Size([56])
09/21/2023, 04:07:25# labels of Validation: tensor([57], device='cuda:0') torch.Size([1])
09/21/2023, 04:07:25# predicted of Validation: tensor([68], device='cuda:0') torch.Size([1])
09/21/2023, 04:07:28# labels of Validation: tensor([136, 136, 136, 136, 136, 136, 136], device='cuda:0') torch.Size([7])
09/21/2023, 04:07:28# predicted of Validation: tensor([136, 136, 136, 136, 136, 136, 136], device='cuda:0') torch.Size([7])
09/21/2023, 04:07:28# labels of 10000: tensor([136, 136, 136, 136, 136, 136, 136], device='cuda:0') torch.Size([7])
09/21/2023, 04:07:28# predicted of 10000: tensor([136, 136, 136, 136, 136, 136, 136], device='cuda:0') torch.Size([7])
09/21/2023, 04:07:31# labels of Validation: tensor([140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140],
       device='cuda:0') torch.Size([13])
09/21/2023, 04:07:31# predicted of Validation: tensor([140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140],
       device='cuda:0') torch.Size([13])
09/21/2023, 04:07:35# labels of Validation: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 04:07:35# predicted of Validation: tensor([4], device='cuda:0') torch.Size([1])
09/21/2023, 04:07:38# labels of Validation: tensor([119], device='cuda:0') torch.Size([1])
09/21/2023, 04:07:38# predicted of Validation: tensor([31], device='cuda:0') torch.Size([1])
09/21/2023, 04:07:42# labels of Validation: tensor([69, 69, 69, 69, 69, 69], device='cuda:0') torch.Size([6])
09/21/2023, 04:07:42# predicted of Validation: tensor([69, 69, 69, 69, 69, 69], device='cuda:0') torch.Size([6])
09/21/2023, 04:07:45# labels of Validation: tensor([26, 26, 26, 26, 26, 26], device='cuda:0') torch.Size([6])
09/21/2023, 04:07:45# predicted of Validation: tensor([26, 26, 26, 26, 26, 26], device='cuda:0') torch.Size([6])
09/21/2023, 04:07:45# labels of 15000: tensor([26, 26, 26, 26, 26, 26], device='cuda:0') torch.Size([6])
09/21/2023, 04:07:45# predicted of 15000: tensor([26, 26, 26, 26, 26, 26], device='cuda:0') torch.Size([6])
09/21/2023, 04:07:49# labels of Validation: tensor([35, 35, 65, 35, 35, 35, 35], device='cuda:0') torch.Size([7])
09/21/2023, 04:07:49# predicted of Validation: tensor([35, 35, 65, 35, 35, 35, 35], device='cuda:0') torch.Size([7])
09/21/2023, 04:07:51# Validation Loss: 1.6350 | Validation Accuracy: 0.6022

09/21/2023, 04:07:51# Find a better model!!
09/21/2023, 04:08:33# labels of 5000: tensor([132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132,  65, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132], device='cuda:0') torch.Size([217])
09/21/2023, 04:08:33# predicted of 5000: tensor([132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132,  65, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 130, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132], device='cuda:0') torch.Size([217])
09/21/2023, 04:09:16# labels of 10000: tensor([138, 138, 138, 138, 138, 138, 138, 138, 138, 138], device='cuda:0') torch.Size([10])
09/21/2023, 04:09:16# predicted of 10000: tensor([138, 138, 138, 138, 138, 138, 138, 138, 138, 138], device='cuda:0') torch.Size([10])
09/21/2023, 04:09:59# labels of 15000: tensor([90, 90], device='cuda:0') torch.Size([2])
09/21/2023, 04:09:59# predicted of 15000: tensor([ 8, 94], device='cuda:0') torch.Size([2])
09/21/2023, 04:10:42# labels of 20000: tensor([41, 41, 41, 41, 41], device='cuda:0') torch.Size([5])
09/21/2023, 04:10:42# predicted of 20000: tensor([41, 41, 41, 41, 41], device='cuda:0') torch.Size([5])
09/21/2023, 04:11:25# labels of 25000: tensor([26, 26, 26, 26, 26, 26], device='cuda:0') torch.Size([6])
09/21/2023, 04:11:25# predicted of 25000: tensor([26, 26, 26, 26, 26, 26], device='cuda:0') torch.Size([6])
09/21/2023, 04:12:07# labels of 30000: tensor([43, 43], device='cuda:0') torch.Size([2])
09/21/2023, 04:12:07# predicted of 30000: tensor([43, 43], device='cuda:0') torch.Size([2])
09/21/2023, 04:12:50# labels of 35000: tensor([18], device='cuda:0') torch.Size([1])
09/21/2023, 04:12:50# predicted of 35000: tensor([12], device='cuda:0') torch.Size([1])
09/21/2023, 04:13:33# labels of 40000: tensor([103, 103], device='cuda:0') torch.Size([2])
09/21/2023, 04:13:33# predicted of 40000: tensor([115, 115], device='cuda:0') torch.Size([2])
09/21/2023, 04:14:16# labels of 45000: tensor([24], device='cuda:0') torch.Size([1])
09/21/2023, 04:14:16# predicted of 45000: tensor([75], device='cuda:0') torch.Size([1])
09/21/2023, 04:14:59# labels of 50000: tensor([33], device='cuda:0') torch.Size([1])
09/21/2023, 04:14:59# predicted of 50000: tensor([55], device='cuda:0') torch.Size([1])
09/21/2023, 04:15:41# labels of 55000: tensor([72, 72], device='cuda:0') torch.Size([2])
09/21/2023, 04:15:41# predicted of 55000: tensor([72, 72], device='cuda:0') torch.Size([2])
09/21/2023, 04:16:24# labels of 60000: tensor([77, 77, 77, 77, 77, 77, 77, 77], device='cuda:0') torch.Size([8])
09/21/2023, 04:16:24# predicted of 60000: tensor([77, 77, 77, 77, 77, 77, 77, 77], device='cuda:0') torch.Size([8])
09/21/2023, 04:17:07# labels of 65000: tensor([128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
        128, 128, 128, 128, 128, 128], device='cuda:0') torch.Size([20])
09/21/2023, 04:17:07# predicted of 65000: tensor([128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
        128, 128, 128, 128, 128, 128], device='cuda:0') torch.Size([20])
09/21/2023, 04:17:49# labels of 70000: tensor([101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
        101, 101], device='cuda:0') torch.Size([16])
09/21/2023, 04:17:49# predicted of 70000: tensor([101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
        101, 101], device='cuda:0') torch.Size([16])
09/21/2023, 04:18:32# labels of 75000: tensor([105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105],
       device='cuda:0') torch.Size([13])
09/21/2023, 04:18:32# predicted of 75000: tensor([105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105],
       device='cuda:0') torch.Size([13])
09/21/2023, 04:19:15# labels of 80000: tensor([72, 72], device='cuda:0') torch.Size([2])
09/21/2023, 04:19:15# predicted of 80000: tensor([72, 72], device='cuda:0') torch.Size([2])
09/21/2023, 04:19:58# labels of 85000: tensor([108, 108, 108, 108], device='cuda:0') torch.Size([4])
09/21/2023, 04:19:58# predicted of 85000: tensor([114, 114, 114,  91], device='cuda:0') torch.Size([4])
09/21/2023, 04:20:40# labels of 90000: tensor([32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
       device='cuda:0') torch.Size([15])
09/21/2023, 04:20:40# predicted of 90000: tensor([32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
       device='cuda:0') torch.Size([15])
09/21/2023, 04:21:23# labels of 95000: tensor([52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52], device='cuda:0') torch.Size([137])
09/21/2023, 04:21:23# predicted of 95000: tensor([52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52], device='cuda:0') torch.Size([137])
09/21/2023, 04:22:06# labels of 100000: tensor([31], device='cuda:0') torch.Size([1])
09/21/2023, 04:22:06# predicted of 100000: tensor([164], device='cuda:0') torch.Size([1])
09/21/2023, 04:22:49# labels of 105000: tensor([109], device='cuda:0') torch.Size([1])
09/21/2023, 04:22:49# predicted of 105000: tensor([150], device='cuda:0') torch.Size([1])
09/21/2023, 04:23:32# labels of 110000: tensor([154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154], device='cuda:0') torch.Size([189])
09/21/2023, 04:23:32# predicted of 110000: tensor([154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154], device='cuda:0') torch.Size([189])
09/21/2023, 04:24:14# labels of 115000: tensor([5, 5, 5], device='cuda:0') torch.Size([3])
09/21/2023, 04:24:14# predicted of 115000: tensor([5, 5, 5], device='cuda:0') torch.Size([3])
09/21/2023, 04:24:57# labels of 120000: tensor([100, 100, 100, 100, 100, 100], device='cuda:0') torch.Size([6])
09/21/2023, 04:24:57# predicted of 120000: tensor([100, 100, 100, 100, 100, 100], device='cuda:0') torch.Size([6])
09/21/2023, 04:25:40# labels of 125000: tensor([31], device='cuda:0') torch.Size([1])
09/21/2023, 04:25:40# predicted of 125000: tensor([88], device='cuda:0') torch.Size([1])
09/21/2023, 04:26:23# labels of 130000: tensor([90, 90], device='cuda:0') torch.Size([2])
09/21/2023, 04:26:23# predicted of 130000: tensor([8, 8], device='cuda:0') torch.Size([2])
09/21/2023, 04:26:40# total batches: 132000
09/21/2023, 04:26:40# Epoch 3 | Train Loss: 1.6547 | Train Accuracy: 0.6006
09/21/2023, 04:26:40# labels of Validation: tensor([130, 130, 130, 130, 130], device='cuda:0') torch.Size([5])
09/21/2023, 04:26:40# predicted of Validation: tensor([130, 130, 130, 130, 130], device='cuda:0') torch.Size([5])
09/21/2023, 04:26:40# labels of 0: tensor([130, 130, 130, 130, 130], device='cuda:0') torch.Size([5])
09/21/2023, 04:26:40# predicted of 0: tensor([130, 130, 130, 130, 130], device='cuda:0') torch.Size([5])
09/21/2023, 04:26:43# labels of Validation: tensor([146, 146, 146, 146, 146, 146], device='cuda:0') torch.Size([6])
09/21/2023, 04:26:43# predicted of Validation: tensor([146, 146, 146, 146, 146, 146], device='cuda:0') torch.Size([6])
09/21/2023, 04:26:47# labels of Validation: tensor([11], device='cuda:0') torch.Size([1])
09/21/2023, 04:26:47# predicted of Validation: tensor([119], device='cuda:0') torch.Size([1])
09/21/2023, 04:26:50# labels of Validation: tensor([42], device='cuda:0') torch.Size([1])
09/21/2023, 04:26:50# predicted of Validation: tensor([1], device='cuda:0') torch.Size([1])
09/21/2023, 04:26:54# labels of Validation: tensor([80, 80, 80, 80, 80, 80], device='cuda:0') torch.Size([6])
09/21/2023, 04:26:54# predicted of Validation: tensor([80, 80, 80, 80, 80, 80], device='cuda:0') torch.Size([6])
09/21/2023, 04:26:57# labels of Validation: tensor([55], device='cuda:0') torch.Size([1])
09/21/2023, 04:26:57# predicted of Validation: tensor([114], device='cuda:0') torch.Size([1])
09/21/2023, 04:26:57# labels of 5000: tensor([55], device='cuda:0') torch.Size([1])
09/21/2023, 04:26:57# predicted of 5000: tensor([114], device='cuda:0') torch.Size([1])
09/21/2023, 04:27:01# labels of Validation: tensor([75], device='cuda:0') torch.Size([1])
09/21/2023, 04:27:01# predicted of Validation: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 04:27:04# labels of Validation: tensor([52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 65, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52], device='cuda:0') torch.Size([138])
09/21/2023, 04:27:04# predicted of Validation: tensor([52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 65, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52], device='cuda:0') torch.Size([138])
09/21/2023, 04:27:08# labels of Validation: tensor([144], device='cuda:0') torch.Size([1])
09/21/2023, 04:27:08# predicted of Validation: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 04:27:11# labels of Validation: tensor([130, 130, 130, 130, 130], device='cuda:0') torch.Size([5])
09/21/2023, 04:27:11# predicted of Validation: tensor([130, 130, 130, 130, 130], device='cuda:0') torch.Size([5])
09/21/2023, 04:27:15# labels of Validation: tensor([50, 50, 50], device='cuda:0') torch.Size([3])
09/21/2023, 04:27:15# predicted of Validation: tensor([50, 50, 50], device='cuda:0') torch.Size([3])
09/21/2023, 04:27:15# labels of 10000: tensor([50, 50, 50], device='cuda:0') torch.Size([3])
09/21/2023, 04:27:15# predicted of 10000: tensor([50, 50, 50], device='cuda:0') torch.Size([3])
09/21/2023, 04:27:18# labels of Validation: tensor([118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
        118, 118, 118, 118, 118, 118, 118], device='cuda:0') torch.Size([21])
09/21/2023, 04:27:18# predicted of Validation: tensor([118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
        118, 118, 118, 118, 118, 118, 118], device='cuda:0') torch.Size([21])
09/21/2023, 04:27:22# labels of Validation: tensor([163], device='cuda:0') torch.Size([1])
09/21/2023, 04:27:22# predicted of Validation: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 04:27:25# labels of Validation: tensor([33], device='cuda:0') torch.Size([1])
09/21/2023, 04:27:25# predicted of Validation: tensor([1], device='cuda:0') torch.Size([1])
09/21/2023, 04:27:29# labels of Validation: tensor([154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
         65,  65,  65,  65,  65,  65,  65, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154], device='cuda:0') torch.Size([64])
09/21/2023, 04:27:29# predicted of Validation: tensor([154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
         65,  65,  65,  65,  65,  65,  65, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154], device='cuda:0') torch.Size([64])
09/21/2023, 04:27:32# labels of Validation: tensor([18], device='cuda:0') torch.Size([1])
09/21/2023, 04:27:32# predicted of Validation: tensor([64], device='cuda:0') torch.Size([1])
09/21/2023, 04:27:32# labels of 15000: tensor([18], device='cuda:0') torch.Size([1])
09/21/2023, 04:27:32# predicted of 15000: tensor([64], device='cuda:0') torch.Size([1])
09/21/2023, 04:27:35# labels of Validation: tensor([34], device='cuda:0') torch.Size([1])
09/21/2023, 04:27:35# predicted of Validation: tensor([119], device='cuda:0') torch.Size([1])
09/21/2023, 04:27:37# Validation Loss: 1.6351 | Validation Accuracy: 0.6044

09/21/2023, 04:28:20# labels of 5000: tensor([82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
        65, 82, 82, 82, 82, 82, 82, 82, 82, 82], device='cuda:0') torch.Size([28])
09/21/2023, 04:28:20# predicted of 5000: tensor([82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
        65, 82, 82, 82, 82, 82, 82, 82, 82, 82], device='cuda:0') torch.Size([28])
09/21/2023, 04:29:03# labels of 10000: tensor([15, 15, 15], device='cuda:0') torch.Size([3])
09/21/2023, 04:29:03# predicted of 10000: tensor([15, 15, 15], device='cuda:0') torch.Size([3])
09/21/2023, 04:29:46# labels of 15000: tensor([115, 115, 115, 115, 115, 115, 115, 115, 115, 115], device='cuda:0') torch.Size([10])
09/21/2023, 04:29:46# predicted of 15000: tensor([115, 115, 115, 115, 115, 115, 115, 115, 115, 115], device='cuda:0') torch.Size([10])
09/21/2023, 04:30:29# labels of 20000: tensor([ 65,  65,  65,  65, 102, 102], device='cuda:0') torch.Size([6])
09/21/2023, 04:30:29# predicted of 20000: tensor([ 65,  65,  65,  65, 102, 102], device='cuda:0') torch.Size([6])
09/21/2023, 04:31:11# labels of 25000: tensor([74], device='cuda:0') torch.Size([1])
09/21/2023, 04:31:11# predicted of 25000: tensor([91], device='cuda:0') torch.Size([1])
09/21/2023, 04:31:54# labels of 30000: tensor([33], device='cuda:0') torch.Size([1])
09/21/2023, 04:31:54# predicted of 30000: tensor([157], device='cuda:0') torch.Size([1])
09/21/2023, 04:32:36# labels of 35000: tensor([38], device='cuda:0') torch.Size([1])
09/21/2023, 04:32:36# predicted of 35000: tensor([47], device='cuda:0') torch.Size([1])
09/21/2023, 04:33:19# labels of 40000: tensor([84, 84, 84, 84, 84, 84, 84, 84, 84], device='cuda:0') torch.Size([9])
09/21/2023, 04:33:19# predicted of 40000: tensor([84, 84, 84, 84, 84, 84, 84, 84, 84], device='cuda:0') torch.Size([9])
09/21/2023, 04:34:02# labels of 45000: tensor([137, 137, 137, 137, 137], device='cuda:0') torch.Size([5])
09/21/2023, 04:34:02# predicted of 45000: tensor([137, 137, 137, 137, 137], device='cuda:0') torch.Size([5])
09/21/2023, 04:34:45# labels of 50000: tensor([56, 56, 56, 56, 56, 56], device='cuda:0') torch.Size([6])
09/21/2023, 04:34:45# predicted of 50000: tensor([56, 56, 56, 56, 56, 56], device='cuda:0') torch.Size([6])
09/21/2023, 04:35:28# labels of 55000: tensor([14], device='cuda:0') torch.Size([1])
09/21/2023, 04:35:28# predicted of 55000: tensor([31], device='cuda:0') torch.Size([1])
09/21/2023, 04:36:10# labels of 60000: tensor([37, 37, 37, 37, 37], device='cuda:0') torch.Size([5])
09/21/2023, 04:36:10# predicted of 60000: tensor([37, 37, 37, 37, 37], device='cuda:0') torch.Size([5])
09/21/2023, 04:36:53# labels of 65000: tensor([161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161], device='cuda:0') torch.Size([150])
09/21/2023, 04:36:53# predicted of 65000: tensor([161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161], device='cuda:0') torch.Size([150])
09/21/2023, 04:37:36# labels of 70000: tensor([62, 62, 62, 62, 62, 62], device='cuda:0') torch.Size([6])
09/21/2023, 04:37:36# predicted of 70000: tensor([62, 62, 62, 62, 62, 62], device='cuda:0') torch.Size([6])
09/21/2023, 04:38:19# labels of 75000: tensor([96, 96, 96, 96, 96, 96], device='cuda:0') torch.Size([6])
09/21/2023, 04:38:19# predicted of 75000: tensor([96, 96, 96, 96, 96, 96], device='cuda:0') torch.Size([6])
09/21/2023, 04:39:02# labels of 80000: tensor([97], device='cuda:0') torch.Size([1])
09/21/2023, 04:39:02# predicted of 80000: tensor([124], device='cuda:0') torch.Size([1])
09/21/2023, 04:39:44# labels of 85000: tensor([138, 138, 138, 138, 138, 138, 138, 138, 138, 138], device='cuda:0') torch.Size([10])
09/21/2023, 04:39:44# predicted of 85000: tensor([138, 138, 138, 138, 138, 138, 138, 138, 138, 138], device='cuda:0') torch.Size([10])
09/21/2023, 04:40:28# labels of 90000: tensor([ 6, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,  6,
         6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6],
       device='cuda:0') torch.Size([71])
09/21/2023, 04:40:28# predicted of 90000: tensor([ 6, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65,  6, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,  6,
         6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6],
       device='cuda:0') torch.Size([71])
09/21/2023, 04:41:11# labels of 95000: tensor([158], device='cuda:0') torch.Size([1])
09/21/2023, 04:41:11# predicted of 95000: tensor([53], device='cuda:0') torch.Size([1])
09/21/2023, 04:41:54# labels of 100000: tensor([81], device='cuda:0') torch.Size([1])
09/21/2023, 04:41:54# predicted of 100000: tensor([112], device='cuda:0') torch.Size([1])
09/21/2023, 04:42:37# labels of 105000: tensor([23, 23, 23, 23, 23], device='cuda:0') torch.Size([5])
09/21/2023, 04:42:37# predicted of 105000: tensor([23, 23, 23, 23, 23], device='cuda:0') torch.Size([5])
09/21/2023, 04:43:19# labels of 110000: tensor([152], device='cuda:0') torch.Size([1])
09/21/2023, 04:43:19# predicted of 110000: tensor([14], device='cuda:0') torch.Size([1])
09/21/2023, 04:44:02# labels of 115000: tensor([94, 94], device='cuda:0') torch.Size([2])
09/21/2023, 04:44:02# predicted of 115000: tensor([94, 94], device='cuda:0') torch.Size([2])
09/21/2023, 04:44:45# labels of 120000: tensor([132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132,  65, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132], device='cuda:0') torch.Size([217])
09/21/2023, 04:44:45# predicted of 120000: tensor([132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132,  65, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132], device='cuda:0') torch.Size([217])
09/21/2023, 04:45:28# labels of 125000: tensor([26, 26, 26, 26, 26, 26], device='cuda:0') torch.Size([6])
09/21/2023, 04:45:28# predicted of 125000: tensor([26, 26, 26, 26, 26, 26], device='cuda:0') torch.Size([6])
09/21/2023, 04:46:11# labels of 130000: tensor([40, 40, 40, 40, 40, 40], device='cuda:0') torch.Size([6])
09/21/2023, 04:46:11# predicted of 130000: tensor([40, 40, 40, 40, 40, 40], device='cuda:0') torch.Size([6])
09/21/2023, 04:46:28# total batches: 132000
09/21/2023, 04:46:28# Epoch 4 | Train Loss: 1.6511 | Train Accuracy: 0.6008
09/21/2023, 04:46:28# labels of Validation: tensor([150], device='cuda:0') torch.Size([1])
09/21/2023, 04:46:28# predicted of Validation: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 04:46:28# labels of 0: tensor([150], device='cuda:0') torch.Size([1])
09/21/2023, 04:46:28# predicted of 0: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 04:46:32# labels of Validation: tensor([81], device='cuda:0') torch.Size([1])
09/21/2023, 04:46:32# predicted of Validation: tensor([119], device='cuda:0') torch.Size([1])
09/21/2023, 04:46:35# labels of Validation: tensor([25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
        25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
        25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],
       device='cuda:0') torch.Size([50])
09/21/2023, 04:46:35# predicted of Validation: tensor([25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
        25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
        25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],
       device='cuda:0') torch.Size([50])
09/21/2023, 04:46:39# labels of Validation: tensor([103, 103], device='cuda:0') torch.Size([2])
09/21/2023, 04:46:39# predicted of Validation: tensor([64, 91], device='cuda:0') torch.Size([2])
09/21/2023, 04:46:42# labels of Validation: tensor([21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21], device='cuda:0') torch.Size([11])
09/21/2023, 04:46:42# predicted of Validation: tensor([21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21], device='cuda:0') torch.Size([11])
09/21/2023, 04:46:46# labels of Validation: tensor([119], device='cuda:0') torch.Size([1])
09/21/2023, 04:46:46# predicted of Validation: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 04:46:46# labels of 5000: tensor([119], device='cuda:0') torch.Size([1])
09/21/2023, 04:46:46# predicted of 5000: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 04:46:49# labels of Validation: tensor([101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
        101, 101], device='cuda:0') torch.Size([16])
09/21/2023, 04:46:49# predicted of Validation: tensor([101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
        101, 101], device='cuda:0') torch.Size([16])
09/21/2023, 04:46:53# labels of Validation: tensor([13, 13, 13, 13, 13], device='cuda:0') torch.Size([5])
09/21/2023, 04:46:53# predicted of Validation: tensor([13, 13, 13, 13, 13], device='cuda:0') torch.Size([5])
09/21/2023, 04:46:56# labels of Validation: tensor([135, 135], device='cuda:0') torch.Size([2])
09/21/2023, 04:46:56# predicted of Validation: tensor([135, 135], device='cuda:0') torch.Size([2])
09/21/2023, 04:47:00# labels of Validation: tensor([59, 59, 59], device='cuda:0') torch.Size([3])
09/21/2023, 04:47:00# predicted of Validation: tensor([91, 91, 91], device='cuda:0') torch.Size([3])
09/21/2023, 04:47:03# labels of Validation: tensor([67, 67, 67, 67, 67], device='cuda:0') torch.Size([5])
09/21/2023, 04:47:03# predicted of Validation: tensor([67, 67, 67, 67, 67], device='cuda:0') torch.Size([5])
09/21/2023, 04:47:03# labels of 10000: tensor([67, 67, 67, 67, 67], device='cuda:0') torch.Size([5])
09/21/2023, 04:47:03# predicted of 10000: tensor([67, 67, 67, 67, 67], device='cuda:0') torch.Size([5])
09/21/2023, 04:47:06# labels of Validation: tensor([18], device='cuda:0') torch.Size([1])
09/21/2023, 04:47:06# predicted of Validation: tensor([72], device='cuda:0') torch.Size([1])
09/21/2023, 04:47:10# labels of Validation: tensor([75], device='cuda:0') torch.Size([1])
09/21/2023, 04:47:10# predicted of Validation: tensor([53], device='cuda:0') torch.Size([1])
09/21/2023, 04:47:14# labels of Validation: tensor([23, 23, 23, 23, 23], device='cuda:0') torch.Size([5])
09/21/2023, 04:47:14# predicted of Validation: tensor([23, 23, 23, 23, 23], device='cuda:0') torch.Size([5])
09/21/2023, 04:47:17# labels of Validation: tensor([12], device='cuda:0') torch.Size([1])
09/21/2023, 04:47:17# predicted of Validation: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 04:47:20# labels of Validation: tensor([30], device='cuda:0') torch.Size([1])
09/21/2023, 04:47:20# predicted of Validation: tensor([4], device='cuda:0') torch.Size([1])
09/21/2023, 04:47:20# labels of 15000: tensor([30], device='cuda:0') torch.Size([1])
09/21/2023, 04:47:20# predicted of 15000: tensor([4], device='cuda:0') torch.Size([1])
09/21/2023, 04:47:24# labels of Validation: tensor([146, 146, 146, 146, 146, 146], device='cuda:0') torch.Size([6])
09/21/2023, 04:47:24# predicted of Validation: tensor([146, 146, 146, 146, 146, 146], device='cuda:0') torch.Size([6])
09/21/2023, 04:47:26# Validation Loss: 1.6356 | Validation Accuracy: 0.6033

09/21/2023, 04:48:13# labels of 5000: tensor([18], device='cuda:0') torch.Size([1])
09/21/2023, 04:48:13# predicted of 5000: tensor([8], device='cuda:0') torch.Size([1])
09/21/2023, 04:48:43# labels of 10000: tensor([21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21], device='cuda:0') torch.Size([11])
09/21/2023, 04:48:43# predicted of 10000: tensor([21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21], device='cuda:0') torch.Size([11])
09/21/2023, 04:49:10# labels of 15000: tensor([88, 88], device='cuda:0') torch.Size([2])
09/21/2023, 04:49:10# predicted of 15000: tensor([90, 90], device='cuda:0') torch.Size([2])
09/21/2023, 04:49:43# labels of 20000: tensor([92], device='cuda:0') torch.Size([1])
09/21/2023, 04:49:43# predicted of 20000: tensor([119], device='cuda:0') torch.Size([1])
09/21/2023, 04:50:26# labels of 25000: tensor([47], device='cuda:0') torch.Size([1])
09/21/2023, 04:50:26# predicted of 25000: tensor([36], device='cuda:0') torch.Size([1])
09/21/2023, 04:51:09# labels of 30000: tensor([31], device='cuda:0') torch.Size([1])
09/21/2023, 04:51:09# predicted of 30000: tensor([33], device='cuda:0') torch.Size([1])
09/21/2023, 04:51:51# labels of 35000: tensor([76], device='cuda:0') torch.Size([1])
09/21/2023, 04:51:51# predicted of 35000: tensor([68], device='cuda:0') torch.Size([1])
09/21/2023, 04:52:34# labels of 40000: tensor([118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
        118, 118, 118, 118, 118, 118, 118], device='cuda:0') torch.Size([21])
09/21/2023, 04:52:34# predicted of 40000: tensor([118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
        118, 118, 118, 118, 118, 118, 118], device='cuda:0') torch.Size([21])
09/21/2023, 04:53:16# labels of 45000: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
        149, 149, 149], device='cuda:0') torch.Size([31])
09/21/2023, 04:53:16# predicted of 45000: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
        149, 149, 149], device='cuda:0') torch.Size([31])
09/21/2023, 04:53:59# labels of 50000: tensor([147,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65, 147, 147, 147, 147], device='cuda:0') torch.Size([20])
09/21/2023, 04:53:59# predicted of 50000: tensor([147,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65, 147, 147, 147, 147], device='cuda:0') torch.Size([20])
09/21/2023, 04:54:43# labels of 55000: tensor([162], device='cuda:0') torch.Size([1])
09/21/2023, 04:54:43# predicted of 55000: tensor([47], device='cuda:0') torch.Size([1])
09/21/2023, 04:55:25# labels of 60000: tensor([41, 41, 41, 41, 41], device='cuda:0') torch.Size([5])
09/21/2023, 04:55:25# predicted of 60000: tensor([41, 41, 41, 41, 41], device='cuda:0') torch.Size([5])
09/21/2023, 04:56:08# labels of 65000: tensor([13, 13, 13, 13, 13], device='cuda:0') torch.Size([5])
09/21/2023, 04:56:08# predicted of 65000: tensor([13, 13, 13, 13, 13], device='cuda:0') torch.Size([5])
09/21/2023, 04:56:51# labels of 70000: tensor([146, 146, 146, 146, 146, 146], device='cuda:0') torch.Size([6])
09/21/2023, 04:56:51# predicted of 70000: tensor([146, 146, 146, 146, 146, 146], device='cuda:0') torch.Size([6])
09/21/2023, 04:57:34# labels of 75000: tensor([120, 120, 120, 120, 120, 120], device='cuda:0') torch.Size([6])
09/21/2023, 04:57:34# predicted of 75000: tensor([120, 120, 120, 120, 120, 120], device='cuda:0') torch.Size([6])
09/21/2023, 04:58:17# labels of 80000: tensor([142], device='cuda:0') torch.Size([1])
09/21/2023, 04:58:17# predicted of 80000: tensor([4], device='cuda:0') torch.Size([1])
09/21/2023, 04:59:00# labels of 85000: tensor([68, 68], device='cuda:0') torch.Size([2])
09/21/2023, 04:59:00# predicted of 85000: tensor([116,  57], device='cuda:0') torch.Size([2])
09/21/2023, 04:59:43# labels of 90000: tensor([24], device='cuda:0') torch.Size([1])
09/21/2023, 04:59:43# predicted of 90000: tensor([1], device='cuda:0') torch.Size([1])
09/21/2023, 05:00:26# labels of 95000: tensor([97], device='cuda:0') torch.Size([1])
09/21/2023, 05:00:26# predicted of 95000: tensor([60], device='cuda:0') torch.Size([1])
09/21/2023, 05:01:09# labels of 100000: tensor([142], device='cuda:0') torch.Size([1])
09/21/2023, 05:01:09# predicted of 100000: tensor([38], device='cuda:0') torch.Size([1])
09/21/2023, 05:01:52# labels of 105000: tensor([114, 114], device='cuda:0') torch.Size([2])
09/21/2023, 05:01:52# predicted of 105000: tensor([ 57, 114], device='cuda:0') torch.Size([2])
09/21/2023, 05:02:35# labels of 110000: tensor([77, 77, 77, 77, 77, 77, 77, 77], device='cuda:0') torch.Size([8])
09/21/2023, 05:02:35# predicted of 110000: tensor([77, 77, 77, 77, 77, 77, 77, 77], device='cuda:0') torch.Size([8])
09/21/2023, 05:03:17# labels of 115000: tensor([120, 120, 120, 120, 120, 120], device='cuda:0') torch.Size([6])
09/21/2023, 05:03:17# predicted of 115000: tensor([120, 120, 120, 120, 120, 120], device='cuda:0') torch.Size([6])
09/21/2023, 05:04:00# labels of 120000: tensor([89, 89], device='cuda:0') torch.Size([2])
09/21/2023, 05:04:00# predicted of 120000: tensor([89, 89], device='cuda:0') torch.Size([2])
09/21/2023, 05:04:43# labels of 125000: tensor([89, 89], device='cuda:0') torch.Size([2])
09/21/2023, 05:04:43# predicted of 125000: tensor([89, 89], device='cuda:0') torch.Size([2])
09/21/2023, 05:05:25# labels of 130000: tensor([161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161], device='cuda:0') torch.Size([150])
09/21/2023, 05:05:25# predicted of 130000: tensor([161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161], device='cuda:0') torch.Size([150])
09/21/2023, 05:05:43# total batches: 132000
09/21/2023, 05:05:43# Epoch 5 | Train Loss: 1.6490 | Train Accuracy: 0.6023
09/21/2023, 05:05:43# labels of Validation: tensor([30], device='cuda:0') torch.Size([1])
09/21/2023, 05:05:43# predicted of Validation: tensor([119], device='cuda:0') torch.Size([1])
09/21/2023, 05:05:43# labels of 0: tensor([30], device='cuda:0') torch.Size([1])
09/21/2023, 05:05:43# predicted of 0: tensor([119], device='cuda:0') torch.Size([1])
09/21/2023, 05:05:46# labels of Validation: tensor([121], device='cuda:0') torch.Size([1])
09/21/2023, 05:05:46# predicted of Validation: tensor([119], device='cuda:0') torch.Size([1])
09/21/2023, 05:05:50# labels of Validation: tensor([164], device='cuda:0') torch.Size([1])
09/21/2023, 05:05:50# predicted of Validation: tensor([79], device='cuda:0') torch.Size([1])
09/21/2023, 05:05:53# labels of Validation: tensor([111], device='cuda:0') torch.Size([1])
09/21/2023, 05:05:53# predicted of Validation: tensor([48], device='cuda:0') torch.Size([1])
09/21/2023, 05:05:57# labels of Validation: tensor([148, 148, 148, 148, 148, 148, 148], device='cuda:0') torch.Size([7])
09/21/2023, 05:05:57# predicted of Validation: tensor([148, 148, 148, 148, 148, 148, 148], device='cuda:0') torch.Size([7])
09/21/2023, 05:06:00# labels of Validation: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65, 141, 141, 141, 141,
        141, 141, 141, 141, 141, 141], device='cuda:0') torch.Size([20])
09/21/2023, 05:06:00# predicted of Validation: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65, 141, 141, 141, 141,
        141, 141, 141, 141, 141, 141], device='cuda:0') torch.Size([20])
09/21/2023, 05:06:00# labels of 5000: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65, 141, 141, 141, 141,
        141, 141, 141, 141, 141, 141], device='cuda:0') torch.Size([20])
09/21/2023, 05:06:00# predicted of 5000: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65, 141, 141, 141, 141,
        141, 141, 141, 141, 141, 141], device='cuda:0') torch.Size([20])
09/21/2023, 05:06:03# labels of Validation: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 05:06:03# predicted of Validation: tensor([124], device='cuda:0') torch.Size([1])
09/21/2023, 05:06:07# labels of Validation: tensor([151], device='cuda:0') torch.Size([1])
09/21/2023, 05:06:07# predicted of Validation: tensor([119], device='cuda:0') torch.Size([1])
09/21/2023, 05:06:10# labels of Validation: tensor([154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154], device='cuda:0') torch.Size([186])
09/21/2023, 05:06:10# predicted of Validation: tensor([154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154], device='cuda:0') torch.Size([186])
09/21/2023, 05:06:14# labels of Validation: tensor([59, 59, 59], device='cuda:0') torch.Size([3])
09/21/2023, 05:06:14# predicted of Validation: tensor([91, 91, 91], device='cuda:0') torch.Size([3])
09/21/2023, 05:06:17# labels of Validation: tensor([154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154], device='cuda:0') torch.Size([119])
09/21/2023, 05:06:17# predicted of Validation: tensor([154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154], device='cuda:0') torch.Size([119])
09/21/2023, 05:06:17# labels of 10000: tensor([154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154], device='cuda:0') torch.Size([119])
09/21/2023, 05:06:17# predicted of 10000: tensor([154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154], device='cuda:0') torch.Size([119])
09/21/2023, 05:06:21# labels of Validation: tensor([90, 90], device='cuda:0') torch.Size([2])
09/21/2023, 05:06:21# predicted of Validation: tensor([91, 64], device='cuda:0') torch.Size([2])
09/21/2023, 05:06:24# labels of Validation: tensor([10, 10], device='cuda:0') torch.Size([2])
09/21/2023, 05:06:24# predicted of Validation: tensor([10, 10], device='cuda:0') torch.Size([2])
09/21/2023, 05:06:28# labels of Validation: tensor([74], device='cuda:0') torch.Size([1])
09/21/2023, 05:06:28# predicted of Validation: tensor([48], device='cuda:0') torch.Size([1])
09/21/2023, 05:06:31# labels of Validation: tensor([132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132,  65, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132], device='cuda:0') torch.Size([217])
09/21/2023, 05:06:31# predicted of Validation: tensor([132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132,  65, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132], device='cuda:0') torch.Size([217])
09/21/2023, 05:06:35# labels of Validation: tensor([ 6, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,  6,  6,
         6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6],
       device='cuda:0') torch.Size([106])
09/21/2023, 05:06:35# predicted of Validation: tensor([ 6, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,  6,  6,
         6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6],
       device='cuda:0') torch.Size([106])
09/21/2023, 05:06:35# labels of 15000: tensor([ 6, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,  6,  6,
         6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6],
       device='cuda:0') torch.Size([106])
09/21/2023, 05:06:35# predicted of 15000: tensor([ 6, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,  6,  6,
         6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6],
       device='cuda:0') torch.Size([106])
09/21/2023, 05:06:38# labels of Validation: tensor([2], device='cuda:0') torch.Size([1])
09/21/2023, 05:06:38# predicted of Validation: tensor([68], device='cuda:0') torch.Size([1])
09/21/2023, 05:06:40# Validation Loss: 1.6274 | Validation Accuracy: 0.6043

09/21/2023, 05:06:40# Find a better model!!
09/21/2023, 05:07:23# labels of 5000: tensor([99, 99, 99, 99, 99, 99, 99, 99, 99, 65, 99, 99, 99, 99, 99, 99, 99, 99,
        99, 99, 99, 99, 99], device='cuda:0') torch.Size([23])
09/21/2023, 05:07:23# predicted of 5000: tensor([99, 99, 99, 99, 99, 99, 99, 99, 99, 65, 99, 99, 99, 99, 99, 99, 99, 99,
        99, 99, 99, 99, 99], device='cuda:0') torch.Size([23])
09/21/2023, 05:08:06# labels of 10000: tensor([ 65,  65,  65,  65, 102, 102], device='cuda:0') torch.Size([6])
09/21/2023, 05:08:06# predicted of 10000: tensor([ 65,  65,  65,  65, 102, 102], device='cuda:0') torch.Size([6])
09/21/2023, 05:08:49# labels of 15000: tensor([82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
        82, 82, 82, 82, 82, 82, 82, 82, 82], device='cuda:0') torch.Size([27])
09/21/2023, 05:08:49# predicted of 15000: tensor([82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
        82, 82, 82, 82, 82, 82, 82, 82, 82], device='cuda:0') torch.Size([27])
09/21/2023, 05:09:32# labels of 20000: tensor([143], device='cuda:0') torch.Size([1])
09/21/2023, 05:09:32# predicted of 20000: tensor([88], device='cuda:0') torch.Size([1])
09/21/2023, 05:10:14# labels of 25000: tensor([143], device='cuda:0') torch.Size([1])
09/21/2023, 05:10:14# predicted of 25000: tensor([72], device='cuda:0') torch.Size([1])
09/21/2023, 05:10:57# labels of 30000: tensor([34], device='cuda:0') torch.Size([1])
09/21/2023, 05:10:57# predicted of 30000: tensor([76], device='cuda:0') torch.Size([1])
09/21/2023, 05:11:40# labels of 35000: tensor([113, 113], device='cuda:0') torch.Size([2])
09/21/2023, 05:11:40# predicted of 35000: tensor([94, 18], device='cuda:0') torch.Size([2])
09/21/2023, 05:12:23# labels of 40000: tensor([60], device='cuda:0') torch.Size([1])
09/21/2023, 05:12:23# predicted of 40000: tensor([79], device='cuda:0') torch.Size([1])
09/21/2023, 05:13:06# labels of 45000: tensor([103, 103], device='cuda:0') torch.Size([2])
09/21/2023, 05:13:06# predicted of 45000: tensor([44, 88], device='cuda:0') torch.Size([2])
09/21/2023, 05:13:48# labels of 50000: tensor([9], device='cuda:0') torch.Size([1])
09/21/2023, 05:13:48# predicted of 50000: tensor([113], device='cuda:0') torch.Size([1])
09/21/2023, 05:14:31# labels of 55000: tensor([71, 71, 71, 71, 71, 71], device='cuda:0') torch.Size([6])
09/21/2023, 05:14:31# predicted of 55000: tensor([71, 71, 71, 71, 71, 71], device='cuda:0') torch.Size([6])
09/21/2023, 05:15:14# labels of 60000: tensor([130, 130, 130, 130, 130], device='cuda:0') torch.Size([5])
09/21/2023, 05:15:14# predicted of 60000: tensor([130, 130, 130, 130, 130], device='cuda:0') torch.Size([5])
09/21/2023, 05:15:56# labels of 65000: tensor([51, 65, 51, 51, 51, 51], device='cuda:0') torch.Size([6])
09/21/2023, 05:15:56# predicted of 65000: tensor([51, 65, 51, 51, 51, 51], device='cuda:0') torch.Size([6])
09/21/2023, 05:16:39# labels of 70000: tensor([16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
        16, 16], device='cuda:0') torch.Size([20])
09/21/2023, 05:16:39# predicted of 70000: tensor([16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
        16, 16], device='cuda:0') torch.Size([20])
09/21/2023, 05:17:22# labels of 75000: tensor([104], device='cuda:0') torch.Size([1])
09/21/2023, 05:17:22# predicted of 75000: tensor([142], device='cuda:0') torch.Size([1])
09/21/2023, 05:18:05# labels of 80000: tensor([132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132], device='cuda:0') torch.Size([216])
09/21/2023, 05:18:05# predicted of 80000: tensor([132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132], device='cuda:0') torch.Size([216])
09/21/2023, 05:18:47# labels of 85000: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 05:18:47# predicted of 85000: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 05:19:30# labels of 90000: tensor([36], device='cuda:0') torch.Size([1])
09/21/2023, 05:19:30# predicted of 90000: tensor([30], device='cuda:0') torch.Size([1])
09/21/2023, 05:20:13# labels of 95000: tensor([77, 77, 77, 77, 77, 77, 77, 77], device='cuda:0') torch.Size([8])
09/21/2023, 05:20:13# predicted of 95000: tensor([77, 77, 77, 77, 77, 77, 77, 77], device='cuda:0') torch.Size([8])
09/21/2023, 05:20:56# labels of 100000: tensor([128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
        128, 128, 128, 128, 128, 128], device='cuda:0') torch.Size([20])
09/21/2023, 05:20:56# predicted of 100000: tensor([128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
        128, 128, 128, 128, 128, 128], device='cuda:0') torch.Size([20])
09/21/2023, 05:21:39# labels of 105000: tensor([ 65,  65,  65,  ..., 106, 106, 106], device='cuda:0') torch.Size([1103])
09/21/2023, 05:21:39# predicted of 105000: tensor([ 65,  65,  65,  ..., 106, 106, 106], device='cuda:0') torch.Size([1103])
09/21/2023, 05:22:22# labels of 110000: tensor([91, 91, 91], device='cuda:0') torch.Size([3])
09/21/2023, 05:22:22# predicted of 110000: tensor([108, 108, 108], device='cuda:0') torch.Size([3])
09/21/2023, 05:23:05# labels of 115000: tensor([35, 35, 35, 35, 35, 35], device='cuda:0') torch.Size([6])
09/21/2023, 05:23:05# predicted of 115000: tensor([35, 35, 35, 35, 35, 35], device='cuda:0') torch.Size([6])
09/21/2023, 05:23:47# labels of 120000: tensor([ 65,  65,  65, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
        149, 149, 149, 149, 149], device='cuda:0') torch.Size([19])
09/21/2023, 05:23:47# predicted of 120000: tensor([ 65,  65,  65, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
        149, 149, 149, 149, 149], device='cuda:0') torch.Size([19])
09/21/2023, 05:24:30# labels of 125000: tensor([79, 79], device='cuda:0') torch.Size([2])
09/21/2023, 05:24:30# predicted of 125000: tensor([79, 79], device='cuda:0') torch.Size([2])
09/21/2023, 05:25:12# labels of 130000: tensor([77, 77, 77, 77, 77, 77, 77, 77], device='cuda:0') torch.Size([8])
09/21/2023, 05:25:12# predicted of 130000: tensor([77, 77, 77, 77, 77, 77, 77, 77], device='cuda:0') torch.Size([8])
09/21/2023, 05:25:30# total batches: 132000
09/21/2023, 05:25:30# Epoch 6 | Train Loss: 1.6485 | Train Accuracy: 0.6009
09/21/2023, 05:25:30# labels of Validation: tensor([110, 110], device='cuda:0') torch.Size([2])
09/21/2023, 05:25:30# predicted of Validation: tensor([59, 59], device='cuda:0') torch.Size([2])
09/21/2023, 05:25:30# labels of 0: tensor([110, 110], device='cuda:0') torch.Size([2])
09/21/2023, 05:25:30# predicted of 0: tensor([59, 59], device='cuda:0') torch.Size([2])
09/21/2023, 05:25:33# labels of Validation: tensor([60], device='cuda:0') torch.Size([1])
09/21/2023, 05:25:33# predicted of Validation: tensor([75], device='cuda:0') torch.Size([1])
09/21/2023, 05:25:36# labels of Validation: tensor([161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161], device='cuda:0') torch.Size([150])
09/21/2023, 05:25:37# predicted of Validation: tensor([161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161], device='cuda:0') torch.Size([150])
09/21/2023, 05:25:40# labels of Validation: tensor([101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
        101, 101], device='cuda:0') torch.Size([16])
09/21/2023, 05:25:40# predicted of Validation: tensor([101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
        101, 101], device='cuda:0') torch.Size([16])
09/21/2023, 05:25:43# labels of Validation: tensor([155,  65,  65,  65, 155, 155, 155], device='cuda:0') torch.Size([7])
09/21/2023, 05:25:43# predicted of Validation: tensor([155,  65,  65,  65, 155, 155, 155], device='cuda:0') torch.Size([7])
09/21/2023, 05:25:47# labels of Validation: tensor([49], device='cuda:0') torch.Size([1])
09/21/2023, 05:25:47# predicted of Validation: tensor([151], device='cuda:0') torch.Size([1])
09/21/2023, 05:25:47# labels of 5000: tensor([49], device='cuda:0') torch.Size([1])
09/21/2023, 05:25:47# predicted of 5000: tensor([151], device='cuda:0') torch.Size([1])
09/21/2023, 05:25:50# labels of Validation: tensor([51, 65, 65, 65, 51, 51, 51, 51], device='cuda:0') torch.Size([8])
09/21/2023, 05:25:50# predicted of Validation: tensor([51, 65, 65, 65, 51, 51, 51, 51], device='cuda:0') torch.Size([8])
09/21/2023, 05:25:54# labels of Validation: tensor([86, 86], device='cuda:0') torch.Size([2])
09/21/2023, 05:25:54# predicted of Validation: tensor([86, 86], device='cuda:0') torch.Size([2])
09/21/2023, 05:25:57# labels of Validation: tensor([140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140],
       device='cuda:0') torch.Size([13])
09/21/2023, 05:25:57# predicted of Validation: tensor([140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140],
       device='cuda:0') torch.Size([13])
09/21/2023, 05:26:01# labels of Validation: tensor([75], device='cuda:0') torch.Size([1])
09/21/2023, 05:26:01# predicted of Validation: tensor([49], device='cuda:0') torch.Size([1])
09/21/2023, 05:26:04# labels of Validation: tensor([98], device='cuda:0') torch.Size([1])
09/21/2023, 05:26:04# predicted of Validation: tensor([98], device='cuda:0') torch.Size([1])
09/21/2023, 05:26:04# labels of 10000: tensor([98], device='cuda:0') torch.Size([1])
09/21/2023, 05:26:04# predicted of 10000: tensor([98], device='cuda:0') torch.Size([1])
09/21/2023, 05:26:08# labels of Validation: tensor([47], device='cuda:0') torch.Size([1])
09/21/2023, 05:26:08# predicted of Validation: tensor([116], device='cuda:0') torch.Size([1])
09/21/2023, 05:26:11# labels of Validation: tensor([127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
        127, 127, 127, 127, 127, 127], device='cuda:0') torch.Size([20])
09/21/2023, 05:26:11# predicted of Validation: tensor([127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
        127, 127, 127, 127, 127, 127], device='cuda:0') torch.Size([20])
09/21/2023, 05:26:15# labels of Validation: tensor([63, 63, 63, 63], device='cuda:0') torch.Size([4])
09/21/2023, 05:26:15# predicted of Validation: tensor([63, 63, 63, 63], device='cuda:0') torch.Size([4])
09/21/2023, 05:26:18# labels of Validation: tensor([18], device='cuda:0') torch.Size([1])
09/21/2023, 05:26:18# predicted of Validation: tensor([57], device='cuda:0') torch.Size([1])
09/21/2023, 05:26:22# labels of Validation: tensor([45, 65, 45, 45], device='cuda:0') torch.Size([4])
09/21/2023, 05:26:22# predicted of Validation: tensor([45, 65, 45, 45], device='cuda:0') torch.Size([4])
09/21/2023, 05:26:22# labels of 15000: tensor([45, 65, 45, 45], device='cuda:0') torch.Size([4])
09/21/2023, 05:26:22# predicted of 15000: tensor([45, 65, 45, 45], device='cuda:0') torch.Size([4])
09/21/2023, 05:26:25# labels of Validation: tensor([21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21], device='cuda:0') torch.Size([11])
09/21/2023, 05:26:25# predicted of Validation: tensor([21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21], device='cuda:0') torch.Size([11])
09/21/2023, 05:26:27# Validation Loss: 1.6299 | Validation Accuracy: 0.6022

09/21/2023, 05:27:10# labels of 5000: tensor([65, 46, 46], device='cuda:0') torch.Size([3])
09/21/2023, 05:27:10# predicted of 5000: tensor([65, 46, 46], device='cuda:0') torch.Size([3])
09/21/2023, 05:27:53# labels of 10000: tensor([9], device='cuda:0') torch.Size([1])
09/21/2023, 05:27:53# predicted of 10000: tensor([97], device='cuda:0') torch.Size([1])
09/21/2023, 05:28:35# labels of 15000: tensor([156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
         65,  65,  65, 156, 156, 156, 156, 156, 156, 156, 156],
       device='cuda:0') torch.Size([67])
09/21/2023, 05:28:35# predicted of 15000: tensor([156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
         65,  65,  65, 156, 156, 156, 156, 156, 156, 156, 156],
       device='cuda:0') torch.Size([67])
09/21/2023, 05:29:18# labels of 20000: tensor([130, 130, 130, 130, 130], device='cuda:0') torch.Size([5])
09/21/2023, 05:29:18# predicted of 20000: tensor([130, 130, 130, 130, 130], device='cuda:0') torch.Size([5])
09/21/2023, 05:30:01# labels of 25000: tensor([56, 56, 56, 56, 56, 56], device='cuda:0') torch.Size([6])
09/21/2023, 05:30:01# predicted of 25000: tensor([56, 56, 56, 56, 56, 56], device='cuda:0') torch.Size([6])
09/21/2023, 05:30:43# labels of 30000: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65, 141, 141, 141, 141,
        141, 141, 141, 141, 141, 141], device='cuda:0') torch.Size([104])
09/21/2023, 05:30:43# predicted of 30000: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65, 141, 141, 141, 141,
        141, 141, 141, 141, 141, 141], device='cuda:0') torch.Size([104])
09/21/2023, 05:31:26# labels of 35000: tensor([150], device='cuda:0') torch.Size([1])
09/21/2023, 05:31:26# predicted of 35000: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 05:32:09# labels of 40000: tensor([30], device='cuda:0') torch.Size([1])
09/21/2023, 05:32:09# predicted of 40000: tensor([111], device='cuda:0') torch.Size([1])
09/21/2023, 05:32:51# labels of 45000: tensor([54], device='cuda:0') torch.Size([1])
09/21/2023, 05:32:51# predicted of 45000: tensor([72], device='cuda:0') torch.Size([1])
09/21/2023, 05:33:34# labels of 50000: tensor([124], device='cuda:0') torch.Size([1])
09/21/2023, 05:33:34# predicted of 50000: tensor([114], device='cuda:0') torch.Size([1])
09/21/2023, 05:34:17# labels of 55000: tensor([20, 20], device='cuda:0') torch.Size([2])
09/21/2023, 05:34:17# predicted of 55000: tensor([20, 20], device='cuda:0') torch.Size([2])
09/21/2023, 05:35:00# labels of 60000: tensor([161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161], device='cuda:0') torch.Size([150])
09/21/2023, 05:35:00# predicted of 60000: tensor([161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161], device='cuda:0') torch.Size([150])
09/21/2023, 05:35:43# labels of 65000: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
        149, 149, 149, 149], device='cuda:0') torch.Size([32])
09/21/2023, 05:35:43# predicted of 65000: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
        149, 149, 149, 149], device='cuda:0') torch.Size([32])
09/21/2023, 05:36:26# labels of 70000: tensor([64, 64], device='cuda:0') torch.Size([2])
09/21/2023, 05:36:26# predicted of 70000: tensor([103, 103], device='cuda:0') torch.Size([2])
09/21/2023, 05:37:08# labels of 75000: tensor([20, 20], device='cuda:0') torch.Size([2])
09/21/2023, 05:37:08# predicted of 75000: tensor([20, 20], device='cuda:0') torch.Size([2])
09/21/2023, 05:37:51# labels of 80000: tensor([31], device='cuda:0') torch.Size([1])
09/21/2023, 05:37:51# predicted of 80000: tensor([79], device='cuda:0') torch.Size([1])
09/21/2023, 05:38:34# labels of 85000: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], device='cuda:0') torch.Size([15])
09/21/2023, 05:38:34# predicted of 85000: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], device='cuda:0') torch.Size([15])
09/21/2023, 05:39:16# labels of 90000: tensor([136, 136, 136, 136, 136, 136, 136], device='cuda:0') torch.Size([7])
09/21/2023, 05:39:16# predicted of 90000: tensor([136, 136, 136, 136, 136, 136, 136], device='cuda:0') torch.Size([7])
09/21/2023, 05:39:58# labels of 95000: tensor([52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 65, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52], device='cuda:0') torch.Size([138])
09/21/2023, 05:39:58# predicted of 95000: tensor([52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 65, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52], device='cuda:0') torch.Size([138])
09/21/2023, 05:40:41# labels of 100000: tensor([119], device='cuda:0') torch.Size([1])
09/21/2023, 05:40:41# predicted of 100000: tensor([64], device='cuda:0') torch.Size([1])
09/21/2023, 05:41:24# labels of 105000: tensor([87], device='cuda:0') torch.Size([1])
09/21/2023, 05:41:24# predicted of 105000: tensor([36], device='cuda:0') torch.Size([1])
09/21/2023, 05:42:06# labels of 110000: tensor([5, 5, 5], device='cuda:0') torch.Size([3])
09/21/2023, 05:42:06# predicted of 110000: tensor([5, 5, 5], device='cuda:0') torch.Size([3])
09/21/2023, 05:42:49# labels of 115000: tensor([125], device='cuda:0') torch.Size([1])
09/21/2023, 05:42:49# predicted of 115000: tensor([152], device='cuda:0') torch.Size([1])
09/21/2023, 05:43:31# labels of 120000: tensor([151], device='cuda:0') torch.Size([1])
09/21/2023, 05:43:31# predicted of 120000: tensor([109], device='cuda:0') torch.Size([1])
09/21/2023, 05:44:14# labels of 125000: tensor([51, 65, 65, 65, 51, 51, 51, 51], device='cuda:0') torch.Size([8])
09/21/2023, 05:44:14# predicted of 125000: tensor([51, 65, 65, 65, 51, 51, 51, 51], device='cuda:0') torch.Size([8])
09/21/2023, 05:44:57# labels of 130000: tensor([109], device='cuda:0') torch.Size([1])
09/21/2023, 05:44:57# predicted of 130000: tensor([119], device='cuda:0') torch.Size([1])
09/21/2023, 05:45:14# total batches: 132000
09/21/2023, 05:45:14# Epoch 7 | Train Loss: 1.6459 | Train Accuracy: 0.6011
09/21/2023, 05:45:14# labels of Validation: tensor([115, 115, 115, 115, 115, 115, 115, 115, 115, 115], device='cuda:0') torch.Size([10])
09/21/2023, 05:45:14# predicted of Validation: tensor([115, 115, 115, 115, 115, 115, 115, 115, 115, 115], device='cuda:0') torch.Size([10])
09/21/2023, 05:45:14# labels of 0: tensor([115, 115, 115, 115, 115, 115, 115, 115, 115, 115], device='cuda:0') torch.Size([10])
09/21/2023, 05:45:14# predicted of 0: tensor([115, 115, 115, 115, 115, 115, 115, 115, 115, 115], device='cuda:0') torch.Size([10])
09/21/2023, 05:45:17# labels of Validation: tensor([57], device='cuda:0') torch.Size([1])
09/21/2023, 05:45:17# predicted of Validation: tensor([12], device='cuda:0') torch.Size([1])
09/21/2023, 05:45:21# labels of Validation: tensor([89, 89], device='cuda:0') torch.Size([2])
09/21/2023, 05:45:21# predicted of Validation: tensor([89, 89], device='cuda:0') torch.Size([2])
09/21/2023, 05:45:24# labels of Validation: tensor([26, 26, 26, 26, 26, 26], device='cuda:0') torch.Size([6])
09/21/2023, 05:45:24# predicted of Validation: tensor([26, 26, 26, 26, 26, 26], device='cuda:0') torch.Size([6])
09/21/2023, 05:45:28# labels of Validation: tensor([96, 96, 96, 96, 96, 96], device='cuda:0') torch.Size([6])
09/21/2023, 05:45:28# predicted of Validation: tensor([96, 96, 96, 96, 96, 96], device='cuda:0') torch.Size([6])
09/21/2023, 05:45:31# labels of Validation: tensor([85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85], device='cuda:0') torch.Size([11])
09/21/2023, 05:45:31# predicted of Validation: tensor([85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85], device='cuda:0') torch.Size([11])
09/21/2023, 05:45:31# labels of 5000: tensor([85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85], device='cuda:0') torch.Size([11])
09/21/2023, 05:45:31# predicted of 5000: tensor([85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85], device='cuda:0') torch.Size([11])
09/21/2023, 05:45:35# labels of Validation: tensor([5, 5, 5], device='cuda:0') torch.Size([3])
09/21/2023, 05:45:35# predicted of Validation: tensor([5, 5, 5], device='cuda:0') torch.Size([3])
09/21/2023, 05:45:38# labels of Validation: tensor([165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165],
       device='cuda:0') torch.Size([82])
09/21/2023, 05:45:38# predicted of Validation: tensor([165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165],
       device='cuda:0') torch.Size([82])
09/21/2023, 05:45:42# labels of Validation: tensor([164], device='cuda:0') torch.Size([1])
09/21/2023, 05:45:42# predicted of Validation: tensor([79], device='cuda:0') torch.Size([1])
09/21/2023, 05:45:45# labels of Validation: tensor([95, 95, 95], device='cuda:0') torch.Size([3])
09/21/2023, 05:45:45# predicted of Validation: tensor([95, 95, 95], device='cuda:0') torch.Size([3])
09/21/2023, 05:45:48# labels of Validation: tensor([41, 41, 41, 41, 41], device='cuda:0') torch.Size([5])
09/21/2023, 05:45:48# predicted of Validation: tensor([41, 41, 41, 41, 41], device='cuda:0') torch.Size([5])
09/21/2023, 05:45:48# labels of 10000: tensor([41, 41, 41, 41, 41], device='cuda:0') torch.Size([5])
09/21/2023, 05:45:48# predicted of 10000: tensor([41, 41, 41, 41, 41], device='cuda:0') torch.Size([5])
09/21/2023, 05:45:52# labels of Validation: tensor([88, 88], device='cuda:0') torch.Size([2])
09/21/2023, 05:45:52# predicted of Validation: tensor([91, 68], device='cuda:0') torch.Size([2])
09/21/2023, 05:45:55# labels of Validation: tensor([10, 10], device='cuda:0') torch.Size([2])
09/21/2023, 05:45:55# predicted of Validation: tensor([10, 10], device='cuda:0') torch.Size([2])
09/21/2023, 05:45:59# labels of Validation: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65, 135, 135],
       device='cuda:0') torch.Size([11])
09/21/2023, 05:45:59# predicted of Validation: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65, 135, 135],
       device='cuda:0') torch.Size([11])
09/21/2023, 05:46:02# labels of Validation: tensor([153, 153, 153], device='cuda:0') torch.Size([3])
09/21/2023, 05:46:02# predicted of Validation: tensor([153, 153, 153], device='cuda:0') torch.Size([3])
09/21/2023, 05:46:06# labels of Validation: tensor([100, 100, 100, 100, 100, 100], device='cuda:0') torch.Size([6])
09/21/2023, 05:46:06# predicted of Validation: tensor([100, 100, 100, 100, 100, 100], device='cuda:0') torch.Size([6])
09/21/2023, 05:46:06# labels of 15000: tensor([100, 100, 100, 100, 100, 100], device='cuda:0') torch.Size([6])
09/21/2023, 05:46:06# predicted of 15000: tensor([100, 100, 100, 100, 100, 100], device='cuda:0') torch.Size([6])
09/21/2023, 05:46:09# labels of Validation: tensor([19, 19, 19, 19, 19], device='cuda:0') torch.Size([5])
09/21/2023, 05:46:09# predicted of Validation: tensor([19, 19, 19, 19, 19], device='cuda:0') torch.Size([5])
09/21/2023, 05:46:11# Validation Loss: 1.6305 | Validation Accuracy: 0.6020

09/21/2023, 05:46:54# labels of 5000: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 05:46:54# predicted of 5000: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 05:47:37# labels of 10000: tensor([102, 102], device='cuda:0') torch.Size([2])
09/21/2023, 05:47:37# predicted of 10000: tensor([102, 102], device='cuda:0') torch.Size([2])
09/21/2023, 05:48:20# labels of 15000: tensor([133, 133, 133, 133, 133, 133, 133, 133], device='cuda:0') torch.Size([8])
09/21/2023, 05:48:20# predicted of 15000: tensor([133, 133, 133, 133, 133, 133, 133, 133], device='cuda:0') torch.Size([8])
09/21/2023, 05:49:03# labels of 20000: tensor([76], device='cuda:0') torch.Size([1])
09/21/2023, 05:49:03# predicted of 20000: tensor([124], device='cuda:0') torch.Size([1])
09/21/2023, 05:49:39# labels of 25000: tensor([133, 133, 133, 133, 133, 133, 133, 133], device='cuda:0') torch.Size([8])
09/21/2023, 05:49:39# predicted of 25000: tensor([133, 133, 133, 133, 133, 133, 133, 133], device='cuda:0') torch.Size([8])
09/21/2023, 05:50:19# labels of 30000: tensor([164], device='cuda:0') torch.Size([1])
09/21/2023, 05:50:19# predicted of 30000: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 05:51:01# labels of 35000: tensor([82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
        82, 82, 82, 82, 82, 82, 82, 82, 82], device='cuda:0') torch.Size([27])
09/21/2023, 05:51:01# predicted of 35000: tensor([82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
        82, 82, 82, 82, 82, 82, 82, 82, 82], device='cuda:0') torch.Size([27])
09/21/2023, 05:51:44# labels of 40000: tensor([76], device='cuda:0') torch.Size([1])
09/21/2023, 05:51:44# predicted of 40000: tensor([83], device='cuda:0') torch.Size([1])
09/21/2023, 05:52:27# labels of 45000: tensor([50, 50, 50], device='cuda:0') torch.Size([3])
09/21/2023, 05:52:27# predicted of 45000: tensor([50, 50, 50], device='cuda:0') torch.Size([3])
09/21/2023, 05:53:10# labels of 50000: tensor([29, 29, 29, 29, 29, 29, 29, 29, 29, 29], device='cuda:0') torch.Size([10])
09/21/2023, 05:53:10# predicted of 50000: tensor([29, 29, 29, 29, 29, 29, 29, 29, 29, 29], device='cuda:0') torch.Size([10])
09/21/2023, 05:53:53# labels of 55000: tensor([ 65, 102, 102], device='cuda:0') torch.Size([3])
09/21/2023, 05:53:53# predicted of 55000: tensor([ 65, 102, 102], device='cuda:0') torch.Size([3])
09/21/2023, 05:54:36# labels of 60000: tensor([77, 77, 77, 77, 77, 77, 77, 77], device='cuda:0') torch.Size([8])
09/21/2023, 05:54:36# predicted of 60000: tensor([77, 77, 77, 77, 77, 77, 77, 77], device='cuda:0') torch.Size([8])
09/21/2023, 05:55:19# labels of 65000: tensor([13, 13, 13, 13, 13], device='cuda:0') torch.Size([5])
09/21/2023, 05:55:19# predicted of 65000: tensor([13, 13, 13, 13, 13], device='cuda:0') torch.Size([5])
09/21/2023, 05:56:02# labels of 70000: tensor([85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85], device='cuda:0') torch.Size([11])
09/21/2023, 05:56:02# predicted of 70000: tensor([85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85], device='cuda:0') torch.Size([11])
09/21/2023, 05:56:45# labels of 75000: tensor([45, 45, 45], device='cuda:0') torch.Size([3])
09/21/2023, 05:56:45# predicted of 75000: tensor([45, 45, 45], device='cuda:0') torch.Size([3])
09/21/2023, 05:57:27# labels of 80000: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 05:57:27# predicted of 80000: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 05:58:10# labels of 85000: tensor([54], device='cuda:0') torch.Size([1])
09/21/2023, 05:58:10# predicted of 85000: tensor([114], device='cuda:0') torch.Size([1])
09/21/2023, 05:58:53# labels of 90000: tensor([40, 40, 40, 40, 40, 40], device='cuda:0') torch.Size([6])
09/21/2023, 05:58:53# predicted of 90000: tensor([40, 40, 40, 40, 40, 40], device='cuda:0') torch.Size([6])
09/21/2023, 05:59:36# labels of 95000: tensor([103, 103], device='cuda:0') torch.Size([2])
09/21/2023, 05:59:36# predicted of 95000: tensor([ 91, 114], device='cuda:0') torch.Size([2])
09/21/2023, 06:00:19# labels of 100000: tensor([17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17],
       device='cuda:0') torch.Size([104])
09/21/2023, 06:00:19# predicted of 100000: tensor([17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17],
       device='cuda:0') torch.Size([104])
09/21/2023, 06:01:02# labels of 105000: tensor([94, 94], device='cuda:0') torch.Size([2])
09/21/2023, 06:01:02# predicted of 105000: tensor([94, 94], device='cuda:0') torch.Size([2])
09/21/2023, 06:01:45# labels of 110000: tensor([113, 113], device='cuda:0') torch.Size([2])
09/21/2023, 06:01:45# predicted of 110000: tensor([44, 44], device='cuda:0') torch.Size([2])
09/21/2023, 06:02:27# labels of 115000: tensor([34], device='cuda:0') torch.Size([1])
09/21/2023, 06:02:27# predicted of 115000: tensor([152], device='cuda:0') torch.Size([1])
09/21/2023, 06:03:10# labels of 120000: tensor([147,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65, 147, 147, 147, 147], device='cuda:0') torch.Size([19])
09/21/2023, 06:03:10# predicted of 120000: tensor([147,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65, 147, 147, 147, 147], device='cuda:0') torch.Size([19])
09/21/2023, 06:03:53# labels of 125000: tensor([140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140],
       device='cuda:0') torch.Size([13])
09/21/2023, 06:03:53# predicted of 125000: tensor([140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140],
       device='cuda:0') torch.Size([13])
09/21/2023, 06:04:36# labels of 130000: tensor([77, 77, 77, 77, 77, 77, 77, 77], device='cuda:0') torch.Size([8])
09/21/2023, 06:04:36# predicted of 130000: tensor([77, 77, 77, 77, 77, 77, 77, 77], device='cuda:0') torch.Size([8])
09/21/2023, 06:04:53# total batches: 132000
09/21/2023, 06:04:53# Epoch 8 | Train Loss: 1.6449 | Train Accuracy: 0.6020
09/21/2023, 06:04:53# labels of Validation: tensor([107, 107, 107, 107, 107, 107, 107, 107], device='cuda:0') torch.Size([8])
09/21/2023, 06:04:53# predicted of Validation: tensor([107, 107, 107, 107, 107, 107, 107, 107], device='cuda:0') torch.Size([8])
09/21/2023, 06:04:53# labels of 0: tensor([107, 107, 107, 107, 107, 107, 107, 107], device='cuda:0') torch.Size([8])
09/21/2023, 06:04:53# predicted of 0: tensor([107, 107, 107, 107, 107, 107, 107, 107], device='cuda:0') torch.Size([8])
09/21/2023, 06:04:56# labels of Validation: tensor([15, 15, 15], device='cuda:0') torch.Size([3])
09/21/2023, 06:04:56# predicted of Validation: tensor([15, 15, 15], device='cuda:0') torch.Size([3])
09/21/2023, 06:05:00# labels of Validation: tensor([1], device='cuda:0') torch.Size([1])
09/21/2023, 06:05:00# predicted of Validation: tensor([81], device='cuda:0') torch.Size([1])
09/21/2023, 06:05:03# labels of Validation: tensor([162], device='cuda:0') torch.Size([1])
09/21/2023, 06:05:03# predicted of Validation: tensor([88], device='cuda:0') torch.Size([1])
09/21/2023, 06:05:07# labels of Validation: tensor([ 65,  65,  65, 102, 102], device='cuda:0') torch.Size([5])
09/21/2023, 06:05:07# predicted of Validation: tensor([ 65,  65,  65, 102, 102], device='cuda:0') torch.Size([5])
09/21/2023, 06:05:10# labels of Validation: tensor([8, 8], device='cuda:0') torch.Size([2])
09/21/2023, 06:05:10# predicted of Validation: tensor([ 88, 124], device='cuda:0') torch.Size([2])
09/21/2023, 06:05:10# labels of 5000: tensor([8, 8], device='cuda:0') torch.Size([2])
09/21/2023, 06:05:10# predicted of 5000: tensor([ 88, 124], device='cuda:0') torch.Size([2])
09/21/2023, 06:05:14# labels of Validation: tensor([56, 56, 56, 56, 56, 56], device='cuda:0') torch.Size([6])
09/21/2023, 06:05:14# predicted of Validation: tensor([56, 56, 56, 56, 56, 56], device='cuda:0') torch.Size([6])
09/21/2023, 06:05:17# labels of Validation: tensor([36], device='cuda:0') torch.Size([1])
09/21/2023, 06:05:17# predicted of Validation: tensor([75], device='cuda:0') torch.Size([1])
09/21/2023, 06:05:21# labels of Validation: tensor([55], device='cuda:0') torch.Size([1])
09/21/2023, 06:05:21# predicted of Validation: tensor([8], device='cuda:0') torch.Size([1])
09/21/2023, 06:05:24# labels of Validation: tensor([88, 88], device='cuda:0') torch.Size([2])
09/21/2023, 06:05:24# predicted of Validation: tensor([88, 59], device='cuda:0') torch.Size([2])
09/21/2023, 06:05:28# labels of Validation: tensor([160, 160, 160, 160, 160, 160, 160, 160], device='cuda:0') torch.Size([8])
09/21/2023, 06:05:28# predicted of Validation: tensor([160, 160, 160, 160, 160, 160, 160, 160], device='cuda:0') torch.Size([8])
09/21/2023, 06:05:28# labels of 10000: tensor([160, 160, 160, 160, 160, 160, 160, 160], device='cuda:0') torch.Size([8])
09/21/2023, 06:05:28# predicted of 10000: tensor([160, 160, 160, 160, 160, 160, 160, 160], device='cuda:0') torch.Size([8])
09/21/2023, 06:05:31# labels of Validation: tensor([43, 43], device='cuda:0') torch.Size([2])
09/21/2023, 06:05:31# predicted of Validation: tensor([43, 43], device='cuda:0') torch.Size([2])
09/21/2023, 06:05:35# labels of Validation: tensor([62, 62, 62, 62, 62, 62], device='cuda:0') torch.Size([6])
09/21/2023, 06:05:35# predicted of Validation: tensor([62, 62, 62, 62, 62, 62], device='cuda:0') torch.Size([6])
09/21/2023, 06:05:39# labels of Validation: tensor([86, 86], device='cuda:0') torch.Size([2])
09/21/2023, 06:05:39# predicted of Validation: tensor([86, 86], device='cuda:0') torch.Size([2])
09/21/2023, 06:05:42# labels of Validation: tensor([133, 133, 133, 133, 133, 133, 133, 133], device='cuda:0') torch.Size([8])
09/21/2023, 06:05:42# predicted of Validation: tensor([133, 133, 133, 133, 133, 133, 133, 133], device='cuda:0') torch.Size([8])
09/21/2023, 06:05:46# labels of Validation: tensor([63, 63, 63, 63], device='cuda:0') torch.Size([4])
09/21/2023, 06:05:46# predicted of Validation: tensor([63, 63, 63, 63], device='cuda:0') torch.Size([4])
09/21/2023, 06:05:46# labels of 15000: tensor([63, 63, 63, 63], device='cuda:0') torch.Size([4])
09/21/2023, 06:05:46# predicted of 15000: tensor([63, 63, 63, 63], device='cuda:0') torch.Size([4])
09/21/2023, 06:05:49# labels of Validation: tensor([164], device='cuda:0') torch.Size([1])
09/21/2023, 06:05:49# predicted of Validation: tensor([109], device='cuda:0') torch.Size([1])
09/21/2023, 06:05:51# Validation Loss: 1.6290 | Validation Accuracy: 0.6039

09/21/2023, 06:06:34# labels of 5000: tensor([161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161], device='cuda:0') torch.Size([150])
09/21/2023, 06:06:34# predicted of 5000: tensor([161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161], device='cuda:0') torch.Size([150])
09/21/2023, 06:07:16# labels of 10000: tensor([159, 159, 159, 159, 159, 159, 159, 159, 159, 159], device='cuda:0') torch.Size([10])
09/21/2023, 06:07:16# predicted of 10000: tensor([159, 159, 159, 159, 159, 159, 159, 159, 159, 159], device='cuda:0') torch.Size([10])
09/21/2023, 06:07:59# labels of 15000: tensor([92], device='cuda:0') torch.Size([1])
09/21/2023, 06:07:59# predicted of 15000: tensor([157], device='cuda:0') torch.Size([1])
09/21/2023, 06:08:41# labels of 20000: tensor([55], device='cuda:0') torch.Size([1])
09/21/2023, 06:08:41# predicted of 20000: tensor([68], device='cuda:0') torch.Size([1])
09/21/2023, 06:09:24# labels of 25000: tensor([42], device='cuda:0') torch.Size([1])
09/21/2023, 06:09:24# predicted of 25000: tensor([83], device='cuda:0') torch.Size([1])
09/21/2023, 06:10:07# labels of 30000: tensor([142], device='cuda:0') torch.Size([1])
09/21/2023, 06:10:07# predicted of 30000: tensor([104], device='cuda:0') torch.Size([1])
09/21/2023, 06:10:50# labels of 35000: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141],
       device='cuda:0') torch.Size([123])
09/21/2023, 06:10:50# predicted of 35000: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141],
       device='cuda:0') torch.Size([123])
09/21/2023, 06:11:32# labels of 40000: tensor([9], device='cuda:0') torch.Size([1])
09/21/2023, 06:11:32# predicted of 40000: tensor([54], device='cuda:0') torch.Size([1])
09/21/2023, 06:12:15# labels of 45000: tensor([74], device='cuda:0') torch.Size([1])
09/21/2023, 06:12:15# predicted of 45000: tensor([54], device='cuda:0') torch.Size([1])
09/21/2023, 06:12:58# labels of 50000: tensor([116], device='cuda:0') torch.Size([1])
09/21/2023, 06:12:58# predicted of 50000: tensor([88], device='cuda:0') torch.Size([1])
09/21/2023, 06:13:41# labels of 55000: tensor([0, 0, 0, 0, 0, 0], device='cuda:0') torch.Size([6])
09/21/2023, 06:13:41# predicted of 55000: tensor([0, 0, 0, 0, 0, 0], device='cuda:0') torch.Size([6])
09/21/2023, 06:14:23# labels of 60000: tensor([19, 19, 19, 19, 19], device='cuda:0') torch.Size([5])
09/21/2023, 06:14:23# predicted of 60000: tensor([19, 19, 19, 19, 19], device='cuda:0') torch.Size([5])
09/21/2023, 06:15:06# labels of 65000: tensor([79, 79], device='cuda:0') torch.Size([2])
09/21/2023, 06:15:06# predicted of 65000: tensor([79, 79], device='cuda:0') torch.Size([2])
09/21/2023, 06:15:49# labels of 70000: tensor([143], device='cuda:0') torch.Size([1])
09/21/2023, 06:15:49# predicted of 70000: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 06:16:32# labels of 75000: tensor([18], device='cuda:0') torch.Size([1])
09/21/2023, 06:16:32# predicted of 75000: tensor([53], device='cuda:0') torch.Size([1])
09/21/2023, 06:17:15# labels of 80000: tensor([38], device='cuda:0') torch.Size([1])
09/21/2023, 06:17:15# predicted of 80000: tensor([34], device='cuda:0') torch.Size([1])
09/21/2023, 06:17:58# labels of 85000: tensor([108, 108, 108, 108], device='cuda:0') torch.Size([4])
09/21/2023, 06:17:58# predicted of 85000: tensor([ 88, 114,  88,  88], device='cuda:0') torch.Size([4])
09/21/2023, 06:18:41# labels of 90000: tensor([114, 114], device='cuda:0') torch.Size([2])
09/21/2023, 06:18:41# predicted of 90000: tensor([131, 131], device='cuda:0') torch.Size([2])
09/21/2023, 06:19:23# labels of 95000: tensor([34], device='cuda:0') torch.Size([1])
09/21/2023, 06:19:23# predicted of 95000: tensor([64], device='cuda:0') torch.Size([1])
09/21/2023, 06:20:06# labels of 100000: tensor([131, 131, 131, 131, 131], device='cuda:0') torch.Size([5])
09/21/2023, 06:20:06# predicted of 100000: tensor([ 91,  59,  91, 131, 131], device='cuda:0') torch.Size([5])
09/21/2023, 06:20:49# labels of 105000: tensor([83], device='cuda:0') torch.Size([1])
09/21/2023, 06:20:49# predicted of 105000: tensor([47], device='cuda:0') torch.Size([1])
09/21/2023, 06:21:31# labels of 110000: tensor([76], device='cuda:0') torch.Size([1])
09/21/2023, 06:21:31# predicted of 110000: tensor([109], device='cuda:0') torch.Size([1])
09/21/2023, 06:22:07# labels of 115000: tensor([125], device='cuda:0') torch.Size([1])
09/21/2023, 06:22:07# predicted of 115000: tensor([143], device='cuda:0') torch.Size([1])
09/21/2023, 06:22:50# labels of 120000: tensor([ 65,  65, 135, 135], device='cuda:0') torch.Size([4])
09/21/2023, 06:22:50# predicted of 120000: tensor([ 65,  65, 135, 135], device='cuda:0') torch.Size([4])
09/21/2023, 06:23:32# labels of 125000: tensor([56, 56, 56, 56, 56, 56], device='cuda:0') torch.Size([6])
09/21/2023, 06:23:32# predicted of 125000: tensor([56, 56, 56, 56, 56, 56], device='cuda:0') torch.Size([6])
09/21/2023, 06:24:15# labels of 130000: tensor([61, 61, 61], device='cuda:0') torch.Size([3])
09/21/2023, 06:24:15# predicted of 130000: tensor([61, 61, 61], device='cuda:0') torch.Size([3])
09/21/2023, 06:24:33# total batches: 132000
09/21/2023, 06:24:33# Epoch 9 | Train Loss: 1.6453 | Train Accuracy: 0.6009
09/21/2023, 06:24:33# labels of Validation: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], device='cuda:0') torch.Size([15])
09/21/2023, 06:24:33# predicted of Validation: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], device='cuda:0') torch.Size([15])
09/21/2023, 06:24:33# labels of 0: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], device='cuda:0') torch.Size([15])
09/21/2023, 06:24:33# predicted of 0: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], device='cuda:0') torch.Size([15])
09/21/2023, 06:24:36# labels of Validation: tensor([147,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65, 147,
        147, 147, 147], device='cuda:0') torch.Size([17])
09/21/2023, 06:24:36# predicted of Validation: tensor([147,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65, 147,
        147, 147, 147], device='cuda:0') torch.Size([17])
09/21/2023, 06:24:39# labels of Validation: tensor([130, 130, 130, 130, 130], device='cuda:0') torch.Size([5])
09/21/2023, 06:24:39# predicted of Validation: tensor([130, 130, 130, 130, 130], device='cuda:0') torch.Size([5])
09/21/2023, 06:24:43# labels of Validation: tensor([104], device='cuda:0') torch.Size([1])
09/21/2023, 06:24:43# predicted of Validation: tensor([81], device='cuda:0') torch.Size([1])
09/21/2023, 06:24:46# labels of Validation: tensor([75], device='cuda:0') torch.Size([1])
09/21/2023, 06:24:46# predicted of Validation: tensor([164], device='cuda:0') torch.Size([1])
09/21/2023, 06:24:50# labels of Validation: tensor([98], device='cuda:0') torch.Size([1])
09/21/2023, 06:24:50# predicted of Validation: tensor([98], device='cuda:0') torch.Size([1])
09/21/2023, 06:24:50# labels of 5000: tensor([98], device='cuda:0') torch.Size([1])
09/21/2023, 06:24:50# predicted of 5000: tensor([98], device='cuda:0') torch.Size([1])
09/21/2023, 06:24:53# labels of Validation: tensor([53], device='cuda:0') torch.Size([1])
09/21/2023, 06:24:53# predicted of Validation: tensor([164], device='cuda:0') torch.Size([1])
09/21/2023, 06:24:57# labels of Validation: tensor([76], device='cuda:0') torch.Size([1])
09/21/2023, 06:24:57# predicted of Validation: tensor([81], device='cuda:0') torch.Size([1])
09/21/2023, 06:25:00# labels of Validation: tensor([96, 96, 96, 96, 96, 96], device='cuda:0') torch.Size([6])
09/21/2023, 06:25:00# predicted of Validation: tensor([96, 96, 96, 96, 96, 96], device='cuda:0') torch.Size([6])
09/21/2023, 06:25:04# labels of Validation: tensor([25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
        25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
        25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],
       device='cuda:0') torch.Size([50])
09/21/2023, 06:25:04# predicted of Validation: tensor([25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
        25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
        25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],
       device='cuda:0') torch.Size([50])
09/21/2023, 06:25:07# labels of Validation: tensor([148, 148, 148, 148, 148, 148, 148], device='cuda:0') torch.Size([7])
09/21/2023, 06:25:07# predicted of Validation: tensor([148, 148, 148, 148, 148, 148, 148], device='cuda:0') torch.Size([7])
09/21/2023, 06:25:07# labels of 10000: tensor([148, 148, 148, 148, 148, 148, 148], device='cuda:0') torch.Size([7])
09/21/2023, 06:25:07# predicted of 10000: tensor([148, 148, 148, 148, 148, 148, 148], device='cuda:0') torch.Size([7])
09/21/2023, 06:25:11# labels of Validation: tensor([101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
        101, 101], device='cuda:0') torch.Size([16])
09/21/2023, 06:25:11# predicted of Validation: tensor([101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
        101, 101], device='cuda:0') torch.Size([16])
09/21/2023, 06:25:14# labels of Validation: tensor([90, 90], device='cuda:0') torch.Size([2])
09/21/2023, 06:25:14# predicted of Validation: tensor([113, 113], device='cuda:0') torch.Size([2])
09/21/2023, 06:25:18# labels of Validation: tensor([122, 122, 122, 122, 122, 122, 122], device='cuda:0') torch.Size([7])
09/21/2023, 06:25:18# predicted of Validation: tensor([122, 122, 122, 122, 122, 122, 122], device='cuda:0') torch.Size([7])
09/21/2023, 06:25:21# labels of Validation: tensor([57], device='cuda:0') torch.Size([1])
09/21/2023, 06:25:21# predicted of Validation: tensor([151], device='cuda:0') torch.Size([1])
09/21/2023, 06:25:25# labels of Validation: tensor([103, 103], device='cuda:0') torch.Size([2])
09/21/2023, 06:25:25# predicted of Validation: tensor([113, 151], device='cuda:0') torch.Size([2])
09/21/2023, 06:25:25# labels of 15000: tensor([103, 103], device='cuda:0') torch.Size([2])
09/21/2023, 06:25:25# predicted of 15000: tensor([113, 151], device='cuda:0') torch.Size([2])
09/21/2023, 06:25:28# labels of Validation: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 06:25:28# predicted of Validation: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 06:25:30# Validation Loss: 1.6291 | Validation Accuracy: 0.6019

09/21/2023, 06:26:13# labels of 5000: tensor([132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132], device='cuda:0') torch.Size([216])
09/21/2023, 06:26:13# predicted of 5000: tensor([132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132], device='cuda:0') torch.Size([216])
09/21/2023, 06:26:55# labels of 10000: tensor([162], device='cuda:0') torch.Size([1])
09/21/2023, 06:26:55# predicted of 10000: tensor([59], device='cuda:0') torch.Size([1])
09/21/2023, 06:27:38# labels of 15000: tensor([110, 110], device='cuda:0') torch.Size([2])
09/21/2023, 06:27:38# predicted of 15000: tensor([54, 54], device='cuda:0') torch.Size([2])
09/21/2023, 06:28:21# labels of 20000: tensor([49], device='cuda:0') torch.Size([1])
09/21/2023, 06:28:21# predicted of 20000: tensor([42], device='cuda:0') torch.Size([1])
09/21/2023, 06:29:04# labels of 25000: tensor([11], device='cuda:0') torch.Size([1])
09/21/2023, 06:29:04# predicted of 25000: tensor([2], device='cuda:0') torch.Size([1])
09/21/2023, 06:29:46# labels of 30000: tensor([104], device='cuda:0') torch.Size([1])
09/21/2023, 06:29:46# predicted of 30000: tensor([116], device='cuda:0') torch.Size([1])
09/21/2023, 06:30:29# labels of 35000: tensor([56, 56, 56, 56, 56, 56], device='cuda:0') torch.Size([6])
09/21/2023, 06:30:29# predicted of 35000: tensor([56, 56, 56, 56, 56, 56], device='cuda:0') torch.Size([6])
09/21/2023, 06:31:12# labels of 40000: tensor([69, 69, 69, 69, 69, 69], device='cuda:0') torch.Size([6])
09/21/2023, 06:31:12# predicted of 40000: tensor([69, 69, 69, 69, 69, 69], device='cuda:0') torch.Size([6])
09/21/2023, 06:31:54# labels of 45000: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
        141, 141, 141, 141, 141, 141, 141, 141, 141, 141], device='cuda:0') torch.Size([52])
09/21/2023, 06:31:54# predicted of 45000: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
        141, 141, 141, 141, 141, 141, 141, 141, 141, 141], device='cuda:0') torch.Size([52])
09/21/2023, 06:32:37# labels of 50000: tensor([ 65, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
        123, 123], device='cuda:0') torch.Size([16])
09/21/2023, 06:32:37# predicted of 50000: tensor([ 65, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
        123, 123], device='cuda:0') torch.Size([16])
09/21/2023, 06:33:20# labels of 55000: tensor([114, 114], device='cuda:0') torch.Size([2])
09/21/2023, 06:33:20# predicted of 55000: tensor([ 81, 111], device='cuda:0') torch.Size([2])
09/21/2023, 06:34:02# labels of 60000: tensor([142], device='cuda:0') torch.Size([1])
09/21/2023, 06:34:02# predicted of 60000: tensor([151], device='cuda:0') torch.Size([1])
09/21/2023, 06:34:45# labels of 65000: tensor([40, 40, 40, 40, 40, 40], device='cuda:0') torch.Size([6])
09/21/2023, 06:34:45# predicted of 65000: tensor([40, 40, 40, 40, 40, 40], device='cuda:0') torch.Size([6])
09/21/2023, 06:35:28# labels of 70000: tensor([147,  65,  65,  65,  65,  65,  65,  65,  65, 147, 147, 147, 147],
       device='cuda:0') torch.Size([13])
09/21/2023, 06:35:28# predicted of 70000: tensor([147,  65,  65,  65,  65,  65,  65,  65,  65, 147, 147, 147, 147],
       device='cuda:0') torch.Size([13])
09/21/2023, 06:36:10# labels of 75000: tensor([139, 139, 139, 139, 139], device='cuda:0') torch.Size([5])
09/21/2023, 06:36:10# predicted of 75000: tensor([139, 139, 139, 139, 139], device='cuda:0') torch.Size([5])
09/21/2023, 06:36:53# labels of 80000: tensor([153, 153, 153], device='cuda:0') torch.Size([3])
09/21/2023, 06:36:53# predicted of 80000: tensor([153, 153, 153], device='cuda:0') torch.Size([3])
09/21/2023, 06:37:36# labels of 85000: tensor([17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17],
       device='cuda:0') torch.Size([104])
09/21/2023, 06:37:36# predicted of 85000: tensor([17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 79, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17],
       device='cuda:0') torch.Size([104])
09/21/2023, 06:38:19# labels of 90000: tensor([76], device='cuda:0') torch.Size([1])
09/21/2023, 06:38:19# predicted of 90000: tensor([150], device='cuda:0') torch.Size([1])
09/21/2023, 06:39:02# labels of 95000: tensor([160, 160, 160, 160, 160, 160, 160, 160], device='cuda:0') torch.Size([8])
09/21/2023, 06:39:02# predicted of 95000: tensor([160, 160, 160, 160, 160, 160, 160, 160], device='cuda:0') torch.Size([8])
09/21/2023, 06:39:44# labels of 100000: tensor([7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],
       device='cuda:0') torch.Size([67])
09/21/2023, 06:39:44# predicted of 100000: tensor([7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],
       device='cuda:0') torch.Size([67])
09/21/2023, 06:40:27# labels of 105000: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 06:40:27# predicted of 105000: tensor([88], device='cuda:0') torch.Size([1])
09/21/2023, 06:41:10# labels of 110000: tensor([91, 91, 91], device='cuda:0') torch.Size([3])
09/21/2023, 06:41:10# predicted of 110000: tensor([ 91, 131, 131], device='cuda:0') torch.Size([3])
09/21/2023, 06:41:53# labels of 115000: tensor([62, 62, 62, 62, 62, 62], device='cuda:0') torch.Size([6])
09/21/2023, 06:41:53# predicted of 115000: tensor([62, 62, 62, 62, 62, 62], device='cuda:0') torch.Size([6])
09/21/2023, 06:42:35# labels of 120000: tensor([14], device='cuda:0') torch.Size([1])
09/21/2023, 06:42:35# predicted of 120000: tensor([114], device='cuda:0') torch.Size([1])
09/21/2023, 06:43:18# labels of 125000: tensor([124], device='cuda:0') torch.Size([1])
09/21/2023, 06:43:18# predicted of 125000: tensor([157], device='cuda:0') torch.Size([1])
09/21/2023, 06:44:01# labels of 130000: tensor([18], device='cuda:0') torch.Size([1])
09/21/2023, 06:44:01# predicted of 130000: tensor([31], device='cuda:0') torch.Size([1])
09/21/2023, 06:44:18# total batches: 132000
09/21/2023, 06:44:18# Epoch 10 | Train Loss: 1.6445 | Train Accuracy: 0.6015
09/21/2023, 06:44:18# labels of Validation: tensor([64, 64], device='cuda:0') torch.Size([2])
09/21/2023, 06:44:18# predicted of Validation: tensor([131, 131], device='cuda:0') torch.Size([2])
09/21/2023, 06:44:18# labels of 0: tensor([64, 64], device='cuda:0') torch.Size([2])
09/21/2023, 06:44:18# predicted of 0: tensor([131, 131], device='cuda:0') torch.Size([2])
09/21/2023, 06:44:21# labels of Validation: tensor([13, 13, 13, 13, 13], device='cuda:0') torch.Size([5])
09/21/2023, 06:44:21# predicted of Validation: tensor([13, 13, 13, 13, 13], device='cuda:0') torch.Size([5])
09/21/2023, 06:44:25# labels of Validation: tensor([143], device='cuda:0') torch.Size([1])
09/21/2023, 06:44:25# predicted of Validation: tensor([162], device='cuda:0') torch.Size([1])
09/21/2023, 06:44:28# labels of Validation: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
        149, 149, 149, 149, 149], device='cuda:0') torch.Size([33])
09/21/2023, 06:44:28# predicted of Validation: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
        149, 149, 149, 149, 149], device='cuda:0') torch.Size([33])
09/21/2023, 06:44:32# labels of Validation: tensor([89, 89], device='cuda:0') torch.Size([2])
09/21/2023, 06:44:32# predicted of Validation: tensor([89, 89], device='cuda:0') torch.Size([2])
09/21/2023, 06:44:35# labels of Validation: tensor([119], device='cuda:0') torch.Size([1])
09/21/2023, 06:44:35# predicted of Validation: tensor([87], device='cuda:0') torch.Size([1])
09/21/2023, 06:44:35# labels of 5000: tensor([119], device='cuda:0') torch.Size([1])
09/21/2023, 06:44:35# predicted of 5000: tensor([87], device='cuda:0') torch.Size([1])
09/21/2023, 06:44:39# labels of Validation: tensor([88, 88], device='cuda:0') torch.Size([2])
09/21/2023, 06:44:39# predicted of Validation: tensor([ 53, 162], device='cuda:0') torch.Size([2])
09/21/2023, 06:44:42# labels of Validation: tensor([134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
        134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
        134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
        134, 134,  65, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
        134, 134, 134, 134, 134, 134, 134], device='cuda:0') torch.Size([63])
09/21/2023, 06:44:42# predicted of Validation: tensor([134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
        134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
        134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
        134, 134,  65, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
        134, 134, 134, 134, 134, 134, 134], device='cuda:0') torch.Size([63])
09/21/2023, 06:44:46# labels of Validation: tensor([47], device='cuda:0') torch.Size([1])
09/21/2023, 06:44:46# predicted of Validation: tensor([8], device='cuda:0') torch.Size([1])
09/21/2023, 06:44:49# labels of Validation: tensor([ 65,  65,  65, 102, 102], device='cuda:0') torch.Size([5])
09/21/2023, 06:44:49# predicted of Validation: tensor([ 65,  65,  65, 102, 102], device='cuda:0') torch.Size([5])
09/21/2023, 06:44:52# labels of Validation: tensor([60], device='cuda:0') torch.Size([1])
09/21/2023, 06:44:52# predicted of Validation: tensor([90], device='cuda:0') torch.Size([1])
09/21/2023, 06:44:52# labels of 10000: tensor([60], device='cuda:0') torch.Size([1])
09/21/2023, 06:44:52# predicted of 10000: tensor([90], device='cuda:0') torch.Size([1])
09/21/2023, 06:44:56# labels of Validation: tensor([1], device='cuda:0') torch.Size([1])
09/21/2023, 06:44:56# predicted of Validation: tensor([97], device='cuda:0') torch.Size([1])
09/21/2023, 06:44:59# labels of Validation: tensor([8, 8], device='cuda:0') torch.Size([2])
09/21/2023, 06:44:59# predicted of Validation: tensor([162, 162], device='cuda:0') torch.Size([2])
09/21/2023, 06:45:03# labels of Validation: tensor([0, 0, 0, 0, 0, 0], device='cuda:0') torch.Size([6])
09/21/2023, 06:45:03# predicted of Validation: tensor([0, 0, 0, 0, 0, 0], device='cuda:0') torch.Size([6])
09/21/2023, 06:45:06# labels of Validation: tensor([21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21], device='cuda:0') torch.Size([11])
09/21/2023, 06:45:06# predicted of Validation: tensor([21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21], device='cuda:0') torch.Size([11])
09/21/2023, 06:45:10# labels of Validation: tensor([102, 102], device='cuda:0') torch.Size([2])
09/21/2023, 06:45:10# predicted of Validation: tensor([102, 102], device='cuda:0') torch.Size([2])
09/21/2023, 06:45:10# labels of 15000: tensor([102, 102], device='cuda:0') torch.Size([2])
09/21/2023, 06:45:10# predicted of 15000: tensor([102, 102], device='cuda:0') torch.Size([2])
09/21/2023, 06:45:13# labels of Validation: tensor([11], device='cuda:0') torch.Size([1])
09/21/2023, 06:45:13# predicted of Validation: tensor([162], device='cuda:0') torch.Size([1])
09/21/2023, 06:45:15# Validation Loss: 1.6450 | Validation Accuracy: 0.6016

09/21/2023, 06:46:02# labels of 5000: tensor([78, 78, 78, 78, 78], device='cuda:0') torch.Size([5])
09/21/2023, 06:46:02# predicted of 5000: tensor([78, 78, 78, 78, 78], device='cuda:0') torch.Size([5])
09/21/2023, 06:46:45# labels of 10000: tensor([20, 20], device='cuda:0') torch.Size([2])
09/21/2023, 06:46:45# predicted of 10000: tensor([20, 20], device='cuda:0') torch.Size([2])
09/21/2023, 06:47:28# labels of 15000: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65, 141, 141, 141, 141, 141, 141, 141, 141, 141,
        141], device='cuda:0') torch.Size([141])
09/21/2023, 06:47:28# predicted of 15000: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65, 141, 141, 141, 141, 141, 141, 141, 141, 141,
        141], device='cuda:0') torch.Size([141])
09/21/2023, 06:48:11# labels of 20000: tensor([110, 110], device='cuda:0') torch.Size([2])
09/21/2023, 06:48:11# predicted of 20000: tensor([110, 110], device='cuda:0') torch.Size([2])
09/21/2023, 06:48:53# labels of 25000: tensor([126, 126, 126], device='cuda:0') torch.Size([3])
09/21/2023, 06:48:53# predicted of 25000: tensor([126, 126, 126], device='cuda:0') torch.Size([3])
09/21/2023, 06:49:36# labels of 30000: tensor([82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
        65, 82, 82, 82, 82, 82, 82, 82, 82, 82], device='cuda:0') torch.Size([28])
09/21/2023, 06:49:36# predicted of 30000: tensor([82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
        65, 82, 82, 82, 82, 82, 82, 82, 82, 82], device='cuda:0') torch.Size([28])
09/21/2023, 06:50:19# labels of 35000: tensor([4], device='cuda:0') torch.Size([1])
09/21/2023, 06:50:19# predicted of 35000: tensor([119], device='cuda:0') torch.Size([1])
09/21/2023, 06:51:01# labels of 40000: tensor([69, 69, 69, 69, 69, 69], device='cuda:0') torch.Size([6])
09/21/2023, 06:51:01# predicted of 40000: tensor([69, 69, 69, 69, 69, 69], device='cuda:0') torch.Size([6])
09/21/2023, 06:51:44# labels of 45000: tensor([1], device='cuda:0') torch.Size([1])
09/21/2023, 06:51:44# predicted of 45000: tensor([103], device='cuda:0') torch.Size([1])
09/21/2023, 06:52:27# labels of 50000: tensor([124], device='cuda:0') torch.Size([1])
09/21/2023, 06:52:27# predicted of 50000: tensor([90], device='cuda:0') torch.Size([1])
09/21/2023, 06:53:09# labels of 55000: tensor([138, 138, 138, 138, 138, 138, 138, 138, 138, 138], device='cuda:0') torch.Size([10])
09/21/2023, 06:53:09# predicted of 55000: tensor([138, 138, 138, 138, 138, 138, 138, 138, 138, 138], device='cuda:0') torch.Size([10])
09/21/2023, 06:53:52# labels of 60000: tensor([11], device='cuda:0') torch.Size([1])
09/21/2023, 06:53:52# predicted of 60000: tensor([55], device='cuda:0') torch.Size([1])
09/21/2023, 06:54:35# labels of 65000: tensor([1], device='cuda:0') torch.Size([1])
09/21/2023, 06:54:35# predicted of 65000: tensor([34], device='cuda:0') torch.Size([1])
09/21/2023, 06:55:18# labels of 70000: tensor([45, 45, 45], device='cuda:0') torch.Size([3])
09/21/2023, 06:55:18# predicted of 70000: tensor([45, 45, 45], device='cuda:0') torch.Size([3])
09/21/2023, 06:56:00# labels of 75000: tensor([59, 59, 59], device='cuda:0') torch.Size([3])
09/21/2023, 06:56:00# predicted of 75000: tensor([114, 114, 114], device='cuda:0') torch.Size([3])
09/21/2023, 06:56:43# labels of 80000: tensor([80, 80, 80, 80, 80, 80], device='cuda:0') torch.Size([6])
09/21/2023, 06:56:43# predicted of 80000: tensor([80, 80, 80, 80, 80, 80], device='cuda:0') torch.Size([6])
09/21/2023, 06:57:26# labels of 85000: tensor([51, 65, 65, 51, 51, 51, 51], device='cuda:0') torch.Size([7])
09/21/2023, 06:57:26# predicted of 85000: tensor([51, 65, 65, 51, 51, 51, 51], device='cuda:0') torch.Size([7])
09/21/2023, 06:58:09# labels of 90000: tensor([128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
        128, 128, 128, 128, 128, 128], device='cuda:0') torch.Size([20])
09/21/2023, 06:58:09# predicted of 90000: tensor([128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
        128, 128, 128, 128, 128, 128], device='cuda:0') torch.Size([20])
09/21/2023, 06:58:52# labels of 95000: tensor([113, 113], device='cuda:0') torch.Size([2])
09/21/2023, 06:58:52# predicted of 95000: tensor([93, 93], device='cuda:0') torch.Size([2])
09/21/2023, 06:59:34# labels of 100000: tensor([153, 153, 153], device='cuda:0') torch.Size([3])
09/21/2023, 06:59:34# predicted of 100000: tensor([153, 153, 153], device='cuda:0') torch.Size([3])
09/21/2023, 07:00:17# labels of 105000: tensor([19, 19, 19, 19, 19], device='cuda:0') torch.Size([5])
09/21/2023, 07:00:17# predicted of 105000: tensor([19, 19, 19, 19, 19], device='cuda:0') torch.Size([5])
09/21/2023, 07:01:00# labels of 110000: tensor([93, 93], device='cuda:0') torch.Size([2])
09/21/2023, 07:01:00# predicted of 110000: tensor([91, 91], device='cuda:0') torch.Size([2])
09/21/2023, 07:01:42# labels of 115000: tensor([35, 35, 65, 35, 35, 35, 35], device='cuda:0') torch.Size([7])
09/21/2023, 07:01:42# predicted of 115000: tensor([35, 35, 65, 35, 35, 35, 35], device='cuda:0') torch.Size([7])
09/21/2023, 07:02:25# labels of 120000: tensor([5, 5, 5], device='cuda:0') torch.Size([3])
09/21/2023, 07:02:25# predicted of 120000: tensor([5, 5, 5], device='cuda:0') torch.Size([3])
09/21/2023, 07:03:08# labels of 125000: tensor([145, 145, 145, 145, 145, 145], device='cuda:0') torch.Size([6])
09/21/2023, 07:03:08# predicted of 125000: tensor([145, 145, 145, 145, 145, 145], device='cuda:0') torch.Size([6])
09/21/2023, 07:03:51# labels of 130000: tensor([165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165],
       device='cuda:0') torch.Size([82])
09/21/2023, 07:03:51# predicted of 130000: tensor([165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165],
       device='cuda:0') torch.Size([82])
09/21/2023, 07:04:08# total batches: 132000
09/21/2023, 07:04:08# Epoch 11 | Train Loss: 1.6437 | Train Accuracy: 0.6015
09/21/2023, 07:04:08# labels of Validation: tensor([8, 8], device='cuda:0') torch.Size([2])
09/21/2023, 07:04:08# predicted of Validation: tensor([131, 131], device='cuda:0') torch.Size([2])
09/21/2023, 07:04:08# labels of 0: tensor([8, 8], device='cuda:0') torch.Size([2])
09/21/2023, 07:04:08# predicted of 0: tensor([131, 131], device='cuda:0') torch.Size([2])
09/21/2023, 07:04:11# labels of Validation: tensor([103, 103], device='cuda:0') torch.Size([2])
09/21/2023, 07:04:11# predicted of Validation: tensor([90, 88], device='cuda:0') torch.Size([2])
09/21/2023, 07:04:15# labels of Validation: tensor([69, 69, 69, 69, 69, 69], device='cuda:0') torch.Size([6])
09/21/2023, 07:04:15# predicted of Validation: tensor([69, 69, 69, 69, 69, 69], device='cuda:0') torch.Size([6])
09/21/2023, 07:04:18# labels of Validation: tensor([54], device='cuda:0') torch.Size([1])
09/21/2023, 07:04:18# predicted of Validation: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 07:04:22# labels of Validation: tensor([23, 23, 23, 23, 23], device='cuda:0') torch.Size([5])
09/21/2023, 07:04:22# predicted of Validation: tensor([23, 23, 23, 23, 23], device='cuda:0') torch.Size([5])
09/21/2023, 07:04:25# labels of Validation: tensor([29, 29, 29, 29, 29, 29, 29, 29, 29, 29], device='cuda:0') torch.Size([10])
09/21/2023, 07:04:25# predicted of Validation: tensor([29, 29, 29, 29, 29, 29, 29, 29, 29, 29], device='cuda:0') torch.Size([10])
09/21/2023, 07:04:25# labels of 5000: tensor([29, 29, 29, 29, 29, 29, 29, 29, 29, 29], device='cuda:0') torch.Size([10])
09/21/2023, 07:04:25# predicted of 5000: tensor([29, 29, 29, 29, 29, 29, 29, 29, 29, 29], device='cuda:0') torch.Size([10])
09/21/2023, 07:04:29# labels of Validation: tensor([62, 62, 62, 62, 62, 62], device='cuda:0') torch.Size([6])
09/21/2023, 07:04:29# predicted of Validation: tensor([62, 62, 62, 62, 62, 62], device='cuda:0') torch.Size([6])
09/21/2023, 07:04:32# labels of Validation: tensor([125], device='cuda:0') torch.Size([1])
09/21/2023, 07:04:32# predicted of Validation: tensor([59], device='cuda:0') torch.Size([1])
09/21/2023, 07:04:36# labels of Validation: tensor([87], device='cuda:0') torch.Size([1])
09/21/2023, 07:04:36# predicted of Validation: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 07:04:39# labels of Validation: tensor([64, 64], device='cuda:0') torch.Size([2])
09/21/2023, 07:04:39# predicted of Validation: tensor([110, 110], device='cuda:0') torch.Size([2])
09/21/2023, 07:04:43# labels of Validation: tensor([53], device='cuda:0') torch.Size([1])
09/21/2023, 07:04:43# predicted of Validation: tensor([38], device='cuda:0') torch.Size([1])
09/21/2023, 07:04:43# labels of 10000: tensor([53], device='cuda:0') torch.Size([1])
09/21/2023, 07:04:43# predicted of 10000: tensor([38], device='cuda:0') torch.Size([1])
09/21/2023, 07:04:46# labels of Validation: tensor([162], device='cuda:0') torch.Size([1])
09/21/2023, 07:04:46# predicted of Validation: tensor([114], device='cuda:0') torch.Size([1])
09/21/2023, 07:04:50# labels of Validation: tensor([50, 50, 50], device='cuda:0') torch.Size([3])
09/21/2023, 07:04:50# predicted of Validation: tensor([50, 50, 50], device='cuda:0') torch.Size([3])
09/21/2023, 07:04:53# labels of Validation: tensor([64, 64], device='cuda:0') torch.Size([2])
09/21/2023, 07:04:53# predicted of Validation: tensor([ 8, 90], device='cuda:0') torch.Size([2])
09/21/2023, 07:04:56# labels of Validation: tensor([37, 37, 37, 37, 37], device='cuda:0') torch.Size([5])
09/21/2023, 07:04:56# predicted of Validation: tensor([37, 37, 37, 37, 37], device='cuda:0') torch.Size([5])
09/21/2023, 07:05:00# labels of Validation: tensor([39, 39, 39], device='cuda:0') torch.Size([3])
09/21/2023, 07:05:00# predicted of Validation: tensor([39, 39, 39], device='cuda:0') torch.Size([3])
09/21/2023, 07:05:00# labels of 15000: tensor([39, 39, 39], device='cuda:0') torch.Size([3])
09/21/2023, 07:05:00# predicted of 15000: tensor([39, 39, 39], device='cuda:0') torch.Size([3])
09/21/2023, 07:05:03# labels of Validation: tensor([19, 19, 19, 19, 19], device='cuda:0') torch.Size([5])
09/21/2023, 07:05:03# predicted of Validation: tensor([19, 19, 19, 19, 19], device='cuda:0') torch.Size([5])
09/21/2023, 07:05:05# Validation Loss: 1.6224 | Validation Accuracy: 0.6037

09/21/2023, 07:05:05# Find a better model!!
09/21/2023, 07:05:48# labels of 5000: tensor([20, 20], device='cuda:0') torch.Size([2])
09/21/2023, 07:05:48# predicted of 5000: tensor([20, 20], device='cuda:0') torch.Size([2])
09/21/2023, 07:06:31# labels of 10000: tensor([59, 59, 59], device='cuda:0') torch.Size([3])
09/21/2023, 07:06:31# predicted of 10000: tensor([ 68, 131, 113], device='cuda:0') torch.Size([3])
09/21/2023, 07:07:14# labels of 15000: tensor([31], device='cuda:0') torch.Size([1])
09/21/2023, 07:07:14# predicted of 15000: tensor([93], device='cuda:0') torch.Size([1])
09/21/2023, 07:07:58# labels of 20000: tensor([107, 107, 107, 107, 107, 107, 107, 107], device='cuda:0') torch.Size([8])
09/21/2023, 07:07:58# predicted of 20000: tensor([107, 107, 107, 107, 107, 107, 107, 107], device='cuda:0') torch.Size([8])
09/21/2023, 07:08:42# labels of 25000: tensor([82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
        82, 82, 82, 82, 82, 82, 82, 82, 82], device='cuda:0') torch.Size([27])
09/21/2023, 07:08:42# predicted of 25000: tensor([82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
        82, 82, 82, 82, 82, 82, 82, 82, 82], device='cuda:0') torch.Size([27])
09/21/2023, 07:09:25# labels of 30000: tensor([8, 8], device='cuda:0') torch.Size([2])
09/21/2023, 07:09:25# predicted of 30000: tensor([88, 88], device='cuda:0') torch.Size([2])
09/21/2023, 07:10:08# labels of 35000: tensor([88, 88], device='cuda:0') torch.Size([2])
09/21/2023, 07:10:08# predicted of 35000: tensor([91, 91], device='cuda:0') torch.Size([2])
09/21/2023, 07:10:51# labels of 40000: tensor([114, 114], device='cuda:0') torch.Size([2])
09/21/2023, 07:10:51# predicted of 40000: tensor([131, 131], device='cuda:0') torch.Size([2])
09/21/2023, 07:11:34# labels of 45000: tensor([130, 130, 130, 130, 130], device='cuda:0') torch.Size([5])
09/21/2023, 07:11:34# predicted of 45000: tensor([130, 130, 130, 130, 130], device='cuda:0') torch.Size([5])
09/21/2023, 07:12:17# labels of 50000: tensor([155, 155, 155, 155], device='cuda:0') torch.Size([4])
09/21/2023, 07:12:17# predicted of 50000: tensor([155, 131, 155, 155], device='cuda:0') torch.Size([4])
09/21/2023, 07:13:00# labels of 55000: tensor([130, 130, 130, 130, 130], device='cuda:0') torch.Size([5])
09/21/2023, 07:13:00# predicted of 55000: tensor([130, 130, 130, 130, 130], device='cuda:0') torch.Size([5])
09/21/2023, 07:13:43# labels of 60000: tensor([24], device='cuda:0') torch.Size([1])
09/21/2023, 07:13:43# predicted of 60000: tensor([2], device='cuda:0') torch.Size([1])
09/21/2023, 07:14:25# labels of 65000: tensor([48], device='cuda:0') torch.Size([1])
09/21/2023, 07:14:25# predicted of 65000: tensor([125], device='cuda:0') torch.Size([1])
09/21/2023, 07:15:08# labels of 70000: tensor([18], device='cuda:0') torch.Size([1])
09/21/2023, 07:15:08# predicted of 70000: tensor([91], device='cuda:0') torch.Size([1])
09/21/2023, 07:15:51# labels of 75000: tensor([157], device='cuda:0') torch.Size([1])
09/21/2023, 07:15:51# predicted of 75000: tensor([103], device='cuda:0') torch.Size([1])
09/21/2023, 07:16:34# labels of 80000: tensor([78, 78, 78, 78, 78], device='cuda:0') torch.Size([5])
09/21/2023, 07:16:34# predicted of 80000: tensor([67, 67, 67, 67, 67], device='cuda:0') torch.Size([5])
09/21/2023, 07:17:16# labels of 85000: tensor([26, 26, 26, 26, 26, 26], device='cuda:0') torch.Size([6])
09/21/2023, 07:17:16# predicted of 85000: tensor([26, 26, 26, 26, 26, 26], device='cuda:0') torch.Size([6])
09/21/2023, 07:17:59# labels of 90000: tensor([ 65,  65,  65,  ..., 106, 106, 106], device='cuda:0') torch.Size([1604])
09/21/2023, 07:17:59# predicted of 90000: tensor([ 65,  65,  65,  ..., 106, 106, 106], device='cuda:0') torch.Size([1604])
09/21/2023, 07:18:42# labels of 95000: tensor([122, 122, 122, 122, 122, 122, 122], device='cuda:0') torch.Size([7])
09/21/2023, 07:18:42# predicted of 95000: tensor([122, 122, 122, 122, 122, 122, 122], device='cuda:0') torch.Size([7])
09/21/2023, 07:19:25# labels of 100000: tensor([110, 110], device='cuda:0') torch.Size([2])
09/21/2023, 07:19:25# predicted of 100000: tensor([24, 90], device='cuda:0') torch.Size([2])
09/21/2023, 07:20:08# labels of 105000: tensor([134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
        134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
        134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
        134, 134,  65, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
        134, 134, 134, 134, 134, 134, 134], device='cuda:0') torch.Size([63])
09/21/2023, 07:20:08# predicted of 105000: tensor([134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
        134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
        134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
        134, 134,  65, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
        134, 134, 134, 134, 134, 134, 134], device='cuda:0') torch.Size([63])
09/21/2023, 07:20:51# labels of 110000: tensor([27, 27, 27], device='cuda:0') torch.Size([3])
09/21/2023, 07:20:51# predicted of 110000: tensor([27, 27, 27], device='cuda:0') torch.Size([3])
09/21/2023, 07:21:34# labels of 115000: tensor([59, 59, 59], device='cuda:0') torch.Size([3])
09/21/2023, 07:21:34# predicted of 115000: tensor([91, 91, 91], device='cuda:0') torch.Size([3])
09/21/2023, 07:22:16# labels of 120000: tensor([136, 136, 136, 136, 136, 136, 136], device='cuda:0') torch.Size([7])
09/21/2023, 07:22:16# predicted of 120000: tensor([136, 136, 136, 136, 136, 136, 136], device='cuda:0') torch.Size([7])
09/21/2023, 07:22:59# labels of 125000: tensor([18], device='cuda:0') torch.Size([1])
09/21/2023, 07:22:59# predicted of 125000: tensor([54], device='cuda:0') torch.Size([1])
09/21/2023, 07:23:42# labels of 130000: tensor([90, 90], device='cuda:0') torch.Size([2])
09/21/2023, 07:23:42# predicted of 130000: tensor([64, 64], device='cuda:0') torch.Size([2])
09/21/2023, 07:23:59# total batches: 132000
09/21/2023, 07:23:59# Epoch 12 | Train Loss: 1.6438 | Train Accuracy: 0.6014
09/21/2023, 07:23:59# labels of Validation: tensor([155,  65,  65,  65,  65,  65, 155, 155, 155], device='cuda:0') torch.Size([9])
09/21/2023, 07:23:59# predicted of Validation: tensor([155,  65,  65,  65,  65,  65, 155, 155, 155], device='cuda:0') torch.Size([9])
09/21/2023, 07:23:59# labels of 0: tensor([155,  65,  65,  65,  65,  65, 155, 155, 155], device='cuda:0') torch.Size([9])
09/21/2023, 07:23:59# predicted of 0: tensor([155,  65,  65,  65,  65,  65, 155, 155, 155], device='cuda:0') torch.Size([9])
09/21/2023, 07:24:02# labels of Validation: tensor([13, 13, 13, 13, 13], device='cuda:0') torch.Size([5])
09/21/2023, 07:24:02# predicted of Validation: tensor([13, 13, 13, 13, 13], device='cuda:0') torch.Size([5])
09/21/2023, 07:24:06# labels of Validation: tensor([138, 138, 138, 138, 138, 138, 138, 138, 138, 138], device='cuda:0') torch.Size([10])
09/21/2023, 07:24:06# predicted of Validation: tensor([138, 138, 138, 138, 138, 138, 138, 138, 138, 138], device='cuda:0') torch.Size([10])
09/21/2023, 07:24:09# labels of Validation: tensor([148, 148, 148, 148, 148, 148, 148], device='cuda:0') torch.Size([7])
09/21/2023, 07:24:09# predicted of Validation: tensor([148, 148, 148, 148, 148, 148, 148], device='cuda:0') torch.Size([7])
09/21/2023, 07:24:13# labels of Validation: tensor([164], device='cuda:0') torch.Size([1])
09/21/2023, 07:24:13# predicted of Validation: tensor([112], device='cuda:0') torch.Size([1])
09/21/2023, 07:24:16# labels of Validation: tensor([94, 94], device='cuda:0') torch.Size([2])
09/21/2023, 07:24:16# predicted of Validation: tensor([94, 94], device='cuda:0') torch.Size([2])
09/21/2023, 07:24:16# labels of 5000: tensor([94, 94], device='cuda:0') torch.Size([2])
09/21/2023, 07:24:16# predicted of 5000: tensor([94, 94], device='cuda:0') torch.Size([2])
09/21/2023, 07:24:20# labels of Validation: tensor([76], device='cuda:0') torch.Size([1])
09/21/2023, 07:24:20# predicted of Validation: tensor([162], device='cuda:0') torch.Size([1])
09/21/2023, 07:24:23# labels of Validation: tensor([66, 66, 66, 66, 66, 66, 66, 66, 66, 66], device='cuda:0') torch.Size([10])
09/21/2023, 07:24:23# predicted of Validation: tensor([66, 66, 66, 66, 66, 66, 66, 66, 66, 66], device='cuda:0') torch.Size([10])
09/21/2023, 07:24:27# labels of Validation: tensor([89, 89], device='cuda:0') torch.Size([2])
09/21/2023, 07:24:27# predicted of Validation: tensor([89, 89], device='cuda:0') torch.Size([2])
09/21/2023, 07:24:30# labels of Validation: tensor([119], device='cuda:0') torch.Size([1])
09/21/2023, 07:24:30# predicted of Validation: tensor([48], device='cuda:0') torch.Size([1])
09/21/2023, 07:24:34# labels of Validation: tensor([21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21], device='cuda:0') torch.Size([11])
09/21/2023, 07:24:34# predicted of Validation: tensor([21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21], device='cuda:0') torch.Size([11])
09/21/2023, 07:24:34# labels of 10000: tensor([21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21], device='cuda:0') torch.Size([11])
09/21/2023, 07:24:34# predicted of 10000: tensor([21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21], device='cuda:0') torch.Size([11])
09/21/2023, 07:24:37# labels of Validation: tensor([62, 62, 62, 62, 62, 62], device='cuda:0') torch.Size([6])
09/21/2023, 07:24:37# predicted of Validation: tensor([62, 62, 62, 62, 62, 62], device='cuda:0') torch.Size([6])
09/21/2023, 07:24:40# labels of Validation: tensor([31], device='cuda:0') torch.Size([1])
09/21/2023, 07:24:40# predicted of Validation: tensor([112], device='cuda:0') torch.Size([1])
09/21/2023, 07:24:44# labels of Validation: tensor([93, 93], device='cuda:0') torch.Size([2])
09/21/2023, 07:24:44# predicted of Validation: tensor([64, 64], device='cuda:0') torch.Size([2])
09/21/2023, 07:24:47# labels of Validation: tensor([113, 113], device='cuda:0') torch.Size([2])
09/21/2023, 07:24:47# predicted of Validation: tensor([64, 64], device='cuda:0') torch.Size([2])
09/21/2023, 07:24:51# labels of Validation: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65, 141,
        141, 141, 141, 141, 141, 141, 141, 141, 141], device='cuda:0') torch.Size([79])
09/21/2023, 07:24:51# predicted of Validation: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65, 141,
        141, 141, 141, 141, 141, 141, 141, 141, 141], device='cuda:0') torch.Size([79])
09/21/2023, 07:24:51# labels of 15000: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65, 141,
        141, 141, 141, 141, 141, 141, 141, 141, 141], device='cuda:0') torch.Size([79])
09/21/2023, 07:24:51# predicted of 15000: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65, 141,
        141, 141, 141, 141, 141, 141, 141, 141, 141], device='cuda:0') torch.Size([79])
09/21/2023, 07:24:54# labels of Validation: tensor([130, 130, 130, 130, 130], device='cuda:0') torch.Size([5])
09/21/2023, 07:24:54# predicted of Validation: tensor([130, 130, 130, 130, 130], device='cuda:0') torch.Size([5])
09/21/2023, 07:24:56# Validation Loss: 1.6248 | Validation Accuracy: 0.6033

09/21/2023, 07:25:39# labels of 5000: tensor([32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
       device='cuda:0') torch.Size([15])
09/21/2023, 07:25:39# predicted of 5000: tensor([32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
       device='cuda:0') torch.Size([15])
09/21/2023, 07:26:22# labels of 10000: tensor([109], device='cuda:0') torch.Size([1])
09/21/2023, 07:26:22# predicted of 10000: tensor([164], device='cuda:0') torch.Size([1])
09/21/2023, 07:27:04# labels of 15000: tensor([81], device='cuda:0') torch.Size([1])
09/21/2023, 07:27:04# predicted of 15000: tensor([59], device='cuda:0') torch.Size([1])
09/21/2023, 07:27:46# labels of 20000: tensor([7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],
       device='cuda:0') torch.Size([67])
09/21/2023, 07:27:46# predicted of 20000: tensor([7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],
       device='cuda:0') torch.Size([67])
09/21/2023, 07:28:29# labels of 25000: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 07:28:29# predicted of 25000: tensor([47], device='cuda:0') torch.Size([1])
09/21/2023, 07:29:12# labels of 30000: tensor([93, 93], device='cuda:0') torch.Size([2])
09/21/2023, 07:29:12# predicted of 30000: tensor([108, 108], device='cuda:0') torch.Size([2])
09/21/2023, 07:29:55# labels of 35000: tensor([144], device='cuda:0') torch.Size([1])
09/21/2023, 07:29:55# predicted of 35000: tensor([104], device='cuda:0') torch.Size([1])
09/21/2023, 07:30:38# labels of 40000: tensor([48], device='cuda:0') torch.Size([1])
09/21/2023, 07:30:38# predicted of 40000: tensor([116], device='cuda:0') torch.Size([1])
09/21/2023, 07:31:20# labels of 45000: tensor([74], device='cuda:0') torch.Size([1])
09/21/2023, 07:31:20# predicted of 45000: tensor([68], device='cuda:0') torch.Size([1])
09/21/2023, 07:32:03# labels of 50000: tensor([73, 73, 73], device='cuda:0') torch.Size([3])
09/21/2023, 07:32:03# predicted of 50000: tensor([73, 73, 73], device='cuda:0') torch.Size([3])
09/21/2023, 07:32:46# labels of 55000: tensor([150], device='cuda:0') torch.Size([1])
09/21/2023, 07:32:46# predicted of 55000: tensor([24], device='cuda:0') torch.Size([1])
09/21/2023, 07:33:35# labels of 60000: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], device='cuda:0') torch.Size([15])
09/21/2023, 07:33:35# predicted of 60000: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], device='cuda:0') torch.Size([15])
09/21/2023, 07:34:18# labels of 65000: tensor([123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
        123], device='cuda:0') torch.Size([15])
09/21/2023, 07:34:18# predicted of 65000: tensor([123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
        123], device='cuda:0') torch.Size([15])
09/21/2023, 07:35:01# labels of 70000: tensor([27, 27, 27], device='cuda:0') torch.Size([3])
09/21/2023, 07:35:01# predicted of 70000: tensor([27, 27, 27], device='cuda:0') torch.Size([3])
09/21/2023, 07:35:44# labels of 75000: tensor([165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165],
       device='cuda:0') torch.Size([82])
09/21/2023, 07:35:44# predicted of 75000: tensor([165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165],
       device='cuda:0') torch.Size([82])
09/21/2023, 07:36:27# labels of 80000: tensor([16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
        16, 16], device='cuda:0') torch.Size([20])
09/21/2023, 07:36:27# predicted of 80000: tensor([16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
        16, 16], device='cuda:0') torch.Size([20])
09/21/2023, 07:37:10# labels of 85000: tensor([73, 73, 73], device='cuda:0') torch.Size([3])
09/21/2023, 07:37:10# predicted of 85000: tensor([73, 73, 73], device='cuda:0') torch.Size([3])
09/21/2023, 07:37:53# labels of 90000: tensor([19, 19, 19, 19, 19], device='cuda:0') torch.Size([5])
09/21/2023, 07:37:53# predicted of 90000: tensor([19, 19, 19, 19, 19], device='cuda:0') torch.Size([5])
09/21/2023, 07:38:35# labels of 95000: tensor([137, 137, 137, 137, 137], device='cuda:0') torch.Size([5])
09/21/2023, 07:38:35# predicted of 95000: tensor([137, 137, 137, 137, 137], device='cuda:0') torch.Size([5])
09/21/2023, 07:39:18# labels of 100000: tensor([125], device='cuda:0') torch.Size([1])
09/21/2023, 07:39:18# predicted of 100000: tensor([150], device='cuda:0') torch.Size([1])
09/21/2023, 07:40:01# labels of 105000: tensor([116], device='cuda:0') torch.Size([1])
09/21/2023, 07:40:01# predicted of 105000: tensor([109], device='cuda:0') torch.Size([1])
09/21/2023, 07:40:44# labels of 110000: tensor([61, 61, 61], device='cuda:0') torch.Size([3])
09/21/2023, 07:40:44# predicted of 110000: tensor([61, 61, 61], device='cuda:0') torch.Size([3])
09/21/2023, 07:41:26# labels of 115000: tensor([99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
        99, 99, 99, 99], device='cuda:0') torch.Size([22])
09/21/2023, 07:41:26# predicted of 115000: tensor([99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
        99, 99, 99, 99], device='cuda:0') torch.Size([22])
09/21/2023, 07:42:09# labels of 120000: tensor([92], device='cuda:0') torch.Size([1])
09/21/2023, 07:42:09# predicted of 120000: tensor([87], device='cuda:0') torch.Size([1])
09/21/2023, 07:42:52# labels of 125000: tensor([17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17],
       device='cuda:0') torch.Size([104])
09/21/2023, 07:42:52# predicted of 125000: tensor([17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 79, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17],
       device='cuda:0') torch.Size([104])
09/21/2023, 07:43:35# labels of 130000: tensor([66, 66, 66, 66, 66, 66, 66, 66, 66, 66], device='cuda:0') torch.Size([10])
09/21/2023, 07:43:35# predicted of 130000: tensor([66, 66, 66, 66, 66, 66, 66, 66, 66, 66], device='cuda:0') torch.Size([10])
09/21/2023, 07:43:52# total batches: 132000
09/21/2023, 07:43:52# Epoch 13 | Train Loss: 1.6427 | Train Accuracy: 0.6021
09/21/2023, 07:43:52# labels of Validation: tensor([30], device='cuda:0') torch.Size([1])
09/21/2023, 07:43:52# predicted of Validation: tensor([2], device='cuda:0') torch.Size([1])
09/21/2023, 07:43:52# labels of 0: tensor([30], device='cuda:0') torch.Size([1])
09/21/2023, 07:43:52# predicted of 0: tensor([2], device='cuda:0') torch.Size([1])
09/21/2023, 07:43:56# labels of Validation: tensor([72, 72], device='cuda:0') torch.Size([2])
09/21/2023, 07:43:56# predicted of Validation: tensor([72, 72], device='cuda:0') torch.Size([2])
09/21/2023, 07:43:59# labels of Validation: tensor([1], device='cuda:0') torch.Size([1])
09/21/2023, 07:43:59# predicted of Validation: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 07:44:02# labels of Validation: tensor([75], device='cuda:0') torch.Size([1])
09/21/2023, 07:44:02# predicted of Validation: tensor([2], device='cuda:0') torch.Size([1])
09/21/2023, 07:44:06# labels of Validation: tensor([83], device='cuda:0') torch.Size([1])
09/21/2023, 07:44:06# predicted of Validation: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 07:44:09# labels of Validation: tensor([128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
        128, 128, 128, 128, 128, 128], device='cuda:0') torch.Size([20])
09/21/2023, 07:44:09# predicted of Validation: tensor([128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
        128, 128, 128, 128, 128, 128], device='cuda:0') torch.Size([20])
09/21/2023, 07:44:09# labels of 5000: tensor([128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
        128, 128, 128, 128, 128, 128], device='cuda:0') torch.Size([20])
09/21/2023, 07:44:09# predicted of 5000: tensor([128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
        128, 128, 128, 128, 128, 128], device='cuda:0') torch.Size([20])
09/21/2023, 07:44:13# labels of Validation: tensor([81], device='cuda:0') torch.Size([1])
09/21/2023, 07:44:13# predicted of Validation: tensor([2], device='cuda:0') torch.Size([1])
09/21/2023, 07:44:16# labels of Validation: tensor([57], device='cuda:0') torch.Size([1])
09/21/2023, 07:44:16# predicted of Validation: tensor([93], device='cuda:0') torch.Size([1])
09/21/2023, 07:44:20# labels of Validation: tensor([52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52], device='cuda:0') torch.Size([137])
09/21/2023, 07:44:20# predicted of Validation: tensor([52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52], device='cuda:0') torch.Size([137])
09/21/2023, 07:44:23# labels of Validation: tensor([165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165],
       device='cuda:0') torch.Size([82])
09/21/2023, 07:44:23# predicted of Validation: tensor([165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
        165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165],
       device='cuda:0') torch.Size([82])
09/21/2023, 07:44:27# labels of Validation: tensor([97], device='cuda:0') torch.Size([1])
09/21/2023, 07:44:27# predicted of Validation: tensor([2], device='cuda:0') torch.Size([1])
09/21/2023, 07:44:27# labels of 10000: tensor([97], device='cuda:0') torch.Size([1])
09/21/2023, 07:44:27# predicted of 10000: tensor([2], device='cuda:0') torch.Size([1])
09/21/2023, 07:44:30# labels of Validation: tensor([82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
        65, 82, 82, 82, 82, 82, 82, 82, 82, 82], device='cuda:0') torch.Size([28])
09/21/2023, 07:44:30# predicted of Validation: tensor([82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
        65, 82, 82, 82, 82, 82, 82, 82, 82, 82], device='cuda:0') torch.Size([28])
09/21/2023, 07:44:34# labels of Validation: tensor([150], device='cuda:0') torch.Size([1])
09/21/2023, 07:44:34# predicted of Validation: tensor([2], device='cuda:0') torch.Size([1])
09/21/2023, 07:44:37# labels of Validation: tensor([131, 131, 131, 131, 131], device='cuda:0') torch.Size([5])
09/21/2023, 07:44:37# predicted of Validation: tensor([108, 108, 108, 108, 108], device='cuda:0') torch.Size([5])
09/21/2023, 07:44:41# labels of Validation: tensor([124], device='cuda:0') torch.Size([1])
09/21/2023, 07:44:41# predicted of Validation: tensor([110], device='cuda:0') torch.Size([1])
09/21/2023, 07:44:44# labels of Validation: tensor([151], device='cuda:0') torch.Size([1])
09/21/2023, 07:44:44# predicted of Validation: tensor([2], device='cuda:0') torch.Size([1])
09/21/2023, 07:44:44# labels of 15000: tensor([151], device='cuda:0') torch.Size([1])
09/21/2023, 07:44:44# predicted of 15000: tensor([2], device='cuda:0') torch.Size([1])
09/21/2023, 07:44:48# labels of Validation: tensor([71, 71, 71, 71, 71, 71], device='cuda:0') torch.Size([6])
09/21/2023, 07:44:48# predicted of Validation: tensor([71, 71, 71, 71, 71, 71], device='cuda:0') torch.Size([6])
09/21/2023, 07:44:49# Validation Loss: 1.6321 | Validation Accuracy: 0.6039

09/21/2023, 07:45:32# labels of 5000: tensor([54], device='cuda:0') torch.Size([1])
09/21/2023, 07:45:32# predicted of 5000: tensor([109], device='cuda:0') torch.Size([1])
09/21/2023, 07:46:15# labels of 10000: tensor([72, 72], device='cuda:0') torch.Size([2])
09/21/2023, 07:46:15# predicted of 10000: tensor([72, 72], device='cuda:0') torch.Size([2])
09/21/2023, 07:46:58# labels of 15000: tensor([111], device='cuda:0') torch.Size([1])
09/21/2023, 07:46:58# predicted of 15000: tensor([163], device='cuda:0') torch.Size([1])
09/21/2023, 07:47:40# labels of 20000: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
        149, 149, 149, 149, 149], device='cuda:0') torch.Size([33])
09/21/2023, 07:47:40# predicted of 20000: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
        149, 149, 149, 149, 149], device='cuda:0') torch.Size([33])
09/21/2023, 07:48:23# labels of 25000: tensor([80, 80, 80, 80, 80, 80], device='cuda:0') torch.Size([6])
09/21/2023, 07:48:23# predicted of 25000: tensor([80, 80, 80, 80, 80, 80], device='cuda:0') torch.Size([6])
09/21/2023, 07:49:06# labels of 30000: tensor([65, 46, 46], device='cuda:0') torch.Size([3])
09/21/2023, 07:49:06# predicted of 30000: tensor([65, 46, 46], device='cuda:0') torch.Size([3])
09/21/2023, 07:49:49# labels of 35000: tensor([137, 137, 137, 137, 137], device='cuda:0') torch.Size([5])
09/21/2023, 07:49:49# predicted of 35000: tensor([137, 137, 137, 137, 137], device='cuda:0') torch.Size([5])
09/21/2023, 07:50:32# labels of 40000: tensor([155,  65,  65,  65,  65,  65,  65, 155, 155, 155], device='cuda:0') torch.Size([10])
09/21/2023, 07:50:32# predicted of 40000: tensor([155,  65,  65,  65,  65,  65,  65, 155, 155, 155], device='cuda:0') torch.Size([10])
09/21/2023, 07:51:14# labels of 45000: tensor([47], device='cuda:0') torch.Size([1])
09/21/2023, 07:51:14# predicted of 45000: tensor([110], device='cuda:0') torch.Size([1])
09/21/2023, 07:51:57# labels of 50000: tensor([121], device='cuda:0') torch.Size([1])
09/21/2023, 07:51:57# predicted of 50000: tensor([53], device='cuda:0') torch.Size([1])
09/21/2023, 07:52:40# labels of 55000: tensor([13, 13, 13, 13, 13], device='cuda:0') torch.Size([5])
09/21/2023, 07:52:40# predicted of 55000: tensor([13, 13, 13, 13, 13], device='cuda:0') torch.Size([5])
09/21/2023, 07:53:23# labels of 60000: tensor([109], device='cuda:0') torch.Size([1])
09/21/2023, 07:53:23# predicted of 60000: tensor([55], device='cuda:0') torch.Size([1])
09/21/2023, 07:54:05# labels of 65000: tensor([152], device='cuda:0') torch.Size([1])
09/21/2023, 07:54:05# predicted of 65000: tensor([36], device='cuda:0') torch.Size([1])
09/21/2023, 07:54:48# labels of 70000: tensor([38], device='cuda:0') torch.Size([1])
09/21/2023, 07:54:48# predicted of 70000: tensor([93], device='cuda:0') torch.Size([1])
09/21/2023, 07:55:30# labels of 75000: tensor([47], device='cuda:0') torch.Size([1])
09/21/2023, 07:55:30# predicted of 75000: tensor([55], device='cuda:0') torch.Size([1])
09/21/2023, 07:56:13# labels of 80000: tensor([142], device='cuda:0') torch.Size([1])
09/21/2023, 07:56:13# predicted of 80000: tensor([12], device='cuda:0') torch.Size([1])
09/21/2023, 07:56:56# labels of 85000: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 07:56:56# predicted of 85000: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 07:57:38# labels of 90000: tensor([96, 96, 96, 96, 96, 96], device='cuda:0') torch.Size([6])
09/21/2023, 07:57:38# predicted of 90000: tensor([96, 96, 96, 96, 96, 96], device='cuda:0') torch.Size([6])
09/21/2023, 07:58:20# labels of 95000: tensor([117, 117, 117], device='cuda:0') torch.Size([3])
09/21/2023, 07:58:20# predicted of 95000: tensor([117, 117, 117], device='cuda:0') torch.Size([3])
09/21/2023, 07:59:03# labels of 100000: tensor([ 65, 102, 102], device='cuda:0') torch.Size([3])
09/21/2023, 07:59:03# predicted of 100000: tensor([ 65, 102, 102], device='cuda:0') torch.Size([3])
09/21/2023, 07:59:45# labels of 105000: tensor([160, 160, 160, 160, 160, 160, 160, 160], device='cuda:0') torch.Size([8])
09/21/2023, 07:59:45# predicted of 105000: tensor([160, 160, 160, 160, 160, 160, 160, 160], device='cuda:0') torch.Size([8])
09/21/2023, 08:00:28# labels of 110000: tensor([157], device='cuda:0') torch.Size([1])
09/21/2023, 08:00:28# predicted of 110000: tensor([124], device='cuda:0') torch.Size([1])
09/21/2023, 08:01:11# labels of 115000: tensor([72, 72], device='cuda:0') torch.Size([2])
09/21/2023, 08:01:11# predicted of 115000: tensor([72, 72], device='cuda:0') torch.Size([2])
09/21/2023, 08:01:53# labels of 120000: tensor([103, 103], device='cuda:0') torch.Size([2])
09/21/2023, 08:01:53# predicted of 120000: tensor([ 8, 91], device='cuda:0') torch.Size([2])
09/21/2023, 08:02:36# labels of 125000: tensor([118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
        118, 118, 118, 118, 118, 118, 118], device='cuda:0') torch.Size([21])
09/21/2023, 08:02:36# predicted of 125000: tensor([118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
        118, 118, 118, 118, 118, 118, 118], device='cuda:0') torch.Size([21])
09/21/2023, 08:03:18# labels of 130000: tensor([75], device='cuda:0') torch.Size([1])
09/21/2023, 08:03:18# predicted of 130000: tensor([55], device='cuda:0') torch.Size([1])
09/21/2023, 08:03:36# total batches: 132000
09/21/2023, 08:03:36# Epoch 14 | Train Loss: 1.6424 | Train Accuracy: 0.6018
09/21/2023, 08:03:36# labels of Validation: tensor([ 6, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,
         6,  6], device='cuda:0') torch.Size([74])
09/21/2023, 08:03:36# predicted of Validation: tensor([ 6, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,
         6,  6], device='cuda:0') torch.Size([74])
09/21/2023, 08:03:36# labels of 0: tensor([ 6, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,
         6,  6], device='cuda:0') torch.Size([74])
09/21/2023, 08:03:36# predicted of 0: tensor([ 6, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,
         6,  6], device='cuda:0') torch.Size([74])
09/21/2023, 08:03:39# labels of Validation: tensor([94, 94], device='cuda:0') torch.Size([2])
09/21/2023, 08:03:39# predicted of Validation: tensor([94, 94], device='cuda:0') torch.Size([2])
09/21/2023, 08:03:43# labels of Validation: tensor([58, 58, 58, 58, 58, 58, 58], device='cuda:0') torch.Size([7])
09/21/2023, 08:03:43# predicted of Validation: tensor([58, 58, 58, 58, 58, 58, 58], device='cuda:0') torch.Size([7])
09/21/2023, 08:03:46# labels of Validation: tensor([95, 95, 95], device='cuda:0') torch.Size([3])
09/21/2023, 08:03:46# predicted of Validation: tensor([95, 95, 95], device='cuda:0') torch.Size([3])
09/21/2023, 08:03:50# labels of Validation: tensor([ 65,  65,  65,  65,  65,  65, 135, 135], device='cuda:0') torch.Size([8])
09/21/2023, 08:03:50# predicted of Validation: tensor([ 65,  65,  65,  65,  65,  65, 135, 135], device='cuda:0') torch.Size([8])
09/21/2023, 08:03:53# labels of Validation: tensor([29, 29, 29, 29, 29, 29, 29, 29, 29, 29], device='cuda:0') torch.Size([10])
09/21/2023, 08:03:53# predicted of Validation: tensor([29, 29, 29, 29, 29, 29, 29, 29, 29, 29], device='cuda:0') torch.Size([10])
09/21/2023, 08:03:53# labels of 5000: tensor([29, 29, 29, 29, 29, 29, 29, 29, 29, 29], device='cuda:0') torch.Size([10])
09/21/2023, 08:03:53# predicted of 5000: tensor([29, 29, 29, 29, 29, 29, 29, 29, 29, 29], device='cuda:0') torch.Size([10])
09/21/2023, 08:03:57# labels of Validation: tensor([127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
        127, 127, 127, 127, 127, 127], device='cuda:0') torch.Size([20])
09/21/2023, 08:03:57# predicted of Validation: tensor([127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
        127, 127, 127, 127, 127, 127], device='cuda:0') torch.Size([20])
09/21/2023, 08:04:00# labels of Validation: tensor([36], device='cuda:0') torch.Size([1])
09/21/2023, 08:04:00# predicted of Validation: tensor([9], device='cuda:0') torch.Size([1])
09/21/2023, 08:04:04# labels of Validation: tensor([159, 159, 159, 159, 159, 159, 159, 159, 159, 159], device='cuda:0') torch.Size([10])
09/21/2023, 08:04:04# predicted of Validation: tensor([159, 159, 159, 159, 159, 159, 159, 159, 159, 159], device='cuda:0') torch.Size([10])
09/21/2023, 08:04:07# labels of Validation: tensor([96, 96, 96, 96, 96, 96], device='cuda:0') torch.Size([6])
09/21/2023, 08:04:07# predicted of Validation: tensor([96, 96, 96, 96, 96, 96], device='cuda:0') torch.Size([6])
09/21/2023, 08:04:11# labels of Validation: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 08:04:11# predicted of Validation: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 08:04:11# labels of 10000: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 08:04:11# predicted of 10000: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 08:04:14# labels of Validation: tensor([42], device='cuda:0') torch.Size([1])
09/21/2023, 08:04:14# predicted of Validation: tensor([68], device='cuda:0') torch.Size([1])
09/21/2023, 08:04:18# labels of Validation: tensor([131, 131, 131, 131, 131], device='cuda:0') torch.Size([5])
09/21/2023, 08:04:18# predicted of Validation: tensor([131, 131, 131, 131, 131], device='cuda:0') torch.Size([5])
09/21/2023, 08:04:21# labels of Validation: tensor([54], device='cuda:0') torch.Size([1])
09/21/2023, 08:04:21# predicted of Validation: tensor([144], device='cuda:0') torch.Size([1])
09/21/2023, 08:04:25# labels of Validation: tensor([162], device='cuda:0') torch.Size([1])
09/21/2023, 08:04:25# predicted of Validation: tensor([157], device='cuda:0') torch.Size([1])
09/21/2023, 08:04:28# labels of Validation: tensor([66, 66, 66, 66, 66, 66, 66, 66, 66, 66], device='cuda:0') torch.Size([10])
09/21/2023, 08:04:28# predicted of Validation: tensor([66, 66, 66, 66, 66, 66, 66, 66, 66, 66], device='cuda:0') torch.Size([10])
09/21/2023, 08:04:28# labels of 15000: tensor([66, 66, 66, 66, 66, 66, 66, 66, 66, 66], device='cuda:0') torch.Size([10])
09/21/2023, 08:04:28# predicted of 15000: tensor([66, 66, 66, 66, 66, 66, 66, 66, 66, 66], device='cuda:0') torch.Size([10])
09/21/2023, 08:04:32# labels of Validation: tensor([117, 117, 117], device='cuda:0') torch.Size([3])
09/21/2023, 08:04:32# predicted of Validation: tensor([117, 117, 117], device='cuda:0') torch.Size([3])
09/21/2023, 08:04:33# Validation Loss: 1.6269 | Validation Accuracy: 0.6032

09/21/2023, 08:05:16# labels of 5000: tensor([140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140],
       device='cuda:0') torch.Size([13])
09/21/2023, 08:05:16# predicted of 5000: tensor([140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140],
       device='cuda:0') torch.Size([13])
09/21/2023, 08:05:59# labels of 10000: tensor([16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
        16, 16], device='cuda:0') torch.Size([20])
09/21/2023, 08:05:59# predicted of 10000: tensor([16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
        16, 16], device='cuda:0') torch.Size([20])
09/21/2023, 08:06:41# labels of 15000: tensor([26, 26, 26, 26, 26, 26], device='cuda:0') torch.Size([6])
09/21/2023, 08:06:41# predicted of 15000: tensor([26, 26, 26, 26, 26, 26], device='cuda:0') torch.Size([6])
09/21/2023, 08:07:24# labels of 20000: tensor([30], device='cuda:0') torch.Size([1])
09/21/2023, 08:07:24# predicted of 20000: tensor([38], device='cuda:0') torch.Size([1])
09/21/2023, 08:08:07# labels of 25000: tensor([29, 29, 29, 29, 29, 29, 29, 29, 29, 29], device='cuda:0') torch.Size([10])
09/21/2023, 08:08:07# predicted of 25000: tensor([29, 29, 29, 29, 29, 29, 29, 29, 29, 29], device='cuda:0') torch.Size([10])
09/21/2023, 08:08:50# labels of 30000: tensor([139, 139, 139, 139, 139], device='cuda:0') torch.Size([5])
09/21/2023, 08:08:50# predicted of 30000: tensor([139, 139, 139, 139, 139], device='cuda:0') torch.Size([5])
09/21/2023, 08:09:33# labels of 35000: tensor([38], device='cuda:0') torch.Size([1])
09/21/2023, 08:09:33# predicted of 35000: tensor([143], device='cuda:0') torch.Size([1])
09/21/2023, 08:10:16# labels of 40000: tensor([99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
        99, 99, 99, 99], device='cuda:0') torch.Size([22])
09/21/2023, 08:10:16# predicted of 40000: tensor([99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
        99, 99, 99, 99], device='cuda:0') torch.Size([22])
09/21/2023, 08:10:59# labels of 45000: tensor([9], device='cuda:0') torch.Size([1])
09/21/2023, 08:10:59# predicted of 45000: tensor([38], device='cuda:0') torch.Size([1])
09/21/2023, 08:11:41# labels of 50000: tensor([83], device='cuda:0') torch.Size([1])
09/21/2023, 08:11:41# predicted of 50000: tensor([2], device='cuda:0') torch.Size([1])
09/21/2023, 08:12:22# labels of 55000: tensor([146, 146, 146, 146, 146, 146], device='cuda:0') torch.Size([6])
09/21/2023, 08:12:22# predicted of 55000: tensor([146, 146, 146, 146, 146, 146], device='cuda:0') torch.Size([6])
09/21/2023, 08:13:04# labels of 60000: tensor([ 65,  65,  65,  65,  65,  65, 135, 135], device='cuda:0') torch.Size([8])
09/21/2023, 08:13:04# predicted of 60000: tensor([ 65,  65,  65,  65,  65,  65, 135, 135], device='cuda:0') torch.Size([8])
09/21/2023, 08:13:47# labels of 65000: tensor([57], device='cuda:0') torch.Size([1])
09/21/2023, 08:13:47# predicted of 65000: tensor([112], device='cuda:0') torch.Size([1])
09/21/2023, 08:14:29# labels of 70000: tensor([26, 26, 26, 26, 26, 26], device='cuda:0') torch.Size([6])
09/21/2023, 08:14:29# predicted of 70000: tensor([26, 26, 26, 26, 26, 26], device='cuda:0') torch.Size([6])
09/21/2023, 08:15:12# labels of 75000: tensor([162], device='cuda:0') torch.Size([1])
09/21/2023, 08:15:12# predicted of 75000: tensor([64], device='cuda:0') torch.Size([1])
09/21/2023, 08:15:54# labels of 80000: tensor([140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140],
       device='cuda:0') torch.Size([13])
09/21/2023, 08:15:54# predicted of 80000: tensor([140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140],
       device='cuda:0') torch.Size([13])
09/21/2023, 08:16:37# labels of 85000: tensor([36], device='cuda:0') torch.Size([1])
09/21/2023, 08:16:37# predicted of 85000: tensor([47], device='cuda:0') torch.Size([1])
09/21/2023, 08:17:19# labels of 90000: tensor([127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
        127, 127, 127, 127, 127, 127], device='cuda:0') torch.Size([20])
09/21/2023, 08:17:19# predicted of 90000: tensor([127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
        127, 127, 127, 127, 127, 127], device='cuda:0') torch.Size([20])
09/21/2023, 08:18:02# labels of 95000: tensor([66, 66, 66, 66, 66, 66, 66, 66, 66, 66], device='cuda:0') torch.Size([10])
09/21/2023, 08:18:02# predicted of 95000: tensor([66, 66, 66, 66, 66, 66, 66, 66, 66, 66], device='cuda:0') torch.Size([10])
09/21/2023, 08:18:45# labels of 100000: tensor([114, 114], device='cuda:0') torch.Size([2])
09/21/2023, 08:18:45# predicted of 100000: tensor([113, 113], device='cuda:0') torch.Size([2])
09/21/2023, 08:19:28# labels of 105000: tensor([115, 115, 115, 115, 115, 115, 115, 115, 115, 115], device='cuda:0') torch.Size([10])
09/21/2023, 08:19:28# predicted of 105000: tensor([115, 115, 115, 115, 115, 115, 115, 115, 115, 115], device='cuda:0') torch.Size([10])
09/21/2023, 08:20:11# labels of 110000: tensor([79, 79], device='cuda:0') torch.Size([2])
09/21/2023, 08:20:11# predicted of 110000: tensor([79, 79], device='cuda:0') torch.Size([2])
09/21/2023, 08:20:53# labels of 115000: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 08:20:53# predicted of 115000: tensor([33], device='cuda:0') torch.Size([1])
09/21/2023, 08:21:35# labels of 120000: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
        141, 141, 141, 141, 141, 141, 141, 141, 141, 141], device='cuda:0') torch.Size([80])
09/21/2023, 08:21:35# predicted of 120000: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
        141, 141, 141, 141, 141, 141, 141, 141, 141, 141], device='cuda:0') torch.Size([80])
09/21/2023, 08:22:18# labels of 125000: tensor([120, 120, 120, 120, 120, 120], device='cuda:0') torch.Size([6])
09/21/2023, 08:22:18# predicted of 125000: tensor([120, 120, 120, 120, 120, 120], device='cuda:0') torch.Size([6])
09/21/2023, 08:23:01# labels of 130000: tensor([109], device='cuda:0') torch.Size([1])
09/21/2023, 08:23:01# predicted of 130000: tensor([79], device='cuda:0') torch.Size([1])
09/21/2023, 08:23:18# total batches: 132000
09/21/2023, 08:23:18# Epoch 15 | Train Loss: 1.6428 | Train Accuracy: 0.6018
09/21/2023, 08:23:18# labels of Validation: tensor([113, 113], device='cuda:0') torch.Size([2])
09/21/2023, 08:23:18# predicted of Validation: tensor([110, 108], device='cuda:0') torch.Size([2])
09/21/2023, 08:23:18# labels of 0: tensor([113, 113], device='cuda:0') torch.Size([2])
09/21/2023, 08:23:18# predicted of 0: tensor([110, 108], device='cuda:0') torch.Size([2])
09/21/2023, 08:23:22# labels of Validation: tensor([48], device='cuda:0') torch.Size([1])
09/21/2023, 08:23:22# predicted of Validation: tensor([49], device='cuda:0') torch.Size([1])
09/21/2023, 08:23:25# labels of Validation: tensor([18], device='cuda:0') torch.Size([1])
09/21/2023, 08:23:25# predicted of Validation: tensor([49], device='cuda:0') torch.Size([1])
09/21/2023, 08:23:29# labels of Validation: tensor([88, 88], device='cuda:0') torch.Size([2])
09/21/2023, 08:23:29# predicted of Validation: tensor([110, 110], device='cuda:0') torch.Size([2])
09/21/2023, 08:23:32# labels of Validation: tensor([8, 8], device='cuda:0') torch.Size([2])
09/21/2023, 08:23:32# predicted of Validation: tensor([38, 38], device='cuda:0') torch.Size([2])
09/21/2023, 08:23:36# labels of Validation: tensor([129, 129, 129, 129, 129, 129, 129], device='cuda:0') torch.Size([7])
09/21/2023, 08:23:36# predicted of Validation: tensor([129, 129, 129, 129, 129, 129, 129], device='cuda:0') torch.Size([7])
09/21/2023, 08:23:36# labels of 5000: tensor([129, 129, 129, 129, 129, 129, 129], device='cuda:0') torch.Size([7])
09/21/2023, 08:23:36# predicted of 5000: tensor([129, 129, 129, 129, 129, 129, 129], device='cuda:0') torch.Size([7])
09/21/2023, 08:23:39# labels of Validation: tensor([90, 90], device='cuda:0') torch.Size([2])
09/21/2023, 08:23:39# predicted of Validation: tensor([97, 38], device='cuda:0') torch.Size([2])
09/21/2023, 08:23:43# labels of Validation: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 08:23:43# predicted of Validation: tensor([49], device='cuda:0') torch.Size([1])
09/21/2023, 08:23:46# labels of Validation: tensor([122, 122, 122, 122, 122, 122, 122], device='cuda:0') torch.Size([7])
09/21/2023, 08:23:46# predicted of Validation: tensor([122, 122, 122, 122, 122, 122, 122], device='cuda:0') torch.Size([7])
09/21/2023, 08:23:50# labels of Validation: tensor([113, 113], device='cuda:0') torch.Size([2])
09/21/2023, 08:23:50# predicted of Validation: tensor([93, 93], device='cuda:0') torch.Size([2])
09/21/2023, 08:23:53# labels of Validation: tensor([5, 5, 5], device='cuda:0') torch.Size([3])
09/21/2023, 08:23:53# predicted of Validation: tensor([5, 5, 5], device='cuda:0') torch.Size([3])
09/21/2023, 08:23:53# labels of 10000: tensor([5, 5, 5], device='cuda:0') torch.Size([3])
09/21/2023, 08:23:53# predicted of 10000: tensor([5, 5, 5], device='cuda:0') torch.Size([3])
09/21/2023, 08:23:57# labels of Validation: tensor([160, 160, 160, 160, 160, 160, 160, 160], device='cuda:0') torch.Size([8])
09/21/2023, 08:23:57# predicted of Validation: tensor([160, 160, 160, 160, 160, 160, 160, 160], device='cuda:0') torch.Size([8])
09/21/2023, 08:24:00# labels of Validation: tensor([132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132], device='cuda:0') torch.Size([216])
09/21/2023, 08:24:00# predicted of Validation: tensor([132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132], device='cuda:0') torch.Size([216])
09/21/2023, 08:24:04# labels of Validation: tensor([52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 65, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52], device='cuda:0') torch.Size([138])
09/21/2023, 08:24:04# predicted of Validation: tensor([52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 65, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52], device='cuda:0') torch.Size([138])
09/21/2023, 08:24:08# labels of Validation: tensor([65, 46, 46], device='cuda:0') torch.Size([3])
09/21/2023, 08:24:08# predicted of Validation: tensor([65, 46, 46], device='cuda:0') torch.Size([3])
09/21/2023, 08:24:11# labels of Validation: tensor([32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
       device='cuda:0') torch.Size([15])
09/21/2023, 08:24:11# predicted of Validation: tensor([32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
       device='cuda:0') torch.Size([15])
09/21/2023, 08:24:11# labels of 15000: tensor([32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
       device='cuda:0') torch.Size([15])
09/21/2023, 08:24:11# predicted of 15000: tensor([32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],
       device='cuda:0') torch.Size([15])
09/21/2023, 08:24:15# labels of Validation: tensor([24], device='cuda:0') torch.Size([1])
09/21/2023, 08:24:15# predicted of Validation: tensor([33], device='cuda:0') torch.Size([1])
09/21/2023, 08:24:16# Validation Loss: 1.6340 | Validation Accuracy: 0.6046

09/21/2023, 08:24:59# labels of 5000: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], device='cuda:0') torch.Size([15])
09/21/2023, 08:24:59# predicted of 5000: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], device='cuda:0') torch.Size([15])
09/21/2023, 08:25:42# labels of 10000: tensor([118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
        118, 118, 118, 118, 118, 118, 118], device='cuda:0') torch.Size([21])
09/21/2023, 08:25:42# predicted of 10000: tensor([118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
        118, 118, 118, 118, 118, 118, 118], device='cuda:0') torch.Size([21])
09/21/2023, 08:26:25# labels of 15000: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 08:26:25# predicted of 15000: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 08:27:08# labels of 20000: tensor([157], device='cuda:0') torch.Size([1])
09/21/2023, 08:27:08# predicted of 20000: tensor([164], device='cuda:0') torch.Size([1])
09/21/2023, 08:27:51# labels of 25000: tensor([129, 129, 129, 129, 129, 129, 129], device='cuda:0') torch.Size([7])
09/21/2023, 08:27:51# predicted of 25000: tensor([129, 129, 129, 129, 129, 129, 129], device='cuda:0') torch.Size([7])
09/21/2023, 08:28:34# labels of 30000: tensor([87], device='cuda:0') torch.Size([1])
09/21/2023, 08:28:34# predicted of 30000: tensor([119], device='cuda:0') torch.Size([1])
09/21/2023, 08:29:17# labels of 35000: tensor([24], device='cuda:0') torch.Size([1])
09/21/2023, 08:29:17# predicted of 35000: tensor([34], device='cuda:0') torch.Size([1])
09/21/2023, 08:30:00# labels of 40000: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 08:30:00# predicted of 40000: tensor([54], device='cuda:0') torch.Size([1])
09/21/2023, 08:30:42# labels of 45000: tensor([120, 120, 120, 120, 120, 120], device='cuda:0') torch.Size([6])
09/21/2023, 08:30:42# predicted of 45000: tensor([120, 120, 120, 120, 120, 120], device='cuda:0') torch.Size([6])
09/21/2023, 08:31:25# labels of 50000: tensor([138, 138, 138, 138, 138, 138, 138, 138, 138, 138], device='cuda:0') torch.Size([10])
09/21/2023, 08:31:25# predicted of 50000: tensor([138, 138, 138, 138, 138, 138, 138, 138, 138, 138], device='cuda:0') torch.Size([10])
09/21/2023, 08:32:08# labels of 55000: tensor([146, 146, 146, 146, 146, 146], device='cuda:0') torch.Size([6])
09/21/2023, 08:32:08# predicted of 55000: tensor([146, 146, 146, 146, 146, 146], device='cuda:0') torch.Size([6])
09/21/2023, 08:32:51# labels of 60000: tensor([100, 100, 100, 100, 100, 100], device='cuda:0') torch.Size([6])
09/21/2023, 08:32:51# predicted of 60000: tensor([100, 100, 100, 100, 100, 100], device='cuda:0') torch.Size([6])
09/21/2023, 08:33:33# labels of 65000: tensor([92], device='cuda:0') torch.Size([1])
09/21/2023, 08:33:33# predicted of 65000: tensor([79], device='cuda:0') torch.Size([1])
09/21/2023, 08:34:16# labels of 70000: tensor([82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
        82, 82, 82, 82, 82, 82, 82, 82, 82], device='cuda:0') torch.Size([27])
09/21/2023, 08:34:16# predicted of 70000: tensor([82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
        82, 82, 82, 82, 82, 82, 82, 82, 82], device='cuda:0') torch.Size([27])
09/21/2023, 08:34:59# labels of 75000: tensor([163], device='cuda:0') torch.Size([1])
09/21/2023, 08:34:59# predicted of 75000: tensor([163], device='cuda:0') torch.Size([1])
09/21/2023, 08:35:41# labels of 80000: tensor([132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132,  65, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132], device='cuda:0') torch.Size([217])
09/21/2023, 08:35:41# predicted of 80000: tensor([132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132,  65, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132], device='cuda:0') torch.Size([217])
09/21/2023, 08:36:24# labels of 85000: tensor([107, 107, 107, 107, 107, 107, 107, 107], device='cuda:0') torch.Size([8])
09/21/2023, 08:36:24# predicted of 85000: tensor([107, 107, 107, 107, 107, 107, 107, 107], device='cuda:0') torch.Size([8])
09/21/2023, 08:37:07# labels of 90000: tensor([144], device='cuda:0') torch.Size([1])
09/21/2023, 08:37:07# predicted of 90000: tensor([109], device='cuda:0') torch.Size([1])
09/21/2023, 08:37:50# labels of 95000: tensor([76], device='cuda:0') torch.Size([1])
09/21/2023, 08:37:50# predicted of 95000: tensor([42], device='cuda:0') torch.Size([1])
09/21/2023, 08:38:33# labels of 100000: tensor([83], device='cuda:0') torch.Size([1])
09/21/2023, 08:38:33# predicted of 100000: tensor([119], device='cuda:0') torch.Size([1])
09/21/2023, 08:39:16# labels of 105000: tensor([126, 126, 126], device='cuda:0') torch.Size([3])
09/21/2023, 08:39:16# predicted of 105000: tensor([126, 126, 126], device='cuda:0') torch.Size([3])
09/21/2023, 08:39:58# labels of 110000: tensor([4], device='cuda:0') torch.Size([1])
09/21/2023, 08:39:58# predicted of 110000: tensor([90], device='cuda:0') torch.Size([1])
09/21/2023, 08:40:41# labels of 115000: tensor([67, 67, 67, 67, 67], device='cuda:0') torch.Size([5])
09/21/2023, 08:40:41# predicted of 115000: tensor([67, 67, 67, 67, 67], device='cuda:0') torch.Size([5])
09/21/2023, 08:41:24# labels of 120000: tensor([86, 86], device='cuda:0') torch.Size([2])
09/21/2023, 08:41:24# predicted of 120000: tensor([86, 86], device='cuda:0') torch.Size([2])
09/21/2023, 08:42:06# labels of 125000: tensor([128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
        128, 128, 128, 128, 128, 128], device='cuda:0') torch.Size([20])
09/21/2023, 08:42:06# predicted of 125000: tensor([128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
        128, 128, 128, 128, 128, 128], device='cuda:0') torch.Size([20])
09/21/2023, 08:42:49# labels of 130000: tensor([68, 68], device='cuda:0') torch.Size([2])
09/21/2023, 08:42:49# predicted of 130000: tensor([114, 114], device='cuda:0') torch.Size([2])
09/21/2023, 08:43:06# total batches: 132000
09/21/2023, 08:43:06# Epoch 16 | Train Loss: 1.6433 | Train Accuracy: 0.6015
09/21/2023, 08:43:06# labels of Validation: tensor([89, 89], device='cuda:0') torch.Size([2])
09/21/2023, 08:43:06# predicted of Validation: tensor([89, 89], device='cuda:0') torch.Size([2])
09/21/2023, 08:43:06# labels of 0: tensor([89, 89], device='cuda:0') torch.Size([2])
09/21/2023, 08:43:06# predicted of 0: tensor([89, 89], device='cuda:0') torch.Size([2])
09/21/2023, 08:43:10# labels of Validation: tensor([117, 117, 117], device='cuda:0') torch.Size([3])
09/21/2023, 08:43:10# predicted of Validation: tensor([117, 117, 117], device='cuda:0') torch.Size([3])
09/21/2023, 08:43:13# labels of Validation: tensor([161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161], device='cuda:0') torch.Size([150])
09/21/2023, 08:43:13# predicted of Validation: tensor([161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
        161, 161, 161, 161, 161, 161, 161, 161, 161, 161], device='cuda:0') torch.Size([150])
09/21/2023, 08:43:16# labels of Validation: tensor([30], device='cuda:0') torch.Size([1])
09/21/2023, 08:43:16# predicted of Validation: tensor([90], device='cuda:0') torch.Size([1])
09/21/2023, 08:43:20# labels of Validation: tensor([67, 67, 67, 67, 67], device='cuda:0') torch.Size([5])
09/21/2023, 08:43:20# predicted of Validation: tensor([67, 67, 67, 67, 67], device='cuda:0') torch.Size([5])
09/21/2023, 08:43:23# labels of Validation: tensor([55], device='cuda:0') torch.Size([1])
09/21/2023, 08:43:23# predicted of Validation: tensor([158], device='cuda:0') torch.Size([1])
09/21/2023, 08:43:23# labels of 5000: tensor([55], device='cuda:0') torch.Size([1])
09/21/2023, 08:43:23# predicted of 5000: tensor([158], device='cuda:0') torch.Size([1])
09/21/2023, 08:43:27# labels of Validation: tensor([115, 115, 115, 115, 115, 115, 115, 115, 115, 115], device='cuda:0') torch.Size([10])
09/21/2023, 08:43:27# predicted of Validation: tensor([115, 115, 115, 115, 115, 115, 115, 115, 115, 115], device='cuda:0') torch.Size([10])
09/21/2023, 08:43:30# labels of Validation: tensor([33], device='cuda:0') torch.Size([1])
09/21/2023, 08:43:30# predicted of Validation: tensor([24], device='cuda:0') torch.Size([1])
09/21/2023, 08:43:34# labels of Validation: tensor([111], device='cuda:0') torch.Size([1])
09/21/2023, 08:43:34# predicted of Validation: tensor([108], device='cuda:0') torch.Size([1])
09/21/2023, 08:43:37# labels of Validation: tensor([144], device='cuda:0') torch.Size([1])
09/21/2023, 08:43:37# predicted of Validation: tensor([163], device='cuda:0') torch.Size([1])
09/21/2023, 08:43:41# labels of Validation: tensor([4], device='cuda:0') torch.Size([1])
09/21/2023, 08:43:41# predicted of Validation: tensor([158], device='cuda:0') torch.Size([1])
09/21/2023, 08:43:41# labels of 10000: tensor([4], device='cuda:0') torch.Size([1])
09/21/2023, 08:43:41# predicted of 10000: tensor([158], device='cuda:0') torch.Size([1])
09/21/2023, 08:43:44# labels of Validation: tensor([140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140],
       device='cuda:0') torch.Size([13])
09/21/2023, 08:43:44# predicted of Validation: tensor([140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140],
       device='cuda:0') torch.Size([13])
09/21/2023, 08:43:48# labels of Validation: tensor([37, 37, 37, 37, 37], device='cuda:0') torch.Size([5])
09/21/2023, 08:43:48# predicted of Validation: tensor([37, 37, 37, 37, 37], device='cuda:0') torch.Size([5])
09/21/2023, 08:43:51# labels of Validation: tensor([138, 138, 138, 138, 138, 138, 138, 138, 138, 138], device='cuda:0') torch.Size([10])
09/21/2023, 08:43:51# predicted of Validation: tensor([138, 138, 138, 138, 138, 138, 138, 138, 138, 138], device='cuda:0') torch.Size([10])
09/21/2023, 08:43:55# labels of Validation: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65, 149,
        149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
        149], device='cuda:0') torch.Size([29])
09/21/2023, 08:43:55# predicted of Validation: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65, 149,
        149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
        149], device='cuda:0') torch.Size([29])
09/21/2023, 08:43:58# labels of Validation: tensor([56, 56, 56, 56, 56, 56], device='cuda:0') torch.Size([6])
09/21/2023, 08:43:58# predicted of Validation: tensor([56, 56, 56, 56, 56, 56], device='cuda:0') torch.Size([6])
09/21/2023, 08:43:58# labels of 15000: tensor([56, 56, 56, 56, 56, 56], device='cuda:0') torch.Size([6])
09/21/2023, 08:43:58# predicted of 15000: tensor([56, 56, 56, 56, 56, 56], device='cuda:0') torch.Size([6])
09/21/2023, 08:44:01# labels of Validation: tensor([115, 115, 115, 115, 115, 115, 115, 115, 115, 115], device='cuda:0') torch.Size([10])
09/21/2023, 08:44:01# predicted of Validation: tensor([115, 115, 115, 115, 115, 115, 115, 115, 115, 115], device='cuda:0') torch.Size([10])
09/21/2023, 08:44:03# Validation Loss: 1.6270 | Validation Accuracy: 0.6035

09/21/2023, 08:44:46# labels of 5000: tensor([57], device='cuda:0') torch.Size([1])
09/21/2023, 08:44:46# predicted of 5000: tensor([34], device='cuda:0') torch.Size([1])
09/21/2023, 08:45:23# labels of 10000: tensor([1], device='cuda:0') torch.Size([1])
09/21/2023, 08:45:23# predicted of 10000: tensor([164], device='cuda:0') torch.Size([1])
09/21/2023, 08:45:53# labels of 15000: tensor([145, 145, 145, 145, 145, 145], device='cuda:0') torch.Size([6])
09/21/2023, 08:45:53# predicted of 15000: tensor([145, 145, 145, 145, 145, 145], device='cuda:0') torch.Size([6])
09/21/2023, 08:46:35# labels of 20000: tensor([19, 19, 19, 19, 19], device='cuda:0') torch.Size([5])
09/21/2023, 08:46:35# predicted of 20000: tensor([19, 19, 19, 19, 19], device='cuda:0') torch.Size([5])
09/21/2023, 08:47:18# labels of 25000: tensor([136, 136, 136, 136, 136, 136, 136], device='cuda:0') torch.Size([7])
09/21/2023, 08:47:18# predicted of 25000: tensor([136, 136, 136, 136, 136, 136, 136], device='cuda:0') torch.Size([7])
09/21/2023, 08:48:01# labels of 30000: tensor([146, 146, 146, 146, 146, 146], device='cuda:0') torch.Size([6])
09/21/2023, 08:48:01# predicted of 30000: tensor([146, 146, 146, 146, 146, 146], device='cuda:0') torch.Size([6])
09/21/2023, 08:48:44# labels of 35000: tensor([86, 86], device='cuda:0') torch.Size([2])
09/21/2023, 08:48:44# predicted of 35000: tensor([86, 86], device='cuda:0') torch.Size([2])
09/21/2023, 08:49:27# labels of 40000: tensor([1], device='cuda:0') torch.Size([1])
09/21/2023, 08:49:27# predicted of 40000: tensor([44], device='cuda:0') torch.Size([1])
09/21/2023, 08:50:10# labels of 45000: tensor([66, 66, 66, 66, 66, 66, 66, 66, 66, 66], device='cuda:0') torch.Size([10])
09/21/2023, 08:50:10# predicted of 45000: tensor([66, 66, 66, 66, 66, 66, 66, 66, 66, 66], device='cuda:0') torch.Size([10])
09/21/2023, 08:50:52# labels of 50000: tensor([75], device='cuda:0') torch.Size([1])
09/21/2023, 08:50:52# predicted of 50000: tensor([42], device='cuda:0') torch.Size([1])
09/21/2023, 08:51:35# labels of 55000: tensor([96, 96, 96, 96, 96, 96], device='cuda:0') torch.Size([6])
09/21/2023, 08:51:35# predicted of 55000: tensor([96, 96, 96, 96, 96, 96], device='cuda:0') torch.Size([6])
09/21/2023, 08:52:18# labels of 60000: tensor([20, 20], device='cuda:0') torch.Size([2])
09/21/2023, 08:52:18# predicted of 60000: tensor([20, 20], device='cuda:0') torch.Size([2])
09/21/2023, 08:53:01# labels of 65000: tensor([63, 63, 63, 63], device='cuda:0') torch.Size([4])
09/21/2023, 08:53:01# predicted of 65000: tensor([63, 63, 63, 63], device='cuda:0') torch.Size([4])
09/21/2023, 08:53:44# labels of 70000: tensor([1], device='cuda:0') torch.Size([1])
09/21/2023, 08:53:44# predicted of 70000: tensor([163], device='cuda:0') torch.Size([1])
09/21/2023, 08:54:28# labels of 75000: tensor([52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 65, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52], device='cuda:0') torch.Size([138])
09/21/2023, 08:54:28# predicted of 75000: tensor([52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 65, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52], device='cuda:0') torch.Size([138])
09/21/2023, 08:55:11# labels of 80000: tensor([57], device='cuda:0') torch.Size([1])
09/21/2023, 08:55:11# predicted of 80000: tensor([11], device='cuda:0') torch.Size([1])
09/21/2023, 08:55:54# labels of 85000: tensor([114, 114], device='cuda:0') torch.Size([2])
09/21/2023, 08:55:54# predicted of 85000: tensor([113, 114], device='cuda:0') torch.Size([2])
09/21/2023, 08:56:37# labels of 90000: tensor([27, 27, 27], device='cuda:0') torch.Size([3])
09/21/2023, 08:56:37# predicted of 90000: tensor([27, 27, 27], device='cuda:0') torch.Size([3])
09/21/2023, 08:57:19# labels of 95000: tensor([40, 40, 40, 40, 40, 40], device='cuda:0') torch.Size([6])
09/21/2023, 08:57:19# predicted of 95000: tensor([40, 40, 40, 40, 40, 40], device='cuda:0') torch.Size([6])
09/21/2023, 08:58:01# labels of 100000: tensor([155,  65,  65,  65, 155, 155, 155], device='cuda:0') torch.Size([7])
09/21/2023, 08:58:01# predicted of 100000: tensor([155,  65,  65,  65, 155, 155, 155], device='cuda:0') torch.Size([7])
09/21/2023, 08:58:44# labels of 105000: tensor([125], device='cuda:0') torch.Size([1])
09/21/2023, 08:58:44# predicted of 105000: tensor([124], device='cuda:0') torch.Size([1])
09/21/2023, 08:59:27# labels of 110000: tensor([36], device='cuda:0') torch.Size([1])
09/21/2023, 08:59:27# predicted of 110000: tensor([30], device='cuda:0') torch.Size([1])
09/21/2023, 09:00:10# labels of 115000: tensor([98], device='cuda:0') torch.Size([1])
09/21/2023, 09:00:10# predicted of 115000: tensor([98], device='cuda:0') torch.Size([1])
09/21/2023, 09:00:52# labels of 120000: tensor([91, 91, 91], device='cuda:0') torch.Size([3])
09/21/2023, 09:00:52# predicted of 120000: tensor([108,  91, 108], device='cuda:0') torch.Size([3])
09/21/2023, 09:01:35# labels of 125000: tensor([145, 145, 145, 145, 145, 145], device='cuda:0') torch.Size([6])
09/21/2023, 09:01:35# predicted of 125000: tensor([145, 145, 145, 145, 145, 145], device='cuda:0') torch.Size([6])
09/21/2023, 09:02:18# labels of 130000: tensor([150], device='cuda:0') torch.Size([1])
09/21/2023, 09:02:18# predicted of 130000: tensor([31], device='cuda:0') torch.Size([1])
09/21/2023, 09:02:35# total batches: 132000
09/21/2023, 09:02:35# Epoch 17 | Train Loss: 1.6435 | Train Accuracy: 0.6019
09/21/2023, 09:02:35# labels of Validation: tensor([1], device='cuda:0') torch.Size([1])
09/21/2023, 09:02:35# predicted of Validation: tensor([87], device='cuda:0') torch.Size([1])
09/21/2023, 09:02:35# labels of 0: tensor([1], device='cuda:0') torch.Size([1])
09/21/2023, 09:02:35# predicted of 0: tensor([87], device='cuda:0') torch.Size([1])
09/21/2023, 09:02:38# labels of Validation: tensor([40, 40, 40, 40, 40, 40], device='cuda:0') torch.Size([6])
09/21/2023, 09:02:38# predicted of Validation: tensor([40, 40, 40, 40, 40, 40], device='cuda:0') torch.Size([6])
09/21/2023, 09:02:42# labels of Validation: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 09:02:42# predicted of Validation: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 09:02:45# labels of Validation: tensor([155,  65,  65, 155, 155, 155], device='cuda:0') torch.Size([6])
09/21/2023, 09:02:45# predicted of Validation: tensor([155,  65,  65, 155, 155, 155], device='cuda:0') torch.Size([6])
09/21/2023, 09:02:49# labels of Validation: tensor([126, 126, 126], device='cuda:0') torch.Size([3])
09/21/2023, 09:02:49# predicted of Validation: tensor([126, 126, 126], device='cuda:0') torch.Size([3])
09/21/2023, 09:02:52# labels of Validation: tensor([87], device='cuda:0') torch.Size([1])
09/21/2023, 09:02:52# predicted of Validation: tensor([151], device='cuda:0') torch.Size([1])
09/21/2023, 09:02:52# labels of 5000: tensor([87], device='cuda:0') torch.Size([1])
09/21/2023, 09:02:52# predicted of 5000: tensor([151], device='cuda:0') torch.Size([1])
09/21/2023, 09:02:56# labels of Validation: tensor([95, 95, 95], device='cuda:0') torch.Size([3])
09/21/2023, 09:02:56# predicted of Validation: tensor([95, 95, 95], device='cuda:0') torch.Size([3])
09/21/2023, 09:02:59# labels of Validation: tensor([31], device='cuda:0') torch.Size([1])
09/21/2023, 09:02:59# predicted of Validation: tensor([121], device='cuda:0') torch.Size([1])
09/21/2023, 09:03:03# labels of Validation: tensor([ 65,  65,  65,  ..., 106, 106, 106], device='cuda:0') torch.Size([1015])
09/21/2023, 09:03:03# predicted of Validation: tensor([ 65,  65,  65,  ..., 106, 106, 106], device='cuda:0') torch.Size([1015])
09/21/2023, 09:03:06# labels of Validation: tensor([24], device='cuda:0') torch.Size([1])
09/21/2023, 09:03:06# predicted of Validation: tensor([124], device='cuda:0') torch.Size([1])
09/21/2023, 09:03:10# labels of Validation: tensor([57], device='cuda:0') torch.Size([1])
09/21/2023, 09:03:10# predicted of Validation: tensor([93], device='cuda:0') torch.Size([1])
09/21/2023, 09:03:10# labels of 10000: tensor([57], device='cuda:0') torch.Size([1])
09/21/2023, 09:03:10# predicted of 10000: tensor([93], device='cuda:0') torch.Size([1])
09/21/2023, 09:03:13# labels of Validation: tensor([4], device='cuda:0') torch.Size([1])
09/21/2023, 09:03:13# predicted of Validation: tensor([124], device='cuda:0') torch.Size([1])
09/21/2023, 09:03:16# labels of Validation: tensor([94, 94], device='cuda:0') torch.Size([2])
09/21/2023, 09:03:16# predicted of Validation: tensor([94, 94], device='cuda:0') torch.Size([2])
09/21/2023, 09:03:20# labels of Validation: tensor([65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
        70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70], device='cuda:0') torch.Size([49])
09/21/2023, 09:03:20# predicted of Validation: tensor([65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
        70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70], device='cuda:0') torch.Size([49])
09/21/2023, 09:03:23# labels of Validation: tensor([83], device='cuda:0') torch.Size([1])
09/21/2023, 09:03:23# predicted of Validation: tensor([151], device='cuda:0') torch.Size([1])
09/21/2023, 09:03:27# labels of Validation: tensor([125], device='cuda:0') torch.Size([1])
09/21/2023, 09:03:27# predicted of Validation: tensor([113], device='cuda:0') torch.Size([1])
09/21/2023, 09:03:27# labels of 15000: tensor([125], device='cuda:0') torch.Size([1])
09/21/2023, 09:03:27# predicted of 15000: tensor([113], device='cuda:0') torch.Size([1])
09/21/2023, 09:03:30# labels of Validation: tensor([52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52], device='cuda:0') torch.Size([137])
09/21/2023, 09:03:30# predicted of Validation: tensor([52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
        52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52], device='cuda:0') torch.Size([137])
09/21/2023, 09:03:32# Validation Loss: 1.6223 | Validation Accuracy: 0.6028

09/21/2023, 09:03:32# Find a better model!!
09/21/2023, 09:04:14# labels of 5000: tensor([89, 89], device='cuda:0') torch.Size([2])
09/21/2023, 09:04:14# predicted of 5000: tensor([89, 89], device='cuda:0') torch.Size([2])
09/21/2023, 09:04:57# labels of 10000: tensor([94, 94], device='cuda:0') torch.Size([2])
09/21/2023, 09:04:57# predicted of 10000: tensor([94, 94], device='cuda:0') torch.Size([2])
09/21/2023, 09:05:40# labels of 15000: tensor([57], device='cuda:0') torch.Size([1])
09/21/2023, 09:05:40# predicted of 15000: tensor([124], device='cuda:0') torch.Size([1])
09/21/2023, 09:06:23# labels of 20000: tensor([40, 40, 40, 40, 40, 40], device='cuda:0') torch.Size([6])
09/21/2023, 09:06:23# predicted of 20000: tensor([40, 40, 40, 40, 40, 40], device='cuda:0') torch.Size([6])
09/21/2023, 09:07:05# labels of 25000: tensor([63, 63, 63, 63], device='cuda:0') torch.Size([4])
09/21/2023, 09:07:05# predicted of 25000: tensor([63, 63, 63, 63], device='cuda:0') torch.Size([4])
09/21/2023, 09:07:48# labels of 30000: tensor([30], device='cuda:0') torch.Size([1])
09/21/2023, 09:07:48# predicted of 30000: tensor([93], device='cuda:0') torch.Size([1])
09/21/2023, 09:08:31# labels of 35000: tensor([11], device='cuda:0') torch.Size([1])
09/21/2023, 09:08:31# predicted of 35000: tensor([1], device='cuda:0') torch.Size([1])
09/21/2023, 09:09:13# labels of 40000: tensor([69, 69, 69, 69, 69, 69], device='cuda:0') torch.Size([6])
09/21/2023, 09:09:13# predicted of 40000: tensor([69, 69, 69, 69, 69, 69], device='cuda:0') torch.Size([6])
09/21/2023, 09:09:56# labels of 45000: tensor([73, 73, 73], device='cuda:0') torch.Size([3])
09/21/2023, 09:09:56# predicted of 45000: tensor([73, 73, 73], device='cuda:0') torch.Size([3])
09/21/2023, 09:10:38# labels of 50000: tensor([56, 56, 56, 56, 56, 56], device='cuda:0') torch.Size([6])
09/21/2023, 09:10:38# predicted of 50000: tensor([56, 56, 56, 56, 56, 56], device='cuda:0') torch.Size([6])
09/21/2023, 09:11:21# labels of 55000: tensor([127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
        127, 127, 127, 127, 127, 127], device='cuda:0') torch.Size([20])
09/21/2023, 09:11:21# predicted of 55000: tensor([127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
        127, 127, 127, 127, 127, 127], device='cuda:0') torch.Size([20])
09/21/2023, 09:12:04# labels of 60000: tensor([10, 10], device='cuda:0') torch.Size([2])
09/21/2023, 09:12:04# predicted of 60000: tensor([10, 10], device='cuda:0') torch.Size([2])
09/21/2023, 09:12:47# labels of 65000: tensor([163], device='cuda:0') torch.Size([1])
09/21/2023, 09:12:47# predicted of 65000: tensor([53], device='cuda:0') torch.Size([1])
09/21/2023, 09:13:29# labels of 70000: tensor([ 65,  65,  65,  ..., 106, 106, 106], device='cuda:0') torch.Size([1105])
09/21/2023, 09:13:29# predicted of 70000: tensor([ 65,  65,  65,  ..., 106, 106, 106], device='cuda:0') torch.Size([1105])
09/21/2023, 09:14:12# labels of 75000: tensor([43, 43], device='cuda:0') torch.Size([2])
09/21/2023, 09:14:12# predicted of 75000: tensor([43, 43], device='cuda:0') torch.Size([2])
09/21/2023, 09:14:55# labels of 80000: tensor([39, 39, 39], device='cuda:0') torch.Size([3])
09/21/2023, 09:14:55# predicted of 80000: tensor([39, 39, 39], device='cuda:0') torch.Size([3])
09/21/2023, 09:15:38# labels of 85000: tensor([61, 61, 61], device='cuda:0') torch.Size([3])
09/21/2023, 09:15:38# predicted of 85000: tensor([61, 61, 61], device='cuda:0') torch.Size([3])
09/21/2023, 09:16:21# labels of 90000: tensor([29, 29, 29, 29, 29, 29, 29, 29, 29, 29], device='cuda:0') torch.Size([10])
09/21/2023, 09:16:21# predicted of 90000: tensor([29, 29, 29, 29, 29, 29, 29, 29, 29, 29], device='cuda:0') torch.Size([10])
09/21/2023, 09:17:04# labels of 95000: tensor([36], device='cuda:0') torch.Size([1])
09/21/2023, 09:17:04# predicted of 95000: tensor([76], device='cuda:0') torch.Size([1])
09/21/2023, 09:17:47# labels of 100000: tensor([9], device='cuda:0') torch.Size([1])
09/21/2023, 09:17:47# predicted of 100000: tensor([55], device='cuda:0') torch.Size([1])
09/21/2023, 09:18:29# labels of 105000: tensor([28, 28, 28, 28, 28, 65, 28, 28, 28, 28, 28, 28, 28], device='cuda:0') torch.Size([13])
09/21/2023, 09:18:29# predicted of 105000: tensor([28, 28, 28, 28, 28, 65, 28, 28, 28, 28, 28, 28, 28], device='cuda:0') torch.Size([13])
09/21/2023, 09:19:12# labels of 110000: tensor([162], device='cuda:0') torch.Size([1])
09/21/2023, 09:19:12# predicted of 110000: tensor([83], device='cuda:0') torch.Size([1])
09/21/2023, 09:19:55# labels of 115000: tensor([65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 70, 70, 70, 70, 70, 70, 70, 70,
        70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70],
       device='cuda:0') torch.Size([51])
09/21/2023, 09:19:55# predicted of 115000: tensor([65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 70, 70, 70, 70, 70, 70, 70, 70,
        70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70],
       device='cuda:0') torch.Size([51])
09/21/2023, 09:20:38# labels of 120000: tensor([90, 90], device='cuda:0') torch.Size([2])
09/21/2023, 09:20:38# predicted of 120000: tensor([88, 88], device='cuda:0') torch.Size([2])
09/21/2023, 09:21:21# labels of 125000: tensor([113, 113], device='cuda:0') torch.Size([2])
09/21/2023, 09:21:21# predicted of 125000: tensor([59, 59], device='cuda:0') torch.Size([2])
09/21/2023, 09:22:04# labels of 130000: tensor([83], device='cuda:0') torch.Size([1])
09/21/2023, 09:22:04# predicted of 130000: tensor([90], device='cuda:0') torch.Size([1])
09/21/2023, 09:22:21# total batches: 132000
09/21/2023, 09:22:21# Epoch 18 | Train Loss: 1.6423 | Train Accuracy: 0.6020
09/21/2023, 09:22:21# labels of Validation: tensor([46, 46], device='cuda:0') torch.Size([2])
09/21/2023, 09:22:21# predicted of Validation: tensor([46, 46], device='cuda:0') torch.Size([2])
09/21/2023, 09:22:21# labels of 0: tensor([46, 46], device='cuda:0') torch.Size([2])
09/21/2023, 09:22:21# predicted of 0: tensor([46, 46], device='cuda:0') torch.Size([2])
09/21/2023, 09:22:24# labels of Validation: tensor([154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154],
       device='cuda:0') torch.Size([181])
09/21/2023, 09:22:24# predicted of Validation: tensor([154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65, 154, 154,
        154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154],
       device='cuda:0') torch.Size([181])
09/21/2023, 09:22:28# labels of Validation: tensor([64, 64], device='cuda:0') torch.Size([2])
09/21/2023, 09:22:28# predicted of Validation: tensor([108, 131], device='cuda:0') torch.Size([2])
09/21/2023, 09:22:31# labels of Validation: tensor([132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132], device='cuda:0') torch.Size([216])
09/21/2023, 09:22:31# predicted of Validation: tensor([132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
        132, 132, 132, 132, 132, 132], device='cuda:0') torch.Size([216])
09/21/2023, 09:22:35# labels of Validation: tensor([91, 91, 91], device='cuda:0') torch.Size([3])
09/21/2023, 09:22:35# predicted of Validation: tensor([131, 131, 131], device='cuda:0') torch.Size([3])
09/21/2023, 09:22:38# labels of Validation: tensor([19, 19, 19, 19, 19], device='cuda:0') torch.Size([5])
09/21/2023, 09:22:38# predicted of Validation: tensor([19, 19, 19, 19, 19], device='cuda:0') torch.Size([5])
09/21/2023, 09:22:38# labels of 5000: tensor([19, 19, 19, 19, 19], device='cuda:0') torch.Size([5])
09/21/2023, 09:22:38# predicted of 5000: tensor([19, 19, 19, 19, 19], device='cuda:0') torch.Size([5])
09/21/2023, 09:22:42# labels of Validation: tensor([91, 91, 91], device='cuda:0') torch.Size([3])
09/21/2023, 09:22:42# predicted of Validation: tensor([108, 103, 103], device='cuda:0') torch.Size([3])
09/21/2023, 09:22:45# labels of Validation: tensor([130, 130, 130, 130, 130], device='cuda:0') torch.Size([5])
09/21/2023, 09:22:45# predicted of Validation: tensor([130, 130, 130, 130, 130], device='cuda:0') torch.Size([5])
09/21/2023, 09:22:49# labels of Validation: tensor([128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
        128, 128, 128, 128, 128, 128], device='cuda:0') torch.Size([20])
09/21/2023, 09:22:49# predicted of Validation: tensor([128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
        128, 128, 128, 128, 128, 128], device='cuda:0') torch.Size([20])
09/21/2023, 09:22:52# labels of Validation: tensor([84, 84, 84, 84, 84, 84, 84, 84, 84], device='cuda:0') torch.Size([9])
09/21/2023, 09:22:52# predicted of Validation: tensor([84, 84, 84, 84, 84, 84, 84, 84, 84], device='cuda:0') torch.Size([9])
09/21/2023, 09:22:56# labels of Validation: tensor([111], device='cuda:0') torch.Size([1])
09/21/2023, 09:22:56# predicted of Validation: tensor([112], device='cuda:0') torch.Size([1])
09/21/2023, 09:22:56# labels of 10000: tensor([111], device='cuda:0') torch.Size([1])
09/21/2023, 09:22:56# predicted of 10000: tensor([112], device='cuda:0') torch.Size([1])
09/21/2023, 09:22:59# labels of Validation: tensor([121], device='cuda:0') torch.Size([1])
09/21/2023, 09:22:59# predicted of Validation: tensor([114], device='cuda:0') torch.Size([1])
09/21/2023, 09:23:03# labels of Validation: tensor([10, 10], device='cuda:0') torch.Size([2])
09/21/2023, 09:23:03# predicted of Validation: tensor([10, 10], device='cuda:0') torch.Size([2])
09/21/2023, 09:23:06# labels of Validation: tensor([125], device='cuda:0') torch.Size([1])
09/21/2023, 09:23:06# predicted of Validation: tensor([114], device='cuda:0') torch.Size([1])
09/21/2023, 09:23:10# labels of Validation: tensor([16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
        16, 16], device='cuda:0') torch.Size([20])
09/21/2023, 09:23:10# predicted of Validation: tensor([16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
        16, 16], device='cuda:0') torch.Size([20])
09/21/2023, 09:23:13# labels of Validation: tensor([158], device='cuda:0') torch.Size([1])
09/21/2023, 09:23:13# predicted of Validation: tensor([163], device='cuda:0') torch.Size([1])
09/21/2023, 09:23:13# labels of 15000: tensor([158], device='cuda:0') torch.Size([1])
09/21/2023, 09:23:13# predicted of 15000: tensor([163], device='cuda:0') torch.Size([1])
09/21/2023, 09:23:17# labels of Validation: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65, 106, 106, 106, 106,
        106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106],
       device='cuda:0') torch.Size([812])
09/21/2023, 09:23:17# predicted of Validation: tensor([ 65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,
         65,  65,  65,  65,  65,  65,  65,  65,  65,  65, 106, 106, 106, 106,
        106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106],
       device='cuda:0') torch.Size([812])
09/21/2023, 09:23:19# Validation Loss: 1.6281 | Validation Accuracy: 0.6033

09/21/2023, 09:24:02# labels of 5000: tensor([136, 136, 136, 136, 136, 136, 136], device='cuda:0') torch.Size([7])
09/21/2023, 09:24:02# predicted of 5000: tensor([136, 136, 136, 136, 136, 136, 136], device='cuda:0') torch.Size([7])
09/21/2023, 09:24:44# labels of 10000: tensor([25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
        25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
        25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],
       device='cuda:0') torch.Size([50])
09/21/2023, 09:24:44# predicted of 10000: tensor([25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
        25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
        25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],
       device='cuda:0') torch.Size([50])
09/21/2023, 09:25:27# labels of 15000: tensor([80, 80, 80, 80, 80, 80], device='cuda:0') torch.Size([6])
09/21/2023, 09:25:27# predicted of 15000: tensor([80, 80, 80, 80, 80, 80], device='cuda:0') torch.Size([6])
09/21/2023, 09:26:10# labels of 20000: tensor([77, 77, 77, 77, 77, 77, 77, 77], device='cuda:0') torch.Size([8])
09/21/2023, 09:26:10# predicted of 20000: tensor([77, 77, 77, 77, 77, 77, 77, 77], device='cuda:0') torch.Size([8])
09/21/2023, 09:26:52# labels of 25000: tensor([156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
         65,  65, 156, 156, 156, 156, 156, 156, 156, 156], device='cuda:0') torch.Size([66])
09/21/2023, 09:26:52# predicted of 25000: tensor([156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
        156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
         65,  65, 156, 156, 156, 156, 156, 156, 156, 156], device='cuda:0') torch.Size([66])
09/21/2023, 09:27:35# labels of 30000: tensor([133, 133, 133, 133, 133, 133, 133, 133], device='cuda:0') torch.Size([8])
09/21/2023, 09:27:35# predicted of 30000: tensor([133, 133, 133, 133, 133, 133, 133, 133], device='cuda:0') torch.Size([8])
09/21/2023, 09:28:18# labels of 35000: tensor([55], device='cuda:0') torch.Size([1])
09/21/2023, 09:28:18# predicted of 35000: tensor([75], device='cuda:0') torch.Size([1])
09/21/2023, 09:29:01# labels of 40000: tensor([5, 5, 5], device='cuda:0') torch.Size([3])
09/21/2023, 09:29:01# predicted of 40000: tensor([5, 5, 5], device='cuda:0') torch.Size([3])
09/21/2023, 09:29:43# labels of 45000: tensor([159, 159, 159, 159, 159, 159, 159, 159, 159, 159], device='cuda:0') torch.Size([10])
09/21/2023, 09:29:43# predicted of 45000: tensor([159, 159, 159, 159, 159, 159, 159, 159, 159, 159], device='cuda:0') torch.Size([10])
09/21/2023, 09:30:26# labels of 50000: tensor([97], device='cuda:0') torch.Size([1])
09/21/2023, 09:30:26# predicted of 50000: tensor([104], device='cuda:0') torch.Size([1])
09/21/2023, 09:31:09# labels of 55000: tensor([117, 117, 117], device='cuda:0') torch.Size([3])
09/21/2023, 09:31:09# predicted of 55000: tensor([117, 117, 117], device='cuda:0') torch.Size([3])
09/21/2023, 09:31:51# labels of 60000: tensor([18], device='cuda:0') torch.Size([1])
09/21/2023, 09:31:51# predicted of 60000: tensor([152], device='cuda:0') torch.Size([1])
09/21/2023, 09:32:34# labels of 65000: tensor([163], device='cuda:0') torch.Size([1])
09/21/2023, 09:32:34# predicted of 65000: tensor([93], device='cuda:0') torch.Size([1])
09/21/2023, 09:33:16# labels of 70000: tensor([10, 10], device='cuda:0') torch.Size([2])
09/21/2023, 09:33:16# predicted of 70000: tensor([10, 10], device='cuda:0') torch.Size([2])
09/21/2023, 09:33:59# labels of 75000: tensor([110, 110], device='cuda:0') torch.Size([2])
09/21/2023, 09:33:59# predicted of 75000: tensor([64, 64], device='cuda:0') torch.Size([2])
09/21/2023, 09:34:42# labels of 80000: tensor([45, 65, 45, 45], device='cuda:0') torch.Size([4])
09/21/2023, 09:34:42# predicted of 80000: tensor([45, 65, 45, 45], device='cuda:0') torch.Size([4])
09/21/2023, 09:35:25# labels of 85000: tensor([101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
        101, 101], device='cuda:0') torch.Size([16])
09/21/2023, 09:35:25# predicted of 85000: tensor([101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
        101, 101], device='cuda:0') torch.Size([16])
09/21/2023, 09:36:07# labels of 90000: tensor([126, 126, 126], device='cuda:0') torch.Size([3])
09/21/2023, 09:36:07# predicted of 90000: tensor([126, 126, 126], device='cuda:0') torch.Size([3])
09/21/2023, 09:36:50# labels of 95000: tensor([20, 20], device='cuda:0') torch.Size([2])
09/21/2023, 09:36:50# predicted of 95000: tensor([20, 20], device='cuda:0') torch.Size([2])
09/21/2023, 09:37:32# labels of 100000: tensor([147,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65, 147, 147,
        147, 147], device='cuda:0') torch.Size([16])
09/21/2023, 09:37:32# predicted of 100000: tensor([147,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65,  65, 147, 147,
        147, 147], device='cuda:0') torch.Size([16])
09/21/2023, 09:38:15# labels of 105000: tensor([51, 51, 51, 51, 51], device='cuda:0') torch.Size([5])
09/21/2023, 09:38:15# predicted of 105000: tensor([51, 51, 51, 51, 51], device='cuda:0') torch.Size([5])
09/21/2023, 09:38:57# labels of 110000: tensor([69, 69, 69, 69, 69, 69], device='cuda:0') torch.Size([6])
09/21/2023, 09:38:57# predicted of 110000: tensor([69, 69, 69, 69, 69, 69], device='cuda:0') torch.Size([6])
09/21/2023, 09:39:40# labels of 115000: tensor([84, 84, 84, 84, 84, 84, 84, 84, 84], device='cuda:0') torch.Size([9])
09/21/2023, 09:39:40# predicted of 115000: tensor([84, 84, 84, 84, 84, 84, 84, 84, 84], device='cuda:0') torch.Size([9])
09/21/2023, 09:40:23# labels of 120000: tensor([50, 50, 50], device='cuda:0') torch.Size([3])
09/21/2023, 09:40:23# predicted of 120000: tensor([50, 50, 50], device='cuda:0') torch.Size([3])
09/21/2023, 09:41:06# labels of 125000: tensor([78, 78, 78, 78, 78], device='cuda:0') torch.Size([5])
09/21/2023, 09:41:06# predicted of 125000: tensor([78, 78, 78, 78, 78], device='cuda:0') torch.Size([5])
09/21/2023, 09:41:48# labels of 130000: tensor([31], device='cuda:0') torch.Size([1])
09/21/2023, 09:41:48# predicted of 130000: tensor([64], device='cuda:0') torch.Size([1])
09/21/2023, 09:42:06# total batches: 132000
09/21/2023, 09:42:06# Epoch 19 | Train Loss: 1.6428 | Train Accuracy: 0.6020
09/21/2023, 09:42:06# labels of Validation: tensor([36], device='cuda:0') torch.Size([1])
09/21/2023, 09:42:06# predicted of Validation: tensor([157], device='cuda:0') torch.Size([1])
09/21/2023, 09:42:06# labels of 0: tensor([36], device='cuda:0') torch.Size([1])
09/21/2023, 09:42:06# predicted of 0: tensor([157], device='cuda:0') torch.Size([1])
09/21/2023, 09:42:09# labels of Validation: tensor([49], device='cuda:0') torch.Size([1])
09/21/2023, 09:42:09# predicted of Validation: tensor([157], device='cuda:0') torch.Size([1])
09/21/2023, 09:42:12# labels of Validation: tensor([116], device='cuda:0') torch.Size([1])
09/21/2023, 09:42:12# predicted of Validation: tensor([157], device='cuda:0') torch.Size([1])
09/21/2023, 09:42:16# labels of Validation: tensor([65, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
        70, 70, 70, 70, 70, 70], device='cuda:0') torch.Size([24])
09/21/2023, 09:42:16# predicted of Validation: tensor([65, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
        70, 70, 70, 70, 70, 70], device='cuda:0') torch.Size([24])
09/21/2023, 09:42:19# labels of Validation: tensor([119], device='cuda:0') torch.Size([1])
09/21/2023, 09:42:19# predicted of Validation: tensor([109], device='cuda:0') torch.Size([1])
09/21/2023, 09:42:23# labels of Validation: tensor([142], device='cuda:0') torch.Size([1])
09/21/2023, 09:42:23# predicted of Validation: tensor([157], device='cuda:0') torch.Size([1])
09/21/2023, 09:42:23# labels of 5000: tensor([142], device='cuda:0') torch.Size([1])
09/21/2023, 09:42:23# predicted of 5000: tensor([157], device='cuda:0') torch.Size([1])
09/21/2023, 09:42:26# labels of Validation: tensor([86, 86], device='cuda:0') torch.Size([2])
09/21/2023, 09:42:26# predicted of Validation: tensor([86, 86], device='cuda:0') torch.Size([2])
09/21/2023, 09:42:30# labels of Validation: tensor([71, 71, 71, 71, 71, 71], device='cuda:0') torch.Size([6])
09/21/2023, 09:42:30# predicted of Validation: tensor([71, 71, 71, 71, 71, 71], device='cuda:0') torch.Size([6])
09/21/2023, 09:42:33# labels of Validation: tensor([58, 58, 58, 58, 58, 58, 58], device='cuda:0') torch.Size([7])
09/21/2023, 09:42:33# predicted of Validation: tensor([58, 58, 58, 58, 58, 58, 58], device='cuda:0') torch.Size([7])
09/21/2023, 09:42:37# labels of Validation: tensor([105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105],
       device='cuda:0') torch.Size([13])
09/21/2023, 09:42:37# predicted of Validation: tensor([105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105],
       device='cuda:0') torch.Size([13])
09/21/2023, 09:42:40# labels of Validation: tensor([82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
        82, 82, 82, 82, 82, 82, 82, 82, 82], device='cuda:0') torch.Size([27])
09/21/2023, 09:42:40# predicted of Validation: tensor([82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
        82, 82, 82, 82, 82, 82, 82, 82, 82], device='cuda:0') torch.Size([27])
09/21/2023, 09:42:40# labels of 10000: tensor([82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
        82, 82, 82, 82, 82, 82, 82, 82, 82], device='cuda:0') torch.Size([27])
09/21/2023, 09:42:40# predicted of 10000: tensor([82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
        82, 82, 82, 82, 82, 82, 82, 82, 82], device='cuda:0') torch.Size([27])
09/21/2023, 09:42:44# labels of Validation: tensor([153, 153, 153], device='cuda:0') torch.Size([3])
09/21/2023, 09:42:44# predicted of Validation: tensor([153, 153, 153], device='cuda:0') torch.Size([3])
09/21/2023, 09:42:47# labels of Validation: tensor([62, 62, 62, 62, 62, 62], device='cuda:0') torch.Size([6])
09/21/2023, 09:42:47# predicted of Validation: tensor([62, 62, 62, 62, 62, 62], device='cuda:0') torch.Size([6])
09/21/2023, 09:42:51# labels of Validation: tensor([27, 27, 27], device='cuda:0') torch.Size([3])
09/21/2023, 09:42:51# predicted of Validation: tensor([27, 27, 27], device='cuda:0') torch.Size([3])
09/21/2023, 09:42:54# labels of Validation: tensor([15, 15, 15], device='cuda:0') torch.Size([3])
09/21/2023, 09:42:54# predicted of Validation: tensor([15, 15, 15], device='cuda:0') torch.Size([3])
09/21/2023, 09:42:58# labels of Validation: tensor([28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28], device='cuda:0') torch.Size([12])
09/21/2023, 09:42:58# predicted of Validation: tensor([28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28], device='cuda:0') torch.Size([12])
09/21/2023, 09:42:58# labels of 15000: tensor([28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28], device='cuda:0') torch.Size([12])
09/21/2023, 09:42:58# predicted of 15000: tensor([28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28], device='cuda:0') torch.Size([12])
09/21/2023, 09:43:01# labels of Validation: tensor([45, 45, 45], device='cuda:0') torch.Size([3])
09/21/2023, 09:43:01# predicted of Validation: tensor([45, 45, 45], device='cuda:0') torch.Size([3])
09/21/2023, 09:43:03# Validation Loss: 1.6285 | Validation Accuracy: 0.6030

09/21/2023, 09:43:03# labels of Test: tensor([65, 65, 65, 65, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
        70, 70, 70, 70, 70, 70, 70, 70, 70], device='cuda:0') torch.Size([27])
09/21/2023, 09:43:03# predicted of Test: tensor([65, 65, 65, 65, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
        70, 70, 70, 70, 70, 70, 70, 70, 70], device='cuda:0') torch.Size([27])
09/21/2023, 09:43:03# labels of 0: tensor([65, 65, 65, 65, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
        70, 70, 70, 70, 70, 70, 70, 70, 70], device='cuda:0') torch.Size([27])
09/21/2023, 09:43:03# predicted of 0: tensor([65, 65, 65, 65, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
        70, 70, 70, 70, 70, 70, 70, 70, 70], device='cuda:0') torch.Size([27])
09/21/2023, 09:43:03# labels: tensor([65, 65, 65, 65, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
        70, 70, 70, 70, 70, 70, 70, 70, 70], device='cuda:0') torch.Size([27])
09/21/2023, 09:43:03# predicted: tensor([65, 65, 65, 65, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
        70, 70, 70, 70, 70, 70, 70, 70, 70], device='cuda:0') torch.Size([27])
09/21/2023, 09:43:07# labels of Test: tensor([155,  65, 155, 155, 155], device='cuda:0') torch.Size([5])
09/21/2023, 09:43:07# predicted of Test: tensor([155,  65, 155, 155, 155], device='cuda:0') torch.Size([5])
09/21/2023, 09:43:11# labels of Test: tensor([35, 35, 35, 35, 35, 35], device='cuda:0') torch.Size([6])
09/21/2023, 09:43:11# predicted of Test: tensor([35, 35, 35, 35, 35, 35], device='cuda:0') torch.Size([6])
09/21/2023, 09:43:14# labels of Test: tensor([140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140],
       device='cuda:0') torch.Size([13])
09/21/2023, 09:43:14# predicted of Test: tensor([140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140],
       device='cuda:0') torch.Size([13])
09/21/2023, 09:43:18# labels of Test: tensor([146, 146, 146, 146, 146, 146], device='cuda:0') torch.Size([6])
09/21/2023, 09:43:18# predicted of Test: tensor([146, 146, 146, 146, 146, 146], device='cuda:0') torch.Size([6])
09/21/2023, 09:43:22# labels of Test: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 09:43:22# predicted of Test: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 09:43:22# labels of 5000: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 09:43:22# predicted of 5000: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 09:43:22# labels: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 09:43:22# predicted: tensor([166, 166, 166, 166, 166, 166], device='cuda:0') torch.Size([6])
09/21/2023, 09:43:25# labels of Test: tensor([112], device='cuda:0') torch.Size([1])
09/21/2023, 09:43:25# predicted of Test: tensor([124], device='cuda:0') torch.Size([1])
09/21/2023, 09:43:28# labels of Test: tensor([7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],
       device='cuda:0') torch.Size([67])
09/21/2023, 09:43:28# predicted of Test: tensor([7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],
       device='cuda:0') torch.Size([67])
09/21/2023, 09:43:32# labels of Test: tensor([15, 15, 15], device='cuda:0') torch.Size([3])
09/21/2023, 09:43:32# predicted of Test: tensor([15, 15, 15], device='cuda:0') torch.Size([3])
09/21/2023, 09:43:35# labels of Test: tensor([26, 26, 26, 26, 26, 26], device='cuda:0') torch.Size([6])
09/21/2023, 09:43:35# predicted of Test: tensor([26, 26, 26, 26, 26, 26], device='cuda:0') torch.Size([6])
09/21/2023, 09:43:39# labels of Test: tensor([39, 39, 39], device='cuda:0') torch.Size([3])
09/21/2023, 09:43:39# predicted of Test: tensor([39, 39, 39], device='cuda:0') torch.Size([3])
09/21/2023, 09:43:39# labels of 10000: tensor([39, 39, 39], device='cuda:0') torch.Size([3])
09/21/2023, 09:43:39# predicted of 10000: tensor([39, 39, 39], device='cuda:0') torch.Size([3])
09/21/2023, 09:43:39# labels: tensor([39, 39, 39], device='cuda:0') torch.Size([3])
09/21/2023, 09:43:39# predicted: tensor([39, 39, 39], device='cuda:0') torch.Size([3])
09/21/2023, 09:43:42# labels of Test: tensor([55], device='cuda:0') torch.Size([1])
09/21/2023, 09:43:42# predicted of Test: tensor([124], device='cuda:0') torch.Size([1])
09/21/2023, 09:43:46# labels of Test: tensor([61, 61, 61], device='cuda:0') torch.Size([3])
09/21/2023, 09:43:46# predicted of Test: tensor([61, 61, 61], device='cuda:0') torch.Size([3])
09/21/2023, 09:43:49# labels of Test: tensor([72, 72], device='cuda:0') torch.Size([2])
09/21/2023, 09:43:49# predicted of Test: tensor([72, 72], device='cuda:0') torch.Size([2])
09/21/2023, 09:43:53# labels of Test: tensor([84, 84, 84, 84, 84, 84, 84, 84, 84], device='cuda:0') torch.Size([9])
09/21/2023, 09:43:53# predicted of Test: tensor([84, 84, 84, 84, 84, 84, 84, 84, 84], device='cuda:0') torch.Size([9])
09/21/2023, 09:43:56# labels of Test: tensor([95, 95, 95], device='cuda:0') torch.Size([3])
09/21/2023, 09:43:56# predicted of Test: tensor([95, 95, 95], device='cuda:0') torch.Size([3])
09/21/2023, 09:43:56# labels of 15000: tensor([95, 95, 95], device='cuda:0') torch.Size([3])
09/21/2023, 09:43:56# predicted of 15000: tensor([95, 95, 95], device='cuda:0') torch.Size([3])
09/21/2023, 09:43:56# labels: tensor([95, 95, 95], device='cuda:0') torch.Size([3])
09/21/2023, 09:43:56# predicted: tensor([95, 95, 95], device='cuda:0') torch.Size([3])
09/21/2023, 09:44:00# labels of Test: tensor([120, 120, 120, 120, 120, 120], device='cuda:0') torch.Size([6])
09/21/2023, 09:44:00# predicted of Test: tensor([120, 120, 120, 120, 120, 120], device='cuda:0') torch.Size([6])
09/21/2023, 09:44:02# Test Accuracy: 97.2004396270261 %



09/21/2023, 09:44:41# report path: classification_report/classification_report-transE_50-graphSAGE-0.xlsx
09/21/2023, 09:44:41# label path: classification_report/mapped_true_predicted_labels-transE_50-graphSAGE-0.xlsx
09/21/2023, 09:44:53# mapped_report:
                                                precision    recall  f1-score   support

T1003.001_0ef4cc7b-611c-4237-b20b-db36b6906554       1.00      1.00      1.00      6400
    T1003.001_35d92515122effdd73801c6ac3021da7       1.00      1.00      1.00       600
    T1003.002_5a484b65c247675e3b7ada4ba648d376       1.00      1.00      1.00       500
    T1003.002_7fa4ea18694f2552547b65e23952cabb       1.00      1.00      1.00      1500
    T1003.003_9f73269695e54311dd61dc68940fb3e1       0.02      0.01      0.01       100
    T1003.003_f049b89533298c2d6cd37a940248b219       0.00      0.00      0.00       100
        T1003_18f31c311ac208802e88ab8d5af8603e       1.00      1.00      1.00       600
        T1007_9d03c91bdae5a80f17f89c987942b5a8       1.00      1.00      1.00       600
    T1007_c6607391-d02c-44b5-9b13-d3492ca58599       0.00      0.00      0.00       100
        T1007_d6bb2a19da7246731ed9c44831b135f8       0.12      0.43      0.19       300
    T1016_14a21534-350f-4d83-9dd7-3c56b93a0c17       0.00      0.00      0.00       100
        T1016_71b3d2945679566b9d94d8cb11df4b70       0.00      0.00      0.00       100
        T1016_7d8ee68f0e9731db82964f558f614608       0.68      0.26      0.38       500
    T1016_921055f4-5970-4707-909e-62f594234d91       0.03      0.01      0.02       100
    T1016_a0676fe1-cd52-482e-8dde-349b73f9aa69       0.03      0.07      0.04       100
    T1016_e8017c46-acb8-400c-a4b5-b3362b5b5baa       0.00      0.00      0.00       100
    T1018_26c8b8b5-7b5b-4de1-a128-7d37fb14f517       0.00      0.00      0.00       100
        T1018_a44bb43474728496276d5d73aa14588f       0.02      0.03      0.03       100
        T1018_ac20e592bc912bddff4d6b88289095f0       0.00      0.00      0.00       100
    T1021.001_dd67068b052fa553ad4a0ac7d6a5ea89       1.00      1.00      1.00       600
    T1033_bd527b63-9f9e-46e0-9816-b8434d2b8989       0.06      0.01      0.02       100
    T1033_c0da588f-79f0-4263-8998-7496b1a40596       0.01      0.01      0.01       100
    T1036.003_04e8d83e7badf098d50800d6aa1dd487       1.00      1.00      1.00      2300
    T1036.003_f5ef8466e5ebcd2ae03f338d9416069c       1.00      1.00      1.00      2700
    T1036.004_1f0614ea5c4af6faf1b44570f5f22f8a       0.00      0.00      0.00       200
    T1036.004_7de3d7b4922a7b996d8df36fb22bb118       0.03      0.03      0.03       200
    T1037.001_62cfa90fb03a6bc1a6ebcce8a3ea81b7       1.00      1.00      1.00       700
        T1040_6881a4589710d53f0c146e91db513f01       1.00      1.00      1.00       500
        T1047_09e0f9cf2eb803a1c35deeecf3665fad       0.07      0.02      0.03       100
        T1047_6935e41353aa781bb723462d26114c44       0.01      0.06      0.02       100
        T1047_ac122553ab4426ea3362bb4a97d31bfd       0.18      0.02      0.04       100
        T1047_ac2764f7a67a9ce92b54e8e59b361838       0.50      0.01      0.02       100
        T1047_b0255b5120cbabc062d8d4510a142c3b       0.00      0.00      0.00       100
        T1047_ed736a123da6fb2aab22cfd4f437e8b5       0.03      0.05      0.04       100
        T1047_f4b0b4129560ea66f9751275e82f6bab       0.00      0.00      0.00       100
    T1049_638fb6bb-ba39-4285-93d1-7e4775b033a8       0.00      0.00      0.00       100
        T1049_a14392d713dffba6a397682ff83259a0       0.00      0.00      0.00       300
    T1053.005_5db2884b6ca3ab932848f295a3896dc0       0.09      0.11      0.10       200
    T1053.005_ee454be9197890de62705ce6255933fd       0.02      0.01      0.01       100
T1055.001_a74bc239-a196-4f7e-8d5c-fe8c0266071c       0.00      0.00      0.00       100
T1055.002_e5bcefee-262d-4568-a261-e8a20855ec81       0.03      0.05      0.04       100
    T1057_5a39d7ed-45c9-4a79-b581-e5fb99e24f65       0.00      0.00      0.00       100
    T1057_8adf02e8-6e71-4244-886c-98c402857404       1.00      1.00      1.00       700
        T1057_b2a1e430ca6d36eb5af2fe666e769847       0.00      0.00      0.00       100
        T1057_f8de05d1741dcc468f772ab0ff4dac72       0.00      0.00      0.00       100
T1059.001_55678719-e76e-4df9-92aa-10655bbd1cf4       1.00      1.00      1.00      1000
    T1059.001_6efbccc1869e8cd618c0d3ecda407d5f       1.00      1.00      1.00      1500
T1059.001_702bfdd2-9947-4eda-b551-c3a1ea9a59a2       1.00      1.00      1.00       500
T1059.001_bfff9006-d1fb-46ce-b173-92cb04e9a031       1.00      1.00      1.00      1000
T1059.001_ccdb8caf-c69e-424b-b930-551969450c57       1.00      1.00      1.00       500
T1059.001_e5f9de8f-3df1-4e78-ad92-a784e3f6770d       1.00      1.00      1.00     13700
    T1059.003_6c318ef0339d74d909ad556681b6493e       1.00      1.00      1.00       700
    T1059.003_f38e58deb7ad20b5538ca40db7b7b4f8       1.00      1.00      1.00       600
T1069.001_5c4dd985-89e3-4590-9b57-71fed66ff4e2       1.00      1.00      1.00       900
    T1069.001_a1f48fa3ddee658b29b414523c9a295b       0.03      0.03      0.03       200
    T1069.002_6103e503cb444bc7b4187704f2035708       0.26      0.52      0.34       400
    T1070.005_1f91076e2be2014cc7b4f1296de02fd6       1.00      1.00      1.00       600
    T1071.001_24c3b7b004401d839a5c337201da3484       1.00      1.00      1.00      2000
T1074.001_4e97e699-93d7-4040-b5a3-2e906a58199e       1.00      1.00      1.00      1000
T1074.001_6469befa-748a-4b9c-a96d-f191fde47d89       1.00      1.00      1.00       300
    T1074.001_e6dfc7e89359ac6fa6de84b0e1d5762e       1.00      1.00      1.00       800
    T1078.001_d0ca00832890baa1d42322cf70fcab1a       0.01      0.01      0.01       100
    T1082_29451844-9b76-4e16-a9ee-d6feab4b24db       0.00      0.00      0.00       100
    T1083_52177cc1-b9ab-4411-ac21-2eadc4b5d3b8       1.00      1.00      1.00      1200
    T1083_6e1a53c0-7352-4899-be35-fa7f364d5722       0.00      0.00      0.00       100
    T1087.001_6334877e8e3ba48f7835d4856d90a282       1.00      1.00      1.00       500
T1087.001_feaced8f-f43f-452a-9500-a5219488abb8       0.04      0.01      0.02       100
    T1090.001_ba343199a4f15ed6b57eb52412f62e4e       1.00      0.98      0.99       200
        T1105_0856c235a1d26113d4f2d92e39c9a9f8       1.00      1.00      1.00      1100
        T1105_1095434782a00c8a4772a11e625bcf5d       0.99      1.00      1.00       200
        T1105_4f683658f161ccdc51337c470d32bab9       1.00      1.00      1.00       800
    T1105_60f63260-39bb-4136-87a0-b6c2dca799fc       1.00      1.00      1.00      2100
        T1105_c521e0a70b243a0cf9217907ca3c6d27       1.00      1.00      1.00      2000
        T1105_c76968acda4aa1673dadcd67f3ab7664       1.00      1.00      1.00      1300
        T1105_e6715e61f5df646692c624b3499384c4       1.00      1.00      1.00      5700
    T1105_eb814e03-811a-467a-bc6d-dcd453750fa2       1.00      1.00      1.00     15000
        T1112_257313a3c93e3bb7dfb60d6753b09e34       1.00      1.00      1.00       300
        T1112_34041639e6e501856ecaf5969ee29c76       1.00      1.00      1.00       300
        T1112_35c0360d226cf38104f300d9d57ce60e       1.00      1.00      1.00       300
        T1112_4bfb5f265a5ce07af6bf10da113af7db       1.00      1.00      1.00       300
        T1112_7fe6a66d03f4dbfc022609ba311c2b11       1.00      1.00      1.00       300
        T1112_ba6f6214dbd17c54001e0a163b60f151       1.00      1.00      1.00       300
        T1112_cab7b85611a290c0769546bfa9d6f962       1.00      1.00      1.00       300
        T1112_cd8be0e6b873919da25530a2c7ea6750       1.00      1.00      1.00       200
        T1112_e74d2fb4ef5fa6c766a4151554033697       1.00      1.00      1.00       300
        T1112_e7a987cbef27263e666e5b096488dc55       1.00      1.00      1.00      1800
        T1112_fa4ba6a06b4a5cd955ea5a60fae24281       1.00      1.00      1.00       300
        T1112_fd992e8ecfdac9b56dd6868904044827       0.99      1.00      1.00       300
    T1113_316251ed-6a28-4013-812b-ddf5b5b007f8       1.00      1.00      1.00       500
        T1115_70795de7cbb842edb029b3378c27c008       1.00      1.00      1.00      1600
    T1115_b007fe0c-c6b0-4fda-915c-255bbc070de2       0.00      0.00      0.00       100
        T1119_344e7eaf650763e0d3e9f02e62c1cf4b       1.00      1.00      1.00      1900
        T1119_7121cdf93b951311be9d7078c602efdc       1.00      1.00      1.00      2000
        T1120_7b9c7afaefa59aab759b49af0d699ac1       1.00      1.00      1.00       600
        T1123_372e6f46fca18e4f1b43209c20ffafa2       1.00      1.00      1.00       600
    T1124_fa6e8607-e0b1-425d-8924-9b894da5a002       0.00      0.00      0.00       100
        T1125_da86001b5081fcf773d8e62f22cf2b00       1.00      1.00      1.00       600
    T1135_530e47c6-8592-42bf-91df-c59ffbd8541b       0.00      0.00      0.00       100
    T1135_deeac480-5c2a-42b5-90bb-41675ee53c7e       0.04      0.01      0.02       100
    T1137.002_e2af3c3ab1b0f659c874b8af58c49759       1.00      1.00      1.00       600
        T1137_12ad9edefc86af07700fbf49bfdac6ba       1.00      1.00      1.00      1300
        T1201_38f6f0e50a6b196140ec40d3dc9cc9e6       0.00      0.00      0.00       100
        T1201_57296a2ddbeb7423c05feef2fe972111       0.00      0.00      0.00       100
    T1204.002_522f3f35cd013e63830fa555495a0081       1.00      1.00      1.00      1000
        T1217_69bbe2183fa09c00ccaac62d48e214f8       1.00      1.00      1.00       400
        T1217_f7a0f7d704aa52a764d9d1bee81e65d6       0.00      0.00      0.00       100
        T1219_7dabcbecab0334b115feefab1630f84a       1.00      1.00      1.00      6700
        T1219_af8cb2bf9b436aae5c106a0a9c207e14       1.00      1.00      1.00     10400
        T1219_f1b3fca18d7465cd10e5a7477a3bf97d       1.00      1.00      1.00      5000
    T1482_6131397e-7765-424e-a594-3d7fb2d93a6a       1.00      1.00      1.00       500
        T1482_cfb61005899996469ae3023796792ca5       0.00      0.00      0.00       100
        T1486_d82ceb9939d3d920ee550187ad8235c8       1.00      1.00      1.00       400
        T1490_2d53d6fabd39bf9c70b0dfcdfbbc926d       0.00      0.00      0.00       100
        T1490_8467c994685ccf178db166964bd80fab       0.00      0.00      0.00       200
        T1490_9e5e4c0655fd1b5be88bd40b8251175f       0.03      0.02      0.02       100
        T1490_c156ac5c9fa67080365268d95f29053d       0.00      0.00      0.00       100
        T1490_c8f329d2847ede593b6cb4a1ec6120fb       1.00      1.00      1.00      1000
        T1490_e90756bb6dcd21462dc4cc452661df91       0.01      0.39      0.03       100
    T1491_47d08617-5ce1-424a-8cc5-c9c978ce6bf9       1.00      1.00      1.00       500
    T1491_68235976-2404-42a8-9105-68230cfef562       1.00      1.00      1.00       700
    T1496_46da2385-cf37-49cb-ba4b-a739c7a19de4       1.00      1.00      1.00      8200
T1497.001_1258b063-27d6-489b-a677-4807faacf868       0.00      0.00      0.00       100
T1497.001_5dc841fd-28ad-40e2-b10e-fb007fe09e81       0.00      0.00      0.00       100
T1497.001_7a6ba833-de40-466a-8969-5c37b13603e0       0.00      0.00      0.00       100
    T1499_2fe2d5e6-7b06-4fc0-bf71-6966a1226731       0.00      0.00      0.00       100
T1518.001_2dece965-37a0-4f70-a391-0f30e3331aba       0.00      0.00      0.00       100
    T1518.001_33a24ff44719e6ac0614b58f8c9a7c72       0.00      0.00      0.00       200
    T1518.001_b8453a5fe06b24aea12b27592d5c3d3a       0.00      0.00      0.00       100
        T1518_8ddfaf982ab359cda13626b870ccb339       1.00      1.00      1.00       200
    T1518_c9be8043-a445-4cbf-b77b-ed7bb007fc7c       1.00      1.00      1.00       100
        T1531_aa6b15485a5f50ced34d87fda177b758       0.14      0.03      0.05       200
        T1531_b25ae80dad74142fafb510e9c1949ace       0.08      0.24      0.12       200
    T1546.013_f9a968af61d36983448c74cca5464e17       1.00      1.00      1.00      1500
    T1547.001_0dbdf1a2a87e718a6ac8a8e3415a7fac       1.00      1.00      1.00       700
    T1547.001_163b023f43aba758d36f524d146cb8ea       1.00      1.00      1.00       500
    T1547.001_1f15ab22c39a9b6bb2bb0d77276dfcb3       1.00      1.00      1.00       600
    T1547.001_4b71ebb2f6f6a01235ba240fa40ce978       1.00      1.00      1.00       200
    T1547.001_777043894e42d2aae3881e63f6c76d33       1.00      1.00      1.00       200
    T1547.001_d3ef4145e4144fd694514b1c5cc17350       1.00      1.00      1.00       500
    T1547.004_0856714c9810ac55b53e9964d02958a0       1.00      1.00      1.00       200
    T1547.004_aa147165f6c116cb0b0f944abe1db8ce       1.00      1.00      1.00       200
    T1547.009_501af516bd8b24fee0c7c650ae5cc861       1.00      1.00      1.00      1000
    T1547.009_b6e5c895c6709fe289352ee23f062229       1.00      1.00      1.00       800
    T1547.010_4593d72a5145e3f494421ac772d37464       1.00      1.00      1.00       600
        T1547_fe9eeee9a7b339089e5fa634b08522c1       1.00      1.00      1.00      2200
T1548.002_665432a4-42e7-4ee1-af19-a9a8c9455d0c       1.00      1.00      1.00       200
    T1552.002_3e5b04b8ee0a1a4950da8f35d95e65fc       0.03      0.03      0.03       200
        T1560_a1ee301b0508747b468d578a14e5c1a5       1.00      1.00      1.00     21600
    T1562.001_43e3334362b140924f001b256b229ee5       1.00      1.00      1.00       200
    T1562.002_6a8d25d65a7d481dc479f89c62af1e6a       1.00      1.00      1.00       600
    T1562.002_94f51bf01a7036fe02d07b4c18967669       0.00      0.00      0.00       100
    T1562.004_280003641a5cddf916c4f2bf605a71d3       0.00      0.00      0.00       200
    T1562.004_41627f71f968225b9f162cb76d16bd9d       1.00      1.00      1.00      1100
    T1562.004_5b93df032e230056c21a3e57334f77d1       0.00      0.00      0.00       100
    T1562.004_8d0a4585e7c4646185a912b14cd9cb46       0.00      0.00      0.00       100
    T1562.004_8fe59e288f10a486dc8b44bc872019ff       1.00      1.00      1.00       300
    T1564.001_66a5fd5f244819181f074dd082a28905       0.50      1.00      0.67       500
    T1564.001_dce51e632abdfe5392c7c1f942ac9273       0.00      0.00      0.00       500
    T1564.003_9a2edad4053a2b59fb9167a9bc29e7dc       0.61      0.99      0.76       200
    T1564.004_28862487a99f5f89bc0d68c87396c7e9       1.00      1.00      1.00       600
    T1564.004_76b6066fe170d38215251102e42be973       1.00      1.00      1.00      1600
        T1564_dedfa0a54c9c13ce5714a0dc2e1f5d1a       0.00      0.00      0.00       100
    T1566.001_1afaec09315ab71fdfb167175e8a019a       1.00      1.00      1.00       800
    T1574.001_63bbedafba2f541552ac3579e9e3737b       1.00      1.00      1.00      6200
    T1574.011_72249c1e9ffe7d8f30243d838e0791ca       1.00      1.00      1.00       600
                                        benign       1.00      1.00      1.00    134563

                                      accuracy                           0.97    310263
                                     macro avg       0.60      0.61      0.60    310263
                                  weighted avg       0.97      0.97      0.97    310263

